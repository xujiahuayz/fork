(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    484304,      10374]
NotebookOptionsPosition[    458334,       9960]
NotebookOutlinePosition[    458733,       9976]
CellTagsIndexPosition[    458690,       9973]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"$Assumptions", "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Lambda]", "_"], ">", "0"}], "&&", 
   RowBox[{"f", ">", "0"}], "&&", 
   RowBox[{"\[CapitalDelta]", ">", "0"}], "&&", 
   RowBox[{"t1", ">=", "0"}], "&&", 
   RowBox[{"t2", ">=", "0"}], " ", "&&", 
   RowBox[{"a", "<", "1"}], " ", "&&", " ", 
   RowBox[{"b", " ", ">", "0"}]}]}]], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"020414f0-c78a-45d0-8c44-c6b084e7cda5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Lambda]", "_"], ">", "0"}], "&&", 
  RowBox[{"f", ">", "0"}], "&&", 
  RowBox[{"\[CapitalDelta]", ">", "0"}], "&&", 
  RowBox[{"t1", "\[GreaterEqual]", "0"}], "&&", 
  RowBox[{"t2", "\[GreaterEqual]", "0"}], "&&", 
  RowBox[{"a", "<", "1"}], "&&", 
  RowBox[{"b", ">", "0"}]}]], "Output",
 CellChangeTimes->{3.939566546357346*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"4ef271ea-95cf-4b31-8b8e-a4c76f749bd7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"forkrate", "[", 
   RowBox[{"delta_", ",", "n_", ",", "L_", ",", "f_"}], "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{"n", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
        RowBox[{
         FractionBox[
          RowBox[{"\[Lambda]", " ", 
           RowBox[{"p", "[", 
            RowBox[{"\[Lambda]", ",", "n", ",", "L", ",", "f"}], "]"}]}], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"x", " ", "\[Lambda]", " "}]]], 
         RowBox[{"\[DifferentialD]", "\[Lambda]"}]}]}], ")"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
         RowBox[{
          FractionBox[
           RowBox[{" ", 
            RowBox[{"p", "[", 
             RowBox[{"\[Lambda]", ",", "n", ",", "L", ",", "f"}], "]"}]}], 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"delta", "+", "x"}], ")"}], " ", "\[Lambda]", " "}]]], 
          RowBox[{"\[DifferentialD]", "\[Lambda]"}]}]}], ")"}], 
       RowBox[{"n", "-", "1"}]], " ", 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.9298021756904593`*^9, 3.929802187944765*^9}, {
  3.9298022743389397`*^9, 3.929802416453792*^9}, {3.929802485182992*^9, 
  3.929802490630247*^9}, {3.929802535717001*^9, 3.9298025467700233`*^9}, {
  3.929873302441929*^9, 3.929873311908224*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"f7d6b2ef-0140-4f01-8384-e5323fbc68f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "[", 
   RowBox[{"\[Lambda]_", ",", "n_", ",", "L_", ",", "f_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    FractionBox[
     SqrtBox[
      RowBox[{"f", "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "\[Pi]", "   ", "\[Lambda]"}], ")"}]}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["b", "i"], "-", 
           RowBox[{"f", " ", "\[Lambda]"}]}], ")"}], "2"], 
        RowBox[{"2", " ", "f", " ", "\[Lambda]"}]], " "}]]]}], 
   "n"]}]], "Input",
 CellChangeTimes->{{3.929802513192709*^9, 3.929802688427099*^9}, {
  3.929802815193858*^9, 3.9298028203089037`*^9}, {3.929802968114642*^9, 
  3.929802969862315*^9}, {3.929803094685527*^9, 3.929803096404834*^9}, {
  3.929872530601479*^9, 3.929872549306632*^9}, {3.929873273855749*^9, 
  3.929873300376574*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"72090067-a333-448b-8ead-f5e7c6503f4b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pb", "=", 
  FractionBox[
   SqrtBox[
    RowBox[{"f", "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", "\[Pi]", "   ", "\[Lambda]"}], ")"}]}]], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"b", "-", 
         RowBox[{"f", " ", "\[Lambda]"}]}], ")"}], "2"], 
      RowBox[{"2", " ", "f", " ", "\[Lambda]"}]], " "}]]]}]], "Input",
 CellChangeTimes->{{3.9395663927349358`*^9, 3.9395664236929407`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"5451c729-01b5-4500-b5f6-345df885032c"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"b", "-", 
         RowBox[{"f", " ", "\[Lambda]"}]}], ")"}], "2"], 
      RowBox[{"2", " ", "f", " ", "\[Lambda]"}]]}]], " ", 
   SqrtBox[
    FractionBox["f", "\[Lambda]"]]}], 
  SqrtBox[
   RowBox[{"2", " ", "\[Pi]"}]]]], "Output",
 CellChangeTimes->{3.939566424826086*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"d3116fae-3b4d-4156-a698-9097d388f45e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"\[Lambda]", "\[Cross]", 
     FractionBox[
      SqrtBox[
       RowBox[{"f", "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", "\[Pi]", "   ", "\[Lambda]"}], ")"}]}]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"b", "-", 
            RowBox[{"f", " ", "\[Lambda]"}]}], ")"}], "2"], 
         RowBox[{"2", " ", "f", " ", "\[Lambda]"}]], " "}]]]}], ")"}], 
   RowBox[{"\[DifferentialD]", "\[Lambda]"}]}]}]], "Input",
 CellChangeTimes->{{3.939566453725391*^9, 3.9395664843741407`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"941f8af1-25dd-469d-b704-65f3b312793b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Lambda]", 
      FractionBox[
       SqrtBox[
        RowBox[{"f", "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", "\[Pi]", "   ", "\[Lambda]"}], ")"}]}]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"b", "-", 
             RowBox[{"f", " ", "\[Lambda]"}]}], ")"}], "2"], 
          RowBox[{"2", " ", "f", " ", "\[Lambda]"}]], " "}]]]}], ")"}], 
    RowBox[{"\[DifferentialD]", "\[Lambda]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9395665657847567`*^9, 3.939566576923188*^9}, {
  3.939566834266852*^9, 3.939566854409264*^9}, {3.93956701837726*^9, 
  3.9395670751564617`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"21200215-4f43-486b-91a9-a8660634c3be"],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", "b"}], "f"]], "Output",
 CellChangeTimes->{
  3.939566856235087*^9, {3.939567044377803*^9, 3.939567076382862*^9}},
 CellLabel->"Out[21]=",ExpressionUUID->"78b5c1ca-15f9-4943-b61f-bb62dea55db7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pbint", "[", 
   RowBox[{"b_", ",", "f_"}], "]"}], ":=", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
   RowBox[{
    RowBox[{"\[Lambda]", "\[Cross]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"b", "-", 
             RowBox[{"f", " ", "\[Lambda]"}]}], ")"}], "2"], 
          RowBox[{"2", " ", "f", " ", "\[Lambda]"}]]}]], " ", 
       SqrtBox[
        FractionBox["f", "\[Lambda]"]]}], 
      SqrtBox[
       RowBox[{"2", " ", "\[Pi]"}]]]}], 
    RowBox[{"\[DifferentialD]", "\[Lambda]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.939566747366706*^9, 3.939566765052586*^9}, 
   3.9395668633840427`*^9, {3.939566938931654*^9, 3.939566949837543*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"c3ef1e17-cfb9-45c1-90cf-5b504076beb1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"pbint", "[", 
   RowBox[{"2", ",", "2000"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.939566525464445*^9, 3.939566543877842*^9}, {
  3.939566770999373*^9, 3.939566776462048*^9}, {3.939566806784284*^9, 
  3.939566809091988*^9}, {3.9395668935753183`*^9, 3.93956689374599*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"36a62fd0-4672-40b2-bdfe-25c3abce736f"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*RowBox[{\\\"\[Lambda]\\\", \\\"\[Cross]\\\", \
RowBox[{\\\"(\\\", RowBox[{\\\"10\\\", \\\" \\\", SuperscriptBox[\\\"\
\[ExponentialE]\\\", RowBox[{\\\"-\\\", FractionBox[SuperscriptBox[RowBox[{\\\
\"(\\\", RowBox[{\\\"2\\\", \\\"-\\\", RowBox[{\\\"2000\\\", \\\" \\\", \\\"\
\[Lambda]\\\"}]}], \\\")\\\"}], \\\"2\\\"], RowBox[{\\\"4000\\\", \\\" \\\", \
\\\"\[Lambda]\\\"}]]}]], \\\" \\\", SqrtBox[FractionBox[\\\"10\\\", \\\"\[Pi]\
\\\"]], \\\" \\\", SqrtBox[FractionBox[\\\"1\\\", \\\"\[Lambda]\\\"]]}], \
\\\")\\\"}]}]\\) has evaluated to non-numerical values for all sampling \
points in the region with boundaries \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[Infinity]\\\", \\\",\\\", \\\"0.`\\\"}], \
\\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 18, 14, 27216358805058591887, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.93956686750033*^9, 3.9395668943674603`*^9}, {
  3.939566945610371*^9, 3.939566952045182*^9}},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"850672ca-e032-4818-8194-2429da5096e6"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*RowBox[{\\\"\[Lambda]\\\", \\\"\[Cross]\\\", \
RowBox[{\\\"(\\\", RowBox[{\\\"10\\\", \\\" \\\", SuperscriptBox[\\\"\
\[ExponentialE]\\\", RowBox[{\\\"-\\\", FractionBox[SuperscriptBox[RowBox[{\\\
\"(\\\", RowBox[{\\\"2\\\", \\\"-\\\", RowBox[{\\\"2000\\\", \\\" \\\", \\\"\
\[Lambda]\\\"}]}], \\\")\\\"}], \\\"2\\\"], RowBox[{\\\"4000\\\", \\\" \\\", \
\\\"\[Lambda]\\\"}]]}]], \\\" \\\", SqrtBox[FractionBox[\\\"10\\\", \\\"\[Pi]\
\\\"]], \\\" \\\", SqrtBox[FractionBox[\\\"1\\\", \\\"\[Lambda]\\\"]]}], \
\\\")\\\"}]}]\\) has evaluated to non-numerical values for all sampling \
points in the region with boundaries \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[Infinity]\\\", \\\",\\\", \\\"0.`\\\"}], \
\\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 18, 15, 27216358805058591887, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.93956686750033*^9, 3.9395668943674603`*^9}, {
  3.939566945610371*^9, 3.939566952048134*^9}},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"d4b6a29f-2dec-4e07-b57b-99fce223a08a"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*RowBox[{\\\"\[Lambda]\\\", \\\"\[Cross]\\\", \
RowBox[{\\\"(\\\", RowBox[{\\\"10\\\", \\\" \\\", SuperscriptBox[\\\"\
\[ExponentialE]\\\", RowBox[{\\\"-\\\", FractionBox[SuperscriptBox[RowBox[{\\\
\"(\\\", RowBox[{\\\"2\\\", \\\"-\\\", RowBox[{\\\"2000\\\", \\\" \\\", \\\"\
\[Lambda]\\\"}]}], \\\")\\\"}], \\\"2\\\"], RowBox[{\\\"4000\\\", \\\" \\\", \
\\\"\[Lambda]\\\"}]]}]], \\\" \\\", SqrtBox[FractionBox[\\\"10\\\", \\\"\[Pi]\
\\\"]], \\\" \\\", SqrtBox[FractionBox[\\\"1\\\", \\\"\[Lambda]\\\"]]}], \
\\\")\\\"}]}]\\) has evaluated to non-numerical values for all sampling \
points in the region with boundaries \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\[Infinity]\\\", \\\",\\\", \\\"0.`\\\"}], \
\\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 18, 16, 27216358805058591887, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.93956686750033*^9, 3.9395668943674603`*^9}, {
  3.939566945610371*^9, 3.939566952050322*^9}},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"469b4377-b093-4b3e-bb84-4a5fc23fb921"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"inumr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 18, 17, 27216358805058591887, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.93956686750033*^9, 3.9395668943674603`*^9}, {
  3.939566945610371*^9, 3.939566952052456*^9}},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"31bb0216-ea0b-47f9-aaeb-8d9db77fc079"],

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"\[Lambda]", "\[Cross]", 
    RowBox[{"(", 
     RowBox[{"10", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", "-", 
            RowBox[{"2000", " ", "\[Lambda]"}]}], ")"}], "2"], 
         RowBox[{"4000", " ", "\[Lambda]"}]]}]], " ", 
      SqrtBox[
       FractionBox["10", "\[Pi]"]], " ", 
      SqrtBox[
       FractionBox["1", "\[Lambda]"]]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "0", ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.9395664879582253`*^9, 3.939566537039022*^9, 3.939566777060787*^9, 
   3.939566809477639*^9, {3.9395668675094*^9, 3.9395668943777313`*^9}, {
   3.9395669456201677`*^9, 3.939566952054296*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"7079a9e0-8721-40c4-9443-57e5af8de4fa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"B", "[", "n_", "]"}], ":=", 
  RowBox[{"Total", "[", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"b", ",", "#"}], "]"}], "&"}], ",", "n"}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"a6dc217e-6c2e-4455-85cf-b71f02375ca1"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.929874644625683*^9, 
  3.9298746456496162`*^9}},ExpressionUUID->"ad6ec0f3-f398-49c3-b9cc-\
f85fd383d99a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"b", ",", "#1"}], "]"}], "=", "#2"}], ")"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Range", "[", "12", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "4", ",", "1", ",", "3", ",", "1", ",", "2", ",", "3", ",", "4", ",", 
       "5", ",", "7", ",", "8", ",", "4", ",", "5"}], "}"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.929953611565465*^9, 3.929953612013288*^9}, {
  3.92995382503863*^9, 3.9299538252500896`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"64a18b7c-963b-404d-a931-6ba88c4e9348"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "1", ",", "3", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", 
   ",", "7", ",", "8", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{
  3.929802840264263*^9, 3.929803178843548*^9, 3.929874649168723*^9, 
   3.929953363741067*^9, 3.929953612329373*^9, {3.929953825561057*^9, 
   3.9299538391706877`*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"0d86b39c-e613-4d1e-a43c-9a3123507436"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"p", "[", 
   RowBox[{"\[Lambda]", ",", "2", ",", "L"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.92980301354051*^9, 3.929803025597186*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"d9b755e5-0dbe-4719-a139-77fbcf383869"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"L", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["b", "1"], "-", 
          FractionBox[
           RowBox[{"\[Lambda]", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["b", "1"], "+", 
              SubscriptBox["b", "2"]}], ")"}]}], "L"]}], ")"}], "2"]}], 
      RowBox[{"2", " ", "\[Lambda]", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["b", "1"], "+", 
         SubscriptBox["b", "2"]}], ")"}]}]]}]], "+", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"L", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["b", "2"], "-", 
          FractionBox[
           RowBox[{"\[Lambda]", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["b", "1"], "+", 
              SubscriptBox["b", "2"]}], ")"}]}], "L"]}], ")"}], "2"]}], 
      RowBox[{"2", " ", "\[Lambda]", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["b", "1"], "+", 
         SubscriptBox["b", "2"]}], ")"}]}]]}]]}], 
  RowBox[{"2", " ", 
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", 
   SqrtBox[
    FractionBox[
     RowBox[{"L", " ", "\[Lambda]"}], 
     RowBox[{
      SubscriptBox["b", "1"], "+", 
      SubscriptBox["b", "2"]}]]]}]]], "Output",
 CellChangeTimes->{3.929803029866005*^9, 3.92980314031522*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"c4d0b249-bede-4f74-b939-b009ef485741"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
  RowBox[{
   FractionBox[
    RowBox[{
     SqrtBox[
      RowBox[{"\[Lambda]", " ", 
       RowBox[{"f", " ", "/", " ", 
        RowBox[{"(", 
         RowBox[{"2", " ", "\[Pi]"}], ")"}]}]}]], " "}], 
    RowBox[{" ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"x", " ", "\[Lambda]"}], " ", "+", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["b", "i"], "-", 
           RowBox[{"f", " ", "\[Lambda]"}]}], ")"}], "2"], 
        RowBox[{"2", " ", "f", " ", "\[Lambda]"}]]}]]}]], 
   RowBox[{"\[DifferentialD]", "\[Lambda]"}]}]}]], "Input",
 CellChangeTimes->{
  3.929870781456245*^9, {3.9298708172296877`*^9, 3.9298708234278913`*^9}, {
   3.929870857090239*^9, 3.929870873490456*^9}, {3.929871199578443*^9, 
   3.929871250593154*^9}, 3.929871341168437*^9, {3.92987436309965*^9, 
   3.929874363648988*^9}},ExpressionUUID->"1f3eb08c-6d40-4b9e-893d-\
1c72db607ad6"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{"2", " ", 
          SubscriptBox["b", "i"], " ", 
          RowBox[{"(", 
            RowBox[{"f", "-", 
              RowBox[{
                SqrtBox[
                 RowBox[{"f", "+", "x"}]], " ", 
                SqrtBox[
                 FractionBox["f", 
                  SubsuperscriptBox["b", "i", "2"]]], " ", 
                SubscriptBox["b", "i"]}]}], ")"}]}], "f"]], " ", 
      RowBox[{"(", 
        RowBox[{"f", "+", 
          FractionBox[
           RowBox[{"2", " ", "f", " ", 
             SqrtBox[
              RowBox[{"f", "+", "x"}]]}], 
           SqrtBox[
            FractionBox["f", 
             SubsuperscriptBox["b", "i", "2"]]]]}], ")"}]}], 
    RowBox[{"2", " ", 
      SqrtBox["2"], " ", 
      SqrtBox["f"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
         RowBox[{"f", "+", "x"}], ")"}], 
       RowBox[{"3", "/", "2"}]]}]], 
   RowBox[{
     RowBox[{
       RowBox[{"Re", "[", 
         RowBox[{"f", "+", "x"}], "]"}], ">", "0"}], "&&", 
     RowBox[{
       RowBox[{"Re", "[", 
         FractionBox[
          SubsuperscriptBox["b", "i", "2"], "f"], "]"}], ">", "0"}]}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{
  3.929870879726947*^9, {3.929871262563345*^9, 3.929871275229968*^9}, 
   3.929871352802478*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"a2d92866-5a32-4466-adef-8e88aad8234d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SubsuperscriptBox["\[Integral]", "ll", "\[Infinity]"], 
     RowBox[{
      FractionBox[
       SqrtBox[
        RowBox[{"f", "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", "\[Pi]", "   ", "\[Lambda]"}], ")"}]}]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["b", "i"], "-", 
             RowBox[{"f", " ", "\[Lambda]"}]}], ")"}], "2"], 
          RowBox[{"2", " ", "f", " ", "\[Lambda]"}]], " "}]]], 
      RowBox[{"\[DifferentialD]", "\[Lambda]"}]}]}], "n"], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["b", "i"], ">", "0"}], "&&", 
    RowBox[{"f", ">", "0"}], "&&", 
    RowBox[{"ll", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9298709059983892`*^9, 3.9298709115984173`*^9}, {
   3.929871299589826*^9, 3.929871315582662*^9}, 3.929871350586011*^9, {
   3.929879400935857*^9, 3.929879473890768*^9}, {3.929880085806527*^9, 
   3.929880095711911*^9}, 3.929880225846633*^9, {3.929881896719708*^9, 
   3.929881915022957*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"e33da255-bb3e-48ae-b044-a8ec062bd7a7"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"Erfc", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"f", " ", "ll"}], "-", 
      SubscriptBox["b", "i"]}], 
     RowBox[{
      SqrtBox["2"], " ", 
      SqrtBox[
       RowBox[{"f", " ", "ll"}]]}]], "]"}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", 
      SubscriptBox["b", "i"]}]], " ", 
    RowBox[{"Erfc", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"f", " ", "ll"}], "+", 
       SubscriptBox["b", "i"]}], 
      RowBox[{
       SqrtBox["2"], " ", 
       SqrtBox[
        RowBox[{"f", " ", "ll"}]]}]], "]"}]}]}], 
  RowBox[{"2", " ", "n"}]]], "Output",
 CellChangeTimes->{3.929880322244153*^9, 3.929882384083477*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"6d95f80d-0404-4bd4-ad6a-4ecb35ac4fd6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "13"}], " ", "f"}], "+", 
        SubscriptBox["b", "i"]}], 
       RowBox[{
        SqrtBox["26"], " ", 
        SqrtBox["f"]}]], "]"}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        SubscriptBox["b", "i"]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"13", " ", "f"}], "+", 
            SubscriptBox["b", "i"]}], 
           RowBox[{
            SqrtBox["26"], " ", 
            SqrtBox["f"]}]], "]"}]}], "+", 
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{
           RowBox[{"41", " ", "f"}], "+", 
           SubscriptBox["b", "i"]}], 
          RowBox[{
           SqrtBox["82"], " ", 
           SqrtBox["f"]}]], "]"}]}], ")"}]}], "+", 
     RowBox[{"Erfc", "[", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "41"}], " ", "f"}], "+", 
        SubscriptBox["b", "i"]}], 
       RowBox[{
        SqrtBox["82"], " ", 
        SqrtBox["f"]}]], "]"}]}], 
    RowBox[{"2", " ", "n"}]], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["b", "i"], ">", "0"}], "&&", 
    RowBox[{"f", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.929880158495583*^9, 3.929880172219071*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"b1add258-7ac8-4d66-a894-e412ecc86e73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         SqrtBox[
          RowBox[{"p", " ", "f"}]]}], "+", 
        SubscriptBox["b", "i"]}], 
       RowBox[{" ", 
        SqrtBox[
         RowBox[{"2", " ", "p", " ", "f"}]]}]], "]"}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        SubscriptBox["b", "i"]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Erf", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"p", " ", "f"}], "+", 
            SubscriptBox["b", "i"]}], 
           RowBox[{" ", 
            SqrtBox[
             RowBox[{"2", " ", "p", " ", "f"}]]}]], "]"}]}], "+", 
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{
           RowBox[{"q", " ", "f"}], "+", 
           SubscriptBox["b", "i"]}], 
          RowBox[{" ", 
           SqrtBox[
            RowBox[{"2", " ", "q", " ", "f"}]]}]], "]"}]}], ")"}]}], "+", 
     RowBox[{"Erfc", "[", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "q"}], " ", "f"}], "+", 
        SubscriptBox["b", "i"]}], 
       RowBox[{" ", 
        SqrtBox[
         RowBox[{"2", " ", "q", " ", "f"}]]}]], "]"}]}], 
    RowBox[{"2", " ", "n"}]], ",", 
   RowBox[{"q", "->", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9298802762098513`*^9, 3.929880351195476*^9}, {
  3.929880421631452*^9, 3.929880452392329*^9}, {3.92988050009673*^9, 
  3.929880539074634*^9}},ExpressionUUID->"0460b9cf-1e53-4961-8b19-\
b2a0fc8672e8"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    RowBox[{"1", "+", 
      RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{
           RowBox[{
             RowBox[{"-", "f"}], " ", "p"}], "+", 
           SubscriptBox["b", "i"]}], 
         RowBox[{
           SqrtBox["2"], " ", 
           SqrtBox[
            RowBox[{"f", " ", "p"}]]}]], "]"}], "+", 
      RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
           SubscriptBox["b", "i"]}]], " ", 
        RowBox[{"(", 
          RowBox[{"1", "-", 
            RowBox[{"Erf", "[", 
              FractionBox[
               RowBox[{
                 RowBox[{"f", " ", "p"}], "+", 
                 SubscriptBox["b", "i"]}], 
               RowBox[{
                 SqrtBox["2"], " ", 
                 SqrtBox[
                  RowBox[{"f", " ", "p"}]]}]], "]"}]}], ")"}]}]}], 
    RowBox[{"2", " ", "n"}]], 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
        TagBox[
         TooltipBox["\"condition\"", 
          TagBox[
           RowBox[{
             RowBox[{
               RowBox[{"(", 
                 RowBox[{
                   FractionBox["1", "n"], "|", 
                   RowBox[{"Erf", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "f"}], " ", "p"}], "+", 
                    SubscriptBox["b", "i"]}], 
                    RowBox[{
                    SqrtBox["2"], " ", 
                    SqrtBox["f"], " ", 
                    SqrtBox["p"]}]], "]"}], "|", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    SubscriptBox["b", "i"]}]], "|", 
                   RowBox[{"Erf", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"f", " ", "p"}], "+", 
                    SubscriptBox["b", "i"]}], 
                    RowBox[{
                    SqrtBox["2"], " ", 
                    SqrtBox["f"], " ", 
                    SqrtBox["p"]}]], "]"}], "|", 
                   SubscriptBox["b", "i"]}], ")"}], "\[Element]", 
               TemplateBox[{}, "Reals"]}], "&&", 
             RowBox[{
               SqrtBox["f"], ">", "0"}]}], Short[#, 7]& ]], Annotation[#, 
          Short[
           And[
            Element[
             Alternatives[$CellContext`n^(-1), 
              Erf[
              2^Rational[-1, 2] $CellContext`f^Rational[-1, 2] $CellContext`p^
                Rational[-1, 2] ((-$CellContext`f) $CellContext`p + 
                Subscript[$CellContext`b, $CellContext`i])], 
              E^(2 Subscript[$CellContext`b, $CellContext`i]), 
              Erf[
              2^Rational[-1, 2] $CellContext`f^Rational[-1, 2] $CellContext`p^
                Rational[-1, 2] ($CellContext`f $CellContext`p + 
                Subscript[$CellContext`b, $CellContext`i])], 
              Subscript[$CellContext`b, $CellContext`i]], 
             Reals], $CellContext`f^Rational[1, 2] > 0], 7], "Tooltip"]& ], 
        "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["And", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["1992", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]}, "IconizedObject"]], 
    And[
     Element[
      Alternatives[$CellContext`n^(-1), 
       Erf[
       2^Rational[-1, 2] $CellContext`f^Rational[-1, 2] $CellContext`p^
         Rational[-1, 2] ((-$CellContext`f) $CellContext`p + 
         Subscript[$CellContext`b, $CellContext`i])], 
       E^(2 Subscript[$CellContext`b, $CellContext`i]), 
       Erf[
       2^Rational[-1, 2] $CellContext`f^Rational[-1, 2] $CellContext`p^
         Rational[-1, 2] ($CellContext`f $CellContext`p + 
         Subscript[$CellContext`b, $CellContext`i])], 
       Subscript[$CellContext`b, $CellContext`i]], Reals], $CellContext`f^
      Rational[1, 2] > 0], SelectWithContents -> True, Selectable -> False]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.92988054823627*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"94520574-7bde-4dde-ad19-e835dddd83d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "+", 
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "f"}], " ", "p"}], "+", 
        SubscriptBox["b", "i"]}], 
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{"f", " ", "p"}]]}]], "]"}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        SubscriptBox["b", "i"]}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{
           RowBox[{"f", " ", "p"}], "+", 
           SubscriptBox["b", "i"]}], 
          RowBox[{
           SqrtBox["2"], " ", 
           SqrtBox[
            RowBox[{"f", " ", "p"}]]}]], "]"}]}], ")"}]}]}], 
    RowBox[{"2", " ", "n"}]], ",", 
   RowBox[{"p", "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9298805885990562`*^9, 3.9298805944899054`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"8c6da7ab-d741-4878-b28e-4a896b4a16c6"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.9298819095837927`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"aa27ef92-f4f7-4a54-81a8-d4b794d0d799"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"aa", "[", 
  RowBox[{"a", ",", "\[Infinity]"}], "]"}]], "Input",
 CellChangeTimes->{{3.929880357773193*^9, 3.9298803953079844`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"18236392-ae97-4c02-add7-501b5e4154b0"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"Erf", "[", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "a"}], " ", "f"}], "+", 
      SubscriptBox["b", "i"]}], 
     RowBox[{
      SqrtBox["2"], " ", 
      SqrtBox[
       RowBox[{"a", " ", "f"}]]}]], "]"}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", 
      SubscriptBox["b", "i"]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"a", " ", "f"}], "+", 
          SubscriptBox["b", "i"]}], 
         RowBox[{
          SqrtBox["2"], " ", 
          SqrtBox[
           RowBox[{"a", " ", "f"}]]}]], "]"}]}], "+", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"f", " ", "\[Infinity]"}], "+", 
         SubscriptBox["b", "i"]}], 
        SqrtBox[
         RowBox[{"f", " ", "\[Infinity]"}]]], "]"}]}], ")"}]}], "+", 
   RowBox[{"Erfc", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"f", " ", 
       RowBox[{"(", 
        RowBox[{"-", "\[Infinity]"}], ")"}]}], "+", 
      SubscriptBox["b", "i"]}], 
     SqrtBox[
      RowBox[{"f", " ", "\[Infinity]"}]]], "]"}]}], 
  RowBox[{"2", " ", "n"}]]], "Input",
 CellChangeTimes->{3.929880428367753*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"18defeb8-4287-4d83-a296-e9cc6f53c0dd"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{"Erf", "[", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "a"}], " ", "f"}], "+", 
      SubscriptBox["b", "i"]}], 
     RowBox[{
      SqrtBox["2"], " ", 
      SqrtBox[
       RowBox[{"a", " ", "f"}]]}]], "]"}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", 
      SubscriptBox["b", "i"]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"a", " ", "f"}], "+", 
          SubscriptBox["b", "i"]}], 
         RowBox[{
          SqrtBox["2"], " ", 
          SqrtBox[
           RowBox[{"a", " ", "f"}]]}]], "]"}]}], "+", 
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"f", " ", "\[Infinity]"}], "+", 
         SubscriptBox["b", "i"]}], 
        SqrtBox[
         RowBox[{"f", " ", "\[Infinity]"}]]], "]"}]}], ")"}]}], "+", 
   RowBox[{"Erfc", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"f", " ", 
       RowBox[{"(", 
        RowBox[{"-", "\[Infinity]"}], ")"}]}], "+", 
      SubscriptBox["b", "i"]}], 
     SqrtBox[
      RowBox[{"f", " ", "\[Infinity]"}]]], "]"}]}], 
  RowBox[{"2", " ", "n"}]]], "Output",
 CellChangeTimes->{3.929880428401342*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"89c377d2-949c-441a-92ee-f0984648ada1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "13", "l"], 
  RowBox[{
   FractionBox[
    SqrtBox[
     RowBox[{"f", "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "\[Pi]", "   ", "\[Lambda]"}], ")"}]}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["b", "i"], "-", 
          RowBox[{"f", " ", "\[Lambda]"}]}], ")"}], "2"], 
       RowBox[{"2", " ", "f", " ", "\[Lambda]"}]], " "}]]], 
   RowBox[{"\[DifferentialD]", "\[Lambda]"}]}]}]], "Input",
 CellChangeTimes->{{3.9298796050046673`*^9, 3.9298796050053596`*^9}, {
  3.929880074790085*^9, 
  3.929880080927001*^9}},ExpressionUUID->"2624f0dd-0b49-4d01-836b-\
9533ba658820"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "ll", "\[Infinity]"], 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "f"}], " ", "\[Lambda]"}], "+", 
           SubscriptBox["b", "i"]}], ")"}], "2"], 
        RowBox[{"2", " ", "f", " ", "\[Lambda]"}]]}]], " ", 
     SqrtBox[
      FractionBox["f", "\[Lambda]"]]}], 
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]]], 
   RowBox[{"\[DifferentialD]", "\[Lambda]"}]}]}]], "Input",
 CellChangeTimes->{{3.929879722614781*^9, 3.929879722616622*^9}, {
  3.929879757220339*^9, 3.929879757359549*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"215e534d-c1b3-4a4e-b1d6-db9df5c46e0e"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.929880069513726*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"956b8ff0-3efe-417b-b8e9-d597ef6acb74"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
  RowBox[{
   FractionBox[
    RowBox[{" ", "1"}], 
    RowBox[{" ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"x", " ", "\[Lambda]"}], " ", "+", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", "\[Lambda]", "]"}], "-", "mu"}], ")"}], "2"], 
        RowBox[{"2", " ", 
         SuperscriptBox["sigma", "2"]}]]}]]}]], 
   RowBox[{"\[DifferentialD]", "\[Lambda]"}]}]}]], "Input",
 CellChangeTimes->{{3.9299605596478367`*^9, 3.929960604510112*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"55d0cb9d-5afd-4638-bdd8-709fac245591"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "x"}], " ", "\[Lambda]"}], "-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "mu"}], "+", 
         RowBox[{"Log", "[", "\[Lambda]", "]"}]}], ")"}], "2"], 
      RowBox[{"2", " ", 
       SuperscriptBox["sigma", "2"]}]]}]], 
   RowBox[{"\[DifferentialD]", "\[Lambda]"}]}]}]], "Output",
 CellChangeTimes->{3.929960723607723*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"c86a41de-ebc9-444d-acbb-ef25940c6f31"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
       RowBox[{
        FractionBox[
         RowBox[{"\[Lambda]", " ", 
          FractionBox[
           FractionBox[
            SqrtBox[
             RowBox[{"f", "/", 
              RowBox[{"(", 
               RowBox[{"2", " ", "\[Pi]", "   ", "\[Lambda]"}], ")"}]}]], 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              FractionBox[
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["b", "i"], "-", 
                  RowBox[{"f", " ", "\[Lambda]"}]}], ")"}], "2"], 
               RowBox[{"2", " ", "f", " ", "\[Lambda]"}]], " "}]]], "n"]}], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"x", " ", "\[Lambda]", " "}]]], 
        RowBox[{"\[DifferentialD]", "\[Lambda]"}]}]}]}], ")"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
        RowBox[{
         FractionBox[
          RowBox[{" ", 
           FractionBox[
            FractionBox[
             SqrtBox[
              RowBox[{"f", "/", 
               RowBox[{"(", 
                RowBox[{"2", " ", "\[Pi]", "   ", "\[Lambda]"}], ")"}]}]], 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               FractionBox[
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SubscriptBox["b", "i"], "-", 
                   RowBox[{"f", " ", "\[Lambda]"}]}], ")"}], "2"], 
                RowBox[{"2", " ", "f", " ", "\[Lambda]"}]], " "}]]], "n"]}], 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"delta", "+", "x"}], ")"}], " ", "\[Lambda]", " "}]]], 
         RowBox[{"\[DifferentialD]", "\[Lambda]"}]}]}]}], ")"}], 
     RowBox[{"n", "-", "1"}]]}], ",", 
   RowBox[{
    RowBox[{"f", ">", "0"}], "&&", 
    RowBox[{"x", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.929873684862979*^9, 3.92987374297765*^9}, {
  3.929873774415121*^9, 3.929873781257068*^9}, {3.929873825443699*^9, 
  3.9298738519308033`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"1c8f092d-338a-48d1-ad7e-0f7b522e76e4"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     TemplateBox[{
       FractionBox[
        RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
             RowBox[{"-", 
               FractionBox[
                SqrtBox[
                 RowBox[{
                   RowBox[{"2", " ", "delta"}], "+", "f", "+", 
                   RowBox[{"2", " ", "x"}]}]], 
                RowBox[{
                  SqrtBox["f"], " ", 
                  SqrtBox[
                   FractionBox["1", 
                    SubsuperscriptBox["b", "i", "2"]]]}]]}], "+", 
             SubscriptBox["b", "i"]}]], " ", 
          SqrtBox["f"]}], 
        RowBox[{"n", " ", 
          SqrtBox[
           RowBox[{
             RowBox[{"2", " ", "delta"}], "+", "f", "+", 
             RowBox[{"2", " ", "x"}]}]]}]], 
       RowBox[{
         RowBox[{
           RowBox[{"f", "+", 
             RowBox[{"2", " ", "x"}], "+", 
             RowBox[{"2", " ", 
               RowBox[{"Re", "[", "delta", "]"}]}]}], ">", "0"}], "&&", 
         RowBox[{
           FractionBox[
            RowBox[{"Re", "[", 
              SubsuperscriptBox["b", "i", "2"], "]"}], "f"], ">", "0"}]}]},
      "ConditionalExpression"]}], ")"}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}]], " ", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "n"], 
   TemplateBox[{
     FractionBox[
      RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
           RowBox[{"-", 
             FractionBox[
              SqrtBox[
               FractionBox[
                RowBox[{"f", "+", 
                  RowBox[{"2", " ", "x"}]}], "f"]], 
              SqrtBox[
               FractionBox["1", 
                SubsuperscriptBox["b", "i", "2"]]]]}], "+", 
           SubscriptBox["b", "i"]}]], " ", 
        RowBox[{"(", 
          RowBox[{"f", "+", 
            FractionBox[
             SqrtBox[
              RowBox[{"f", " ", 
                RowBox[{"(", 
                  RowBox[{"f", "+", 
                    RowBox[{"2", " ", "x"}]}], ")"}]}]], 
             SqrtBox[
              FractionBox["1", 
               SubsuperscriptBox["b", "i", "2"]]]]}], ")"}]}], 
      RowBox[{
        SqrtBox["f"], " ", "n", " ", 
        SuperscriptBox[
         RowBox[{"(", 
           RowBox[{"f", "+", 
             RowBox[{"2", " ", "x"}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]}]], 
     RowBox[{
       FractionBox[
        RowBox[{"Re", "[", 
          SubsuperscriptBox["b", "i", "2"], "]"}], "f"], ">", "0"}]},
    "ConditionalExpression"]}]}]], "Output",
 CellChangeTimes->{3.929874152959453*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"4ed6148b-7a2d-42ce-aa4e-bd8a65523d3f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"forkrate2", "[", 
   RowBox[{"delta_", ",", "n_", ",", "L_", ",", "f_"}], "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"i", "=", "1"}], "n"], 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           SubscriptBox["b", "i"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SqrtBox[
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"2", " ", "x"}], "f"]}]]}], ")"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            SubscriptBox["b", "i"], 
            SqrtBox[
             RowBox[{" ", 
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"2", " ", "x"}], "f"]}]}]]}]}], ")"}]}]}], 
       RowBox[{"f", " ", 
        SuperscriptBox[
         RowBox[{"(", " ", 
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"2", " ", "x"}], "f"]}], ")"}], 
         RowBox[{"3", "/", "2"}]]}]], ")"}], 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"i", "=", "1"}], "n"], 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           SubscriptBox["b", "i"], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SqrtBox[
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"2", 
                 RowBox[{"(", 
                  RowBox[{"delta", "+", "x"}], ")"}]}], "f"]}]]}], ")"}]}]], 
         " "}], 
        RowBox[{"n", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{"delta", "+", "x"}], ")"}]}], "f"]}]]}]], ")"}], 
      RowBox[{"n", "-", "1"}]], " ", 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]], "Input",
 CellChangeTimes->{
  3.929871049496159*^9, {3.929871080603853*^9, 3.929871145405523*^9}, {
   3.929871336809352*^9, 3.929871372565479*^9}, {3.929871424021921*^9, 
   3.929871486404296*^9}, {3.929871607330576*^9, 3.929871645059869*^9}, {
   3.9298717036745443`*^9, 3.929871753663642*^9}, {3.929871850811767*^9, 
   3.929871855616125*^9}, {3.929871993881767*^9, 3.9298720511388803`*^9}, {
   3.9298728218721113`*^9, 3.929872845483591*^9}, {3.92987288176434*^9, 
   3.92987289100822*^9}, {3.929873044049093*^9, 3.929873057489999*^9}, {
   3.92987440748501*^9, 3.929874616035597*^9}, {3.929874665769058*^9, 
   3.92987481246346*^9}, {3.929874845841503*^9, 3.929874846521884*^9}, {
   3.929875188881994*^9, 3.929875191226129*^9}, 3.929875763868499*^9, {
   3.929875841931888*^9, 3.929875856567005*^9}, 3.929876006734643*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"c521479c-9a94-4e8e-9f81-d57c7b8e3acf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"forkrate3", "[", 
   RowBox[{"delta_", ",", "n_", ",", "L_", ",", "f_"}], "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     FractionBox[
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["b", "i"], 
           SqrtBox[
            RowBox[{" ", 
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"2", " ", "x"}], "f"]}]}]]}]}], ")"}], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"B", "[", "n", "]"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SqrtBox[
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"2", 
                 RowBox[{"(", 
                  RowBox[{"delta", "+", "x"}], ")"}]}], "f"]}]]}], ")"}]}], 
          "+", 
          RowBox[{
           SubscriptBox["b", "i"], 
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"2", 
                 RowBox[{"(", 
                  RowBox[{"delta", "+", "x"}], ")"}]}], "f"]}]], "-", 
             SqrtBox[
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"2", " ", "x"}], "f"]}]]}], ")"}]}]}]]}]}], 
      RowBox[{"f", " ", 
       SuperscriptBox[
        RowBox[{"(", " ", 
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"2", " ", "x"}], "f"]}], ")"}], 
        RowBox[{"3", "/", "2"}]], 
       SuperscriptBox[
        RowBox[{"(", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{"delta", "+", "x"}], ")"}]}], "f"]}]], ")"}], 
        RowBox[{"n", "-", "1"}]]}]], " ", 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.929952548280512*^9, 3.9299525863504744`*^9}, {
  3.929952725607259*^9, 3.9299527957117662`*^9}, {3.929952853404974*^9, 
  3.929952859775527*^9}, {3.929952891143373*^9, 3.929952939470772*^9}, {
  3.929952982137363*^9, 3.9299529823493767`*^9}, {3.929953252110242*^9, 
  3.9299532828802347`*^9}, {3.929953954483574*^9, 
  3.9299539574928493`*^9}},ExpressionUUID->"25942d39-cd3f-43e7-8809-\
0a8d8ee63419"],

Cell[BoxData[
 RowBox[{
  RowBox[{"forkrate4", "[", 
   RowBox[{"delta_", ",", "n_", ",", "L_", ",", "f_"}], "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     FractionBox[
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SubscriptBox["b", "i"], 
           SqrtBox[
            RowBox[{" ", 
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"2", " ", "x"}], "f"]}]}]]}]}], ")"}], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"B", "[", "n", "]"}], 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SqrtBox[
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"2", 
                 RowBox[{"(", 
                  RowBox[{"delta", "+", "x"}], ")"}]}], "f"]}]]}], ")"}]}], 
          "+", 
          RowBox[{
           SubscriptBox["b", "i"], 
           RowBox[{"(", 
            RowBox[{
             SqrtBox[
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"2", 
                 RowBox[{"(", 
                  RowBox[{"delta", "+", "x"}], ")"}]}], "f"]}]], "-", 
             SqrtBox[
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"2", " ", "x"}], "f"]}]]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}], 
           RowBox[{"Log", "[", 
            SqrtBox[
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"2", 
                RowBox[{"(", 
                 RowBox[{"delta", "+", "x"}], ")"}]}], "f"]}]], 
            "]"}]}]}]]}]}], 
      RowBox[{"f", " ", 
       SuperscriptBox[
        RowBox[{"(", " ", 
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"2", " ", "x"}], "f"]}], ")"}], 
        RowBox[{"3", "/", "2"}]]}]], " ", 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.929954140565013*^9, 3.929954208510212*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"093c2cbb-fcfe-4a8d-ae2e-8ce877b7d065"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"forkrate4", "[", 
   RowBox[{"900", ",", "2", ",", "0.3", ",", 
    RowBox[{
     RowBox[{"B", "[", "2", "]"}], "/", "0.3"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9299542167295628`*^9, 3.929954217146264*^9}, {
   3.929954416374571*^9, 3.929954422904725*^9}, 3.929954554612866*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"8307acee-6e39-4dc0-a95b-b03552d14be0"],

Cell[BoxData["0.9999925823405901`"], "Output",
 CellChangeTimes->{3.929954293076391*^9, 3.92995442019872*^9, 
  3.92995452169915*^9, 3.929954649527153*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"b21898a5-cc79-4f2a-bb33-39ce02ce680b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"forkrate3", "[", 
   RowBox[{"2", ",", "2", ",", "0.3", ",", 
    RowBox[{
     RowBox[{"B", "[", "2", "]"}], "/", "0.3"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9299536777642508`*^9, 3.92995367924269*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"fb6bd904-ed48-4ab0-a7e2-dbfd16aa7d17"],

Cell[BoxData["0.23138003363012083`"], "Output",
 CellChangeTimes->{3.929953816462779*^9, 3.929954034044557*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"d72db609-ab86-4a0b-9936-8a74e7d7f522"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"forkrate2", "[", 
   RowBox[{"2", ",", "2", ",", "0.3", ",", 
    RowBox[{
     RowBox[{"B", "[", "2", "]"}], "/", "0.3"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.929803169807415*^9, {3.929803237980669*^9, 3.929803239585516*^9}, {
   3.929805273084894*^9, 3.92980527467946*^9}, {3.929953399304528*^9, 
   3.92995340331359*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"df7b66b5-19cc-45c2-84a5-f666fffbd309"],

Cell[BoxData["0.25430671489645595`"], "Output",
 CellChangeTimes->{3.929953506837863*^9, 3.929953651134098*^9, 
  3.929953941159368*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"374a2263-09eb-462f-bbf9-fcd7ad244415"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"forkrate", "[", 
   RowBox[{"2", ",", "2", ",", "0.3", ",", 
    RowBox[{
     RowBox[{"B", "[", "2", "]"}], "/", "0.3"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.929803417615107*^9, 3.929803421558939*^9}, {
  3.929872660238103*^9, 3.9298726652921553`*^9}, {3.929873328744958*^9, 
  3.929873336021545*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"3a2dd707-8189-4154-86ef-bee8fb841f06"],

Cell[BoxData["0.27752531531141966`"], "Output",
 CellChangeTimes->{3.929872916026868*^9, 3.9298735906098547`*^9, 
  3.929953657560398*^9, 3.9299537905837812`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"77523fd0-cf99-4c89-912b-797e74d2b0a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"forkrate", "[", 
  RowBox[{"0", ",", "2", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.929802854670466*^9, 3.9298028625477123`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"26307ae1-2050-4215-880d-a15094777f79"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.929802879638791*^9, 3.9298029892702417`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"eb9f9b06-67d0-4f4d-b4a9-3b92e95c7501"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ai", "[", "n_", "]"}], ":=", 
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Subscript", "[", 
      RowBox[{"a", ",", "#"}], "]"}], "&"}], ",", "n"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reg", "[", 
   RowBox[{"n_", ",", "L_"}], "]"}], ":=", 
  RowBox[{"ImplicitRegion", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"ai", "[", "n", "]"}], "]"}], "==", "L"}], ",", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ai", "[", "n", "]"}], ",", "0", ",", "L"}], "}"}], "]"}], 
     "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.929293002774648*^9, 3.929293024276474*^9}, {
  3.929331688168933*^9, 3.929331688449147*^9}, {3.9293320908946*^9, 
  3.929332107906106*^9}, {3.929332145532796*^9, 3.929332213101354*^9}, {
  3.929332808263108*^9, 3.929332817947143*^9}, {3.929359968588008*^9, 
  3.929359991585669*^9}, {3.929416877547038*^9, 3.929416877903625*^9}, {
  3.92941698242321*^9, 3.9294169828007793`*^9}, {3.929541044395739*^9, 
  3.929541046542425*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"45bb55d1-edf1-4e8b-bcaa-b47e012aff92"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.92941687651725*^9},ExpressionUUID->"a8fc1697-b0fb-45c7-b080-dcb0722bc18f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot3D", "[", 
  RowBox[{
   RowBox[{"reg", "[", 
    RowBox[{"3", ",", "1"}], "]"}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"Opacity", "[", "0", "]"}], ",", "Red"}], "]"}]}], ",", 
   RowBox[{"PlotPoints", "->", "40"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.929332732463155*^9, 3.929332771878541*^9}, {
  3.929332831779998*^9, 3.929332862076604*^9}, {3.929332907600374*^9, 
  3.9293329260313*^9}, {3.929359997116304*^9, 3.929360009102603*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"5a8d79c7-f70c-4104-88dc-b07b945e72f4"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJykvUGMnceR50nsApqLuRftSXtRz2E5F/GkvbQWVSKtg4ABNIvFai/2SYMF
pL5oTzoY2stqDkPORQ0DMlAYDwxY6MNbeFZSodvGa1jNdsnsnSdXu8yyylKp
KZZZKkqiSNFwX5p70WZlfr/M+P+/zFd2L0Gg8OLliy+/zIh/RkZGRP7JCy//
z//bf3Xu3Ll///i5c//1ufbv3ZNvvXvy9YNNPj/25qX0f2uz/F1sfvL7J279
/sr9TejP3XvvuXvPbG3m333rq0r/b596+9Gn3t4u9B/f21Q+y83/9OGV7394
8mWl/8n5G4+ff2d789X3f5z+t/avP/JS+n+t0B9t7S+88sKFVy4vN7+dH/Cl
PXen0C/drfTvvfzwjZcfXt/809OvX/5C+5Pal893rZ+r8vf7n1f690/7fWV3
8/9N3N54/7NKf/y0/5dXm/nr0L70f6/QH96xfu5vnrJ5+fmTSn/+9N/5G5un
r/fChTtKf/6DQn/tU32vxKd8f2Lve7D5v56S3z6u9NK/DzeffPa1J5+9dVvf
N7Uv/Tq2cTgs9POtfRn3jzdPxeGJp35r43Nz88bpgLx0VOm3Thum9qfcHw3t
87hdvTmNU2ufX//irfK7J25VOr+HH3Sex/OFnvqd6ek9oP9jZnt781Rq303j
IfNS3/PQ5uu4jhN0xpFxFXqap0xP8wad+WB+dH5P6nxCRz6QF53fO5t5OJJ8
Qf/JqaIkuSnvfUPpSV7zx6u7Kg+JD3KqcvJ5lWvoyD16IHJS5b61R9/QP+j5
dZI+5/dL+i1ylfQQPVZ5+7LqPXRwAZyArvjS2pd+3y/z881FpYNT4JbQE66B
c9AVBxf63Cfm+Fnk+AE4syHyf9HbL854zsJwdVH7x/t5f/vvsajtlf/S8HZR
8VnxdlHHXfF2UeeJedbnOm4v6nwrPi9MPu5WPjwX/rQXOavyyHutDLcXZb5S
e+Qd/vB5mDvwhY3XbtUbfS/H/0XVK/QSOnqIHuv87VZ9pT36rOvFouo/64WO
z17lT3vWF/CG9vDXdWdR1x1dRxYVp8A5Hf8DW18WFQfBUZ4Lf+cDnioeLyr+
gt86X75+Me+Htk4tKu6zPsCH58Kf9qx3uq4t6rrCuqTycFj5q/zcrOsbdNYz
1kH48FxdNxd1XWT9hM5nXTcXla+um4vaD/rFc/m986Efup4u6rjQX5VDX5cX
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
0D0O2+P5eC7tWd/hT3vlv2V+l3lcyShO5KzzIj9fgn8/3mSpfvuwXrt/aCR3
Ll/w0f3cHdsPX6/yLv0J+qH9XFnc8fWqPxJ3F9Zr5yPrXT3nvG76fGzj0NZZ
2oMj4j8P6zV8aA+OqP/1esU19Zter/il+6frFU/BS54Lf+cDniquX7f91ZHN
y0FdN+RcJ/GRdSas186H9YZ1TOYx8Zf1p85XW2d13g/rugqd9VL85GEdhz/t
acfvRB6q3/zQ5r2t4yo/N+t7QOc9xX8OboR1XNo/cauOq8hhHfcDk6u2juv+
6ajOJ3Tmm/mBLutskheRz2rH7Jv+Hs34IGfih0/t1a5q/UFP0BuR8/Nt/VV5
buuv6sVx1VfBvVu3NX4v2A/wp72e261qe/jDx3HE8cXxy+14t+9H+wfHqbP8
lb5P8HNTP08dncu6X9LjrjweaxTv5ee1Hnfu8ei6f1+Y/s7jzDI9rbOsp9BH
eVC6r2/9Zx0Xf/5ZeVPDvJBxPCnvofGnW9avFificSXwV3vHzovCOZKfC3l8
isePnOUHcr+Rzmt77ll2q9u57pei/Vl6yfrr9rLoZR2flZ2/r+x3x/Wz4Efo
v6zj5xsfcAdc0fEx+6GO856dy68qDuq5+UrX8Xquu6o4C77qeO7N+IC/es68
Mn/oUeXDc8WuoH3CfdYlHcdmP+g8HtT1UP0dZj/UPJMP6zqs82J2Qmqv5+iH
lvdi9kBqL5/refSqPo/f6TyaPVDl4aadp6/MvjmofHiunqev1L6p59GrOr6M
E3zUjjkwuTqq80l7+MNH5eq25c2t7Jxmr/JBDvQcfFX1QdbZIPeuDyM9RH+c
j9vx0Ed2v+sbf0d+N7fjBa8653ngi/v1wEGPN1JcXs7OBWUdD/HKHses/s1t
0wtbx9fkg3k8tDw3rUN6rr2y9Yn8vnn+sOeb8Vzasy7DX+d5nM/Rz/9o66ns
30J8peeL9PM5xvEaHt+h9sed2XnI6BzGz0/O8g+5X+cse9btX/dLdfUy6Kvr
n9vRbv/yF5zgM78DV3R89iyPebfiDrjC7/ne+YA7mte1W9dB8E/Hed/iu3cr
Pkqe2eWVnbcdaXvWqXq+ulvxGjzW8d+3ePBdXb+q33e3rh8S13a5rbPwl/Zp
/WDdk/mt68GhzeOBnQ/v1nb8Djp8eQ58dN1q/Zd1rfZ31/bnB6aPh7Yv363v
qeO6W8dd7I7LK9uHH2h71rs0nyKf1Y+/b/J208Z7t8oB8gUd+UNe4KN5Aq3/
yDfyLvJc4wb27Fz3qPJ3fXA9Gekhz4U/37udKvrSsWtdD1W/ml9McLjjR9O4
0pW2Tzil5xDj8y33o9F+FDfj51jSPsQHCw534onBcfjTXv3q27P4Y/hI+7QO
eV406x/rlfQnrXO+buo6e3fD6bSnP553LTjQaa/8t9QfM6yvMM7vZN1Ue3PL
4qlaXoXaXy2fw/MwGF+d/71Z3CXPhb/zYV5HcRkeT+HnRfCHj7c/y7/l/jA/
p9L3ndvpZ+GK45DvA2iv73E0wy3HFcHBWu9kr+ImuKh823qt47lf8V73wzcs
PmpP8brGF+3V9YP1Qcezrde01/3bocX9f2BxUHu6Dtbz3r36me/ho/u0xp92
/IWPrGt1P71X35N+6Ty2dVbl4abt7/cs/22/8uG56r/fq/PKPKg8tPXU59Xn
W+Pwmpwxr2p/je1Flxv3d7gfZORnQY51vd+r+unnOu5PEVzqxFVo3tx1bZ9w
weMvR3GcHj9B+1G+isdx0l79zNuz/Bb4KF7N626M6n14Hqz0M+G7xjvt2Xp0
d0P0K9STUj1qz6U9+1z40175b5nfYlRPqNUtkHOMUJdIz/+36zxA97xD5dPW
L33uPF9B1pFOvCFyofzbOuVxCqP4CI+n4Lnw9/MW9En63zmfkfUl2LPuT+K5
fo7k9u/I7nZ72XHF7XdvL+sLdVDSZ/3dTRufvRluyfpS66PcqPgLvur57o3K
X8a5+gEPbfwP6joDnfWLdUTorC81PvpG/T38dPwPZnzYD7Iu0J52Epcd3pP3
lvescUX7JrdtXRvNh9sBbh+4/eH7ed/nj/wIbmfQ3v3sI7+D9ve26cf4vN/9
7LT3uDqRt04cHs/1OAP02eP1Nd7p2iyez+P/wBfN75rnPcJH7ddrqhehngJ0
r78g9FAHSnCsUzdK/bTWz4TjrBfQdV3bmtWfgr/oV+Aj5+Rr6uXQL/SD5+n6
2fLdR/n0nn/Pc/W993VduOXxd9u2P95X/O/ExXscPfzVTmlxdqP4PuTU4wJY
LzzuAP3Q/u/M+KA/Wl9i3+zCdk7icRDuvwFX9H3buuP278i+dnvc/VUS37MG
Lx1f3d7X8d+3ONJ9e4/DGU5rHOl+xWXWDZ2vA6s7sW/xKwdWl62tU9KedST0
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
deetnTrO+r5VnjagK35uVf6qjwt937cbf32vHeVz0uZL856+tHVnWe/J5vcy
jydtvhhn6Opf3jY+No8nX5q+LGp7xbfWz6un8P3iNct7+tLG5+4GdJ2vLeuP
zeNJG3/40175T3x+fK9+5j2UvqjjAV39ZpMdetLGWcY/tVf5X1h7G+fUPts5
Ty+1/7U/FV82oOv4b1X+qhet/4wn/LU/bZyL3Xa/ftb93/3KV+33+yaHrf2/
OB3+t7Ytn+K+jU/jw3vRPk9v6r++19Zmpn/rq9Lu6YW2T3TDzQ3o2s+tzU9O
AwXC+/I72tNP+Gv71v8SB/lg887pzza2LE77ga9zG+fsX37e1w8qH/opjb79
lfHh+98N+P7O8rq5f3Dejn7zfO+f/u53Fs8+b+/98t9Ls6cXOp/nJn/4N+d0
5Al5ga55SI2OXqEH0NEHp4NT4Ap08MXprBPguozX23M66z3rOXS1jxsdOwx7
Cjp2ldOxm7GXoWM3O539Ffsk6OyXnI5/AT8BdPwFTscvht8LOv4vp+MXxr8L
HT+v0zlH4TxExr9Dzz8P5//QNZ7yWPsZ4n2gE6/gdOKZiEuCTnyS03M/Q1yz
zO/VOZ147tenuGzoGm/f6OSNEKct4/zSnE7+G3GY0DXu7qbKc6jHIPPSoVNv
osh5i/fQ8/1D7WeoiwadczGn536GOprQ9ZzlQPsZ6jRDxx/rdOpT46eFrn7F
fe1nuPcGOv4Hp78y3feDXwI6+2Wn536Ge1yhPzbts5zOPbWPTfsv6LqvWWk/
Ex6xv4COver03M9gJ0NX+3BH+xnsQOjYJ07P/Qx2EXTsBKfnfqb1APsBOuu4
03M/g/1wLv779pye+xnWd+h5Wi/O6azz5wb/JvnfyHoZ2pXf3drkb17vzjU9
5zO/52/59ne1H2XdWG7+H6fvGezXgmfTehL8I0VODzb/h1O5D3EVZX4mPAv5
HrTjd9Cz3CHvwd+W8RK/YPDb5XlL8lLWoWa/5/dP81bW72kenp7owQ6R9nV+
pvF4utktOk78Y1wZz6ubF09/8IbN29PTvF6cPxe682eefP6Y7/Xz1+guH3ld
fuZq0ZfveX+ubmY1Df0v9t7VYse94e3Z/7Txho78MD+0E/pJo6OPKm/E3V6v
8kZ75FD9pOanC/445CnjUDiXKuvPdP4azmULrn9g8ryo8pp/V+N3t5Re61u3
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
dQGchz/rAjgPH+xqPffbrbijfuLdil/gLnTwEfymP3wGjzUu8MOKz/Dhs64n
uxW3wVv4q11+UPmD2/QXPuA26yF8eH9wWOflZh0P+LD+Md7QGV/8EiIPte7p
7my+ed5InnQeG57zPfa8rjdtP4Ye+D5Q9pnBXkH/3f+FXT3yr/l+UvbDiQ/2
udjhiZ6bh7wV2v/3p+2bnbdR8hZ2K76Ah/CB7nycP/1X+39R+w8egc88F/xy
/mr/H2/kupYJh/N0BRzO8vfo+xMufDHj4/yz3P34F0Wfb8z7z7oguN1Zp9jP
YYd7nCbvqevwXt3/MM/InfvDkGs/r6C97//Uj9D8cLR3ede48pWdx+3V34GT
fOZ32Mmuf+gl7dFb8FPfa6/qN+3Rf+w1xfcbFSdoD+6AKzoO+xWfaC/2Zb2n
pt1TBS7SXuMnDmt78BF8pT34DB6LPyB9ljjo1F79HQc2L4cVb2kPPtNfsVsT
XeJlru5WHGY8dL5u6nkv9TXCPRK0Zz70HK3NH+1cbmin835U12Ff18UOCHKm
5257VV7B59F+z+0DWQ+u7lrc4PXaXur1Bv4a9zL334n/KJzHo8d+LiL++tQe
vMDepj12u8RDvDjFxYZ8Q8anxBvX+MCNkv+2V3FY4oQTHdx2PuRdQYcPdqS3
1/3C8YbKf8PbHOf87b+f5KTR88++/mWJo/u68Wd8WBcEtzvrF/Ll8fLgEfYz
cZfIu8dvir1IvPAF57NQP1k4x0Ze4PP9yY/N/CufpdoF3BPe8Ucil+iN6Cv7
AM658F8E/aY/rpduZ6Hf8EH/wSHo4BR4CR08Vf90w3GeP7LLff2Q9TL4Zdxf
Az6wTgreBD84/GX/EPhgB+r52Q3dt4R4GuYPeww6fjHkKD+X9g9bPi/tkSfk
l/bIq7fPchnovJfr6f95Oi43pjyu730240NeJvQcx/XDX015ZJ/N+DueiH8t
xDsz/+iLxufvz+I+4MP4gq/Kp8UnwsfPP+Hj/nuNi9qxc+R99Ztyjxb6iNwk
uYMP8oQ80h67C/nV/q+qfvFcX7fh4+uw75PQJ9rzPXaB65+eX+9Xu0Hzuvar
XmM3wZ922C06Dgd2Tr1fn4fcjHDE+63ny82ek3U07NsZD7cj9Xy5+WfFDx3O
1ZhP9wvr+XKLPxD7PcQxIF9+Pgeue/ycrA/g2K0WJwcf7BPk3eOnwZ9RfLbH
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
6/z9Xkv4uN6VupnH5bzjyUbP7Z77tMTTvvCbGR/HjdI/y1NakxfqeVbIP3yY
J+TC64YgF55nrnkfrT4Ucu11ppBTrz+CnMPH68BJPctQvw0+XnfT627TX68/
hN7zXOSc8YMP+0DkXMfB6m2QhxruLc3fJzry5vOYcTjQ4SPx7KF9Hjdv35HP
cv/BpyUv7PVGz+P0+Enp77uND+/reRueH4Y9A9311POQkUPPu5M8N+qh13iA
XWu/1PoFnfqpXr9Mzq9C3V7k2uv/Sn2pUL8Suaa9nqfP7xeRe0fSc985bR/u
qy33qp4UO/reryudfjIu4BV8WOe8/Y0pD1LmsSM/5Z6hk8IvPLfcLz/RH2v0
bAcnel63Ax3+LufUP0A+GCfo4JXaX63ehK5vdzQuuer9HT3vT3Lh9fHRd6/j
jL7DB9xB33P7RM9+sG/c0Pd9eKfirL9vloMOHTxhHuEv+cShfe53oJf7SKb7
AMJ8lfufpvF51uTqvTtFrl6x+44v3LH1equOD/rJvNGe9Vr0uiPPz071AnhP
9EDv0dmq40F7Pc/atfYLjecNdQCZZ/gwf6wv8JH6JqE+FHIFfsBH/YrXrT9L
jQMKdU95PnzUrltWPmK3XV4O72Pz+4d4b+qtFD9uu59a6l69uFf33dRtYT6w
t6EzH85H8W1q35HbzPfidK/nm79Seevwz9vwN6b6Djf2ZvKj6+y83pXIZ0dP
i79gfJ+t3xvp9YWZn2etHqXmZXyufsxwH4LuD+d1isU+CvfhoQd+Dx/Phw/9
k/ulqLN7pd0/Tv01cNbHJz/v6q6Of6Kjb94+9z/wyf0IcgU948K5if+5Ri/n
Z58Xv8q3/r7SeV/mXfrTkVvqrIEz6Iffmy111jr3gnp9T4kvDveaMJ/w4TPr
i/JZ6v1L1JW/1O55hz91TNFT6pnyPv6+iifzexal/n3iw/v7c61e4AZ8fN6z
XN/4vPixf/yLSh/xz/+e+qKM36Pva/uOfPp9Zoyf3zfDPFB3O/eLc3T4Jzrj
A738froXLdDhI3UDQnvqs4r8h3mBnnHtzS+Kf+Pl/6LnX+fvTveV/93sfRl/
6U9n3vOfzv0H0Ef35Y7uY2Qc0QPukyh2407tD+25RwL55F4KcE3qhAc6fOT+
+A5/v/cG/uCjt7c6hBvUt/V5zN+/creszxcavfir7xb757X3dF46cuX3D6Hv
fl8F71H8y3a/Xbj3Us835/cYMT/wYR75HXzUD7Zt93Ns672AiQ/3IPFe8Ode
Jua35L+1++hknE/afUTOJx8zB7rfw837+X2rco/oyZeaJxv467nS5Cd89sti
h9z6mflRvyz2wJ/+bV8Ow31Kfi84ekZ75A0+Os5NDv1eWObB70FkXrhPMc8j
8Trnpn1Wouf+1HFbbXAvI+PGc+HDODuf0p9G93vN6ZffXyv32iY+yKXzNz/4
Bnx8HvM4PnavrC8X/8b8ePeKvp/8tc5XRw7L/uB+nSfGu9StuF/w7K1t5ZPo
vC90+OT379D9PnP4S1xUaJ/HNTyXe7983PJ6cO9e0e/v/8T8QveLfD7/lzM+
Pu/cy5s/E3d1brKrEz0P29OLKj+lrtBXdb7hk/ez794vftBvvGP+gftmXy3s
3vqtOk7wl3iv0B/Vi6kOZGc8s3mS+pPl5fw7Om4Xvip4dvVH6u9K9Dy/V340
67/i7Zb1f1HlCLrLT6Y/8WAz74qf3qr0EjfzoKwjm9X+3Ch16x7U58n7Jjrj
6Xwyjn1zS/uf6PTP28NH6jCkccv2ZpjHvP69/lXR04d/YX6Mr8r7vvgD8ye0
+ZL+dOSnfPs7tQMYh68fmF212sjy8PUvle/XnxW87rxvVq8XHmz+yWl/3vmu
+h/ef1D8VBvf0f53xl/7O7X7uj2P8eb7Yk//xeQv/UrlIcg79OI3eafoXbhH
G3ruTqCX/dRPJv/b/N5Av4c329lP/M3mz087Gu4ZlPuzwn1Y5Rz8Z5Nf6Et9
7tvz+8WKfk3nn6/M70Hw+26w+/3+hbIu/KL4nUK9a+ivWx1s9hvsO6HnOJsk
J3nezzU6fgSvQ5ufh9/h4pxe4ksbPb/ns/ulDluot5bno1OHLePMvaluUqiP
JPVJvM7S61OcRKhngl+ecyTo+f2fJG+s5flybsT5LfQ8Hx9O+cWPzuk5fiDQ
s3y8+nHJQwx5hZJfE/JiJO49xKvnYXjvk8I/xMlnPSL+L8Trlvc6KvdTfO+W
zktqR1w/9CxPj/y2+LVCnCHxUZLnVN93ir8K8VQSjxHiKLLcL6Z4jxC/wTm1
x7GUcZvOu8O5ttSdCudxJd/q0808/eH8Ts5TwvlIyYc6KXgezl84X6C+F3Tx
3wa/a5mXyQ8c/L3iTwv+uox/b0z+uuB/ww/jfsVih31e5OTbf6/jj/8q7Ovz
fD/1RZnf4AeQe/bC/rfg5N0in2G/zP1V3GcFvYStTvu7sI8r8zjf3xX8n/YL
T7V9Afaw74/Kee5kr95pdin3iLvdnnE42W95HIL9Vv59rnJ/bm8T++TPT8c1
2D+sv27XZbsordcZT176gc7Lxbl9Uvy3DwpuPPudGZ1109dFPrM+QmfdZr3+
t6fjcs7k41y758HtA9Zj9guMO3T8IXovWKuzovdttfw/cAE65+TgLHT8xKwf
0PEvsg75vlDvLWp2InYA4459x3jQHruC8cBexI5jvPhdptc65Pg7v1vm64XG
Hz7YO/5c5ML5M08+f9hr6+dvNbTvsM+w17Q/3ynn2u83OvKHHaft274LPYGO
/IzuhcZfgF3Hvsn34fgJ3Y8s8WPh/OCxrn95Uf3V4DJ0ztfAceicp6s8tzhd
1iH64/F89EfiqAMf4se0zk/LS0Ff4M/6T56AnJfM8m5bfh7rPfQ8eSHfFTp5
ADwHOnyJr4ROXJjqb4vHGcXvMB70n/Hy+DjOq/1cnXXSz5f6dfzbfYd+b5bf
dwUfztM0Xrj577V+TrvPG3sdOn5KxaXmV0MP6A964v4t/KnqD2t+IDlnfHq+
32F9Yr1y/c3vH+gjfaY/+FHYd/Jc9p3OP+NkoGc7efu7BWcC/rDvZR8MnX0v
+2DvJ/gJnX46btNffw/WB1838K+N/MLMn/v3wTHmmfZ+Hil+53C+RXvWP+JF
aI/cc65Pe48Po73H8XgdXK+b6/HE8JG49NAe/fd8Bo97pr3UGwv5RR9angPt
wR1wT8e55R153QVwz/OnR/nW5FfJOU3I1/X8S3BS5KqTTwlfni95M+T5JT46
v0ebUgfh8sLsp5Yfw7iwboh8duKLvT6mx3USrwQf5MPjK73Or8dVIb+CE4mO
PKpcnVi+RYunALf9XH10Ds/6L3k14b5DOU/rnMein9gdtGc/xHmC5MWFe8rp
J/gPTsCHfRI4r/J8t+K8nyOBK5K/Gs5t/ByDdvDBjvdzA+wwcA6/Kn50weG3
tis+yvpS9avR4e/rAv5i/MfOp/gNGh1/Mf5j5+/rHeM0OodjvfTzVz+fgw/j
y/xDZ75V7pazOHjoo7wOz7vQ/uyb3bis+qZ2Y8tbVpxodfu0DmSrV6L2Yat/
M6qXA55J/F+ofwMf8G5UJwOchA+fNU+95cezDsCHfnsePP3zOhysE2qvtrwr
1j3ofl8CdOZD6mOn5/p9MzqPx7P7FcBJ9rMSz9iJSwUnJT4zxK+BexJPEOLU
eC74ib0KH4mrCvFK4KfHx2GvqH3b4kHAPfiDe7SDP7jncSXoodgTic45qus7
fnj2w5zLcv6JHUh/1K+xMHludht8ON/z5+Jngj98HD85R+RcEfqIP+eLme3z
hoeJP/Y59NFzWWd8n8F4+3rCvPl+BT6j+Cp+5/FYLhfwGcXhIZce9+nxefBB
LtnXQ/e8CPijt54v53lH8PG8WfiAC55n6/l1tAdfsHtpj13l+bdehwI+4Bd2
n+hZyKunvdd5oT32Nvt+2ns9KZ3HVo+Gfo7qA8rnUEfN62HBh8+j+kxePwm+
Uq8t1Fmhv7TnfVj3eC7vz7jCh3XU8+AZd69LwfwhF/Dxe3FU3loeMHxG95xh
N4hdcHl+fw/tWY88rwu51/o812b3zsJH8jzIm6tyezLL12Ff6vH+6Lnkr1Fv
JdElPy/gC3xVbj/XPKeOfeZ4RDviqPwclnMF1gXHz3I+NaeDj+JXCH5PcNT9
BbIfSM/Fbnf+Rb4bnTgh1jXoxOsQvwOdeB3id6AL/v94fq7t6ybj7X4p97t7
3NVo/+RyAX+fZ7cvsDtoL/WvEh8+M34aF97y3GQ/SjxgyDvSvJPrdv9qyy9l
fZG8uHAfOPw9v1TrU+7O8uvQT6/XAL6AH37Pm9dlAF+8nhF4x7qg79vqHNEe
PPf6ml6/1evweX159Tsfzup0gs+09/t7dH6PzI/R6jSAn/DxexzhwzhqnutO
xWH8GCKft1odCPiAw143AnvC83rFLgl5jciH5/uyX/B8OLnnPeRLIcfIu9tP
blehV7pv2al2m/gToYe4FNpr3PHxBnHJ4IXgSWoPTjqf3C7Q4QO+eHvF29UG
4+C4ShwqcanQiUMlLlXscPh04oh5L+zrUZwP8+P+J9Y99yf5eQLzIHURwvqp
7Zez/BN+B+5JnmQn7xc5Y52X/WLI25Q83k6+Pf47z89nvwruST2kq/N7s8X+
CPn26Bv2GnxE/0PdKPRW66S0uoeKN62OKnYl/L3uIfyx88BPvzdG/CqhPr74
SUIdd/F7hDrK4KrXSQXX6afUfw31UMFbnu/1Dr0+oqxDof4N4+v1q8DPUT0P
/BvwAT/FvxHqJSBH8JG6EaH+gdQXCfVCkFfardWHOo8tz9jtALcP0Dfwc+Qf
9P0tdpCfA4EH8AEv8FPCBzsJvwDxN+TZgD/wUTt5UfmAO+DTjSm/Aj+241iR
z7tqZ749x2fyOsjzEFzt8CceiPwP5+/rCDgC/mpcymp2PsB8ur/fz3U1fmA1
rGvg8qJ1aHYsH77Vu/F6Il4HRO+7a3UTaK/nIsfW/1aXhM9ehws6eju695j9
rt9/jp+B9til4KHfhwwe0h58YV+u602rM0t72Z+H+v5ez5r3AtfAT/jI/Tvh
nhLwUerUP7xucQ+HNs6HVkdqNbzvDXznOX4vB/2FD+8zqpPt9bAZF7kX7WG7
t5JxpT3jrnUjWl00cBs+4DZ4Cx9w2+urIX+jOjq087pN6q9eqdx39m9eNwI9
RF9H/kHf72l8xari+Sj/2POMwXNwOLeHT4i7hj/x2NjJ5JeCw+Bb+TzlK775
heJhiIsCtzzOAPyDP3ak90fXhQlXq5w3HM7dTf0hn1Jw/v2/K/HD51t78iof
n/Isvf+cC0AfxbEjF/gfeD9wELtc4nQ658DavsUHIdej/ZnbHZKnHuouKS7v
VPmlvcu71LMI9o7o2aWV+p+vtDq/2L1SlzTUG4U/v0O/+Yy9JX7mK63uv5yz
XWp1h8F5+LMuiD853Dut537t3ib1E7d74MQPHO5DG92fBh5rXOCHs/uf+Kzr
Sbv/BLyFv9rlB5U/uO33PoHbrIfw4f3BYZ2Xm7P7WFj/xA8c6jHjl4DOeiz+
2zDf0u+RPNV5bHjO99jzut60/Rh64PtAr4sm+7rABz0Rv9LIvxb2k17XDftc
zvMSnfoK4AntyWcBhzO53jvY4qThA935OH/6r/b/YlbXBHzmueCX8ze7tuRn
JRzOeBtw+N0p/z/P4405H+cv+f9PfTHrP+sCdPrv6xT7uVGcJu+p63CrT+f1
v9wfhlz7eYXcExn2f+pH2NF9ZEfeNa58Zedx7b4Br6vO77CTXf/QS9qjt+Cn
vlerzy51DZP+Y68pvrf7Emgv50/hPirscPDJ7/GW+9iuzu+p8vt4wVuJXwj3
7fk9meCx2JXh3ku/Tw9+Oi/tnj3ag8/0l/a8D7hKe3BY/OXhnivWK79fQvxG
V9s9NnqO1uaPdi43tNN5b3X3fV0XHA9y5nX9kddR3WWR62AfoOe0x873uq3Y
+bL/DOcc4n8P/jvxA4bzeDk3Deci2F+0By+wt2mP3Y69TR7UI1O9JfCK8SEP
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
ZP2EXuK+/rbsp8J9W3LfTbhHJtupyU7K/PxemIfz+26w+9kHQC922vtlPp+a
08sHq3fdqe9dcOPvJz/G5/peL83r0Ba31V7R4zfm9Dy/b1hdylemupGh3lrW
h04dtiw+j/26zPvv5/VJ8NNDL3j1QZHPUM8Ev7zXe8l6+sJvNvOy+pzVDSBv
PeT/5vl45KMy76/O6Xl+X7V85MVhoYe8QuKTiFeS8SeuKMSrF3/1zTLvj8zj
2CUO99yEG29McbQh/pa4QckzOIef4ajgaogzJD6K/CToOV7x5d+WcQvxVMRX
kGcJveDA7Wl85vEVHseS40MePS7vG8615RwznMcVPT0u8hnO7zhPof4N9GJH
fbr589PvX5+fm1DfCzr+WOoRynx9606Ji3l27o+lniv0bH88MenDm83/hh/G
/Yrl3+flHD/4bfBL5HkL+/qid59v/tPp+LsfoOMPyf1O++U8nmG/zP1VGZfC
vqzo792Cb2Eflz939nd5ftO+II9D2BdgD/v+qOj7vc3s3wp2KfeIu92e5zfZ
b7mf3/+JjVsbx6w+X0/jm+yNPB5vmb3Rsevy57Re5/Zhvc7v07FPCp48KPL/
f393Rmfd9HWR/tJPKH9yOp+Jjv9O32eKl09/sYdK3O+Dyh86dlChH5bnzuiT
X/qt7xZ5eKGty7xPqdfyQMf56atT3WCnT/WMO/1R+mGl599dfDAbnzzv56a4
9XNHM/3Ichzmm/Fi/OCHfcRz+av0ZreU8W30Is/fmc4f2vtm8jevls/fa/R/
czq+z3yn4HBoj/1T7Jplvc8TOvYI9yQX/nYP86x987dCl3oLiQ4f98/SnjgK
cBa61sc8rnwkzj+0J46X9cPzRLO+Eif9zUb39jyP50DnefQXPtC9PXWzsWOg
S134RIcPdG+P3x37Sc5DuPeE+KVvNrq3x2+HHen+j2xGUgf4m41O+6IvU75Z
sIfZf4JnTmf/6nJY7I62/xb7vO77F7U/0Gl/Vn/8uaN+Zn7vzPEH/XKcyXzf
meOS7GcCnkB3/OG9HK/oT5afF+bPvTDhuvczz3fop8QJdcbP54Hx9nmQOPrL
yyoX0MWPWf3Xje7tH5v87eAAdDmPqfjQ6N4e/cFOgo7+UKcZPrKfCO05f8cO
g865Z7H7Tyofj1+hPfE54AF09g3gCnxkPxHagy/YqdAl3vfW7cpH6rSF9nmc
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
5IL2+P0GfgTO38J/0B5w8aM07fF1BO7rSORnQK/1P86VfvFd9i/4gDu9t2f1
XW+n32/5vRfjqPed83sy9OYsvyb71yrOdZUHTv2L8/cMyD3rDhy5Z52u3mWx
3v29qOfDWL0v1Xug/h257tvzvA+rd0I6fvP8dKs4dOZzlfdT81n0eaLRG6t8
0+gf7GFw8ZOU9x0VF3riwrjnOrZ3FJz7YeJAYj86vKdnvUhcRoNzv8J3fX2t
4jJYf/TL4ztop9zfNe1UfL/gkicL+m9XHH0i+jng6B/ao/q20ruenOl5WRcD
/S/+6YbPUA8PcOaFcZzVrUK+NL9+T4+cIafgEkcVcPhoPZB3ujj7Wf5+1t8q
Xl/9g/17cvTK6l06dPzd84LxnVl+sfTOKOeFaerVEq8gfocGJ/7L50vi5gbx
m8znrH7Vqj3D787aOVgv4L6+aI+vR/SA3Ic3/MW/g5wPcOI5kMNZfR6NM5q/
01D927+jYz9Zvcdb5XlVf/k8r4HGH/T5htgHV3mLoOPv4J7vapXnjnbP8sTQ
71V+1dU7YNUH8zoHzKvXJZL3YVvqGBG/TjyjyFXAWUeOE8/ocrh6L8I6ndWH
W7Vn+N1ZOwfrGtzXtcjPgN75rOidv78v9Xen8l7ma7xT1XuXPk8HcgofcKdf
5XVm3cBnls+L9cN68byq/B0+er9W6eUcO8jnRL/ho/6ll2wcFvkeHqr5IcCh
T+/CruX3CO/oPAZc/N0Nznsy8BUfp9/KfyD/4C7/Ij8D+tX7MOw6+Oj6Nfpv
8F1vp79z9vfP6AWNt52/l2ZekQtw8buV+JeKO/0qb7rek8zzmUI3y1us+cfn
ebSRZ68bh9yqHdrXjYt1R768luzxe9/W+Xox83+i4tHODvTRjnb6+69veNcu
8xhw3pc7zr7j8+7yD+7yT798Hc34rOidv9dvQJ94/Qb0z6wORFoPOW8N91jw
v3Nd77caPPmfLmn7t/Bx+hn/eIwazGPkP5j3eK86kBPGQeutnivjw3fRG4yP
5lmp9C4PwqfB4ePyRr94d+vtj/vwoL+RT9Nf8gLQbtYNOO1m/ZHfCHxMv1v0
CTj6Cv0DH3CnZz2zz4KznjUesOJOjz5ETrVO5PMW/3Ld/NuvanuKvf18weVc
Wfzl180+f76rT+l1K8UOX9W5vPDphnxdnKfA0z3kxXL+Ir+Y4j098nA85w9y
nDxEfFfkM+Cihxv+iu8XHHkS+sG6Bvd1LXm2BvTwR049/xbyDh/wIf03+K63
k/FkXpELcOYV+Vrl40bOZnUX2U9X9ST4ntc9FXt1S51U8rsl//lr2t+AS/xB
g5PPFXzFx+m38h/IFbjLIf1yuUXO4eP8oZd5H+Dkj9O49j3LP37O8ixXfEzf
5zGXe4evkfdc7qXCfg2OnGgcTcWFnjo/6KswbuDJr7tXxjnFVzne0zNu5NV1
PMU51e/6OEv8ykN9nQ29t+nrddBO0cNNOxXfLzjzJ/QDuQV3uZVxHtA7nxW9
84/3y3dd7X6P9tBdVV7Tvxub7xyOR4P/w+EHv/q0q5uIXHjdRP4ex2NQfzHd
B3y2IQ+9zHvAJd6owclDL+OwhY/Tb+U/mEdwn3f65XKCfMLH+UMv8zXAqXND
XTL4g8d1WPDcng7fOyp1EQMO/2hGNvz9u04Pfzn3Ne1RfL/gUscC+sG8gPu8
JD9vP78zPit65+911NBvXkcNfbiqx4Z+Qc69fifrAj7gTs++K+8Omnr1YhcP
6t5T7y1aJ4+9pPIQcOqCMl/p/snxSk8/Zdwaehn/gKd4lpe6cab/9NvrV8t7
tEEdbPjTnlk76Rc48wd9/HH88/zO6+XSzvjdU5/n813F4++B/leHjBp62g9/
5MLrkcr+P6hrqvPbr19fX/Dx9eh12ZEHr8uO/Gyt7/7czVK/XfgHnDqutOdE
fP/ieKVnHhk35wMOn/T/jf5aXRe0F5x202/6Je/vAg5/OfcN2km/wGU/a8bZ
5R/c1wvt8XXh9HwXepdz6F2eU1zLrewfeLbwp968xMs2eNL/FV/xcfqt/Afz
C+7yEH8fzLvTMz7Q+zxC7/MV85ed+CLpw+/vdniS813l3+F7R5Mf74tk7/zj
06Wdj0R/4Bdpfk8/rf368tbmrw6n/bFnCh6/G8ZN4m6DfIKjFzS+vuKyb4R2
yrpu+qX4fsHhK/SD+QX3+aU9Lifa/t3SXnDaQ7/hA+703p7Vd72dcX0+cDv9
/v1zpb/gSR7OlfFJ8ZqOV3qJh274Qy/tDHj6/z0Onxl/2gPOeEGf/IS9HCZ/
YC9v0SwdyGfkP5AHcJefGLc6kDfaE3/debr7bvSjn+7bmeyT2s507r69+evI
6Cflu/H8cZZ53LFz+u3N3x22929/UnDOK/DlPBPb/1WNl+X39LPSp38XN5HP
YH7BXR6SMPbz7vT0C3qXB+h93sXeL/283f19jO+l+Qt4XCeP/1vO7/qF6quA
J/u54mnf/fnm6uH/P1/xKE93fpHoz1Q8yuX//SLxb/A4js/8POfLrThycy3r
V/Botwc8+q0bPK7/x5/ZIEfSnoCne56KJz/drxL/F3s83ss1eLSrnvxtuje5
aXXqAx7pGzzVP/1Nii+9r/KJ5/Brv8t58yp97M7136X5bfDkF38h8Xm44tHe
e+A/Ev29FY/LKuDJz39T5+v0C8nebPjEsPPv/X7zRIzrqXVRI9+AJ736ufYr
2MHYxeDYwdjF4FHuPnw58W/wlD//5U2sj9TwifP6xPkch1jrysV1HfBkn1vd
uh/+5+ZvDvnsVjzeo9yf461OVjz+HvDI/6TVqw184jg1fGL3L/wh+3Wtjt6T
f0z0TZ2mqJYCfRz+hj7O3z0X8vu+Sh/lNeDpfV/F47q7dmHzl0N+d1tdqoDH
eb7b6kk996fE59KNDk9u6Rvar4DHeWjw2P4BHvsZvhvFs/nuV4f/Tryefn+8
0sf+/+j1bN9afY0H30jtP1LxFw679dUbif4ua3/A0283dHweeCP56Rs+0X91
Kev1s1V/x/m+lPX3Waun8L03E59HrZ5CwGPzGzzyf+rN/F6jx9N+/qnK1UG+
nz9jecWPv5Xyip+oeLy3O57fPZ/o6ZO9VvG/P+zXAE/rJN//+3dv5vy9p2ve
yBhfdzPn6T1teYOfeHvzSL4PB4/j8uI7Wb9VPC6rgEdxa/B0X5nzW9+sed5S
+y4n+uf+rOMQ8CS/FU/37JeT3mv4RLl89N2s3yoe/WkBj+ekBo/dvPBu1p9/
1vYfuZLPkZ9of4/kPEENnu653k16r+ET97u730v+iVOVPu5fAY/n+FOWn+rH
72X9afmpAh7lt8Ej/yuZ/z09Hvk1eByHgMe/N3gctwF98nu/l/TecWv/qfdT
/p9jH+t3T+X3mccsH9E9OZ9Dkxcoyt/DH6T2XOnfKUf65p1ylI9AH8fjir13
/jK/17674tFcCXg0Nxo82asfJr/NpavanvMfJvonr+p3A57i2a5qOwOfpCfN
j/6zg3QPdqTi8d11wON4H+n97u6P/23+//ADT/J5Nd3Dnu3t1g/Nnn0s94f+
gcd9JeCprkHFf5nHhXECZ3wZb/C0H3y0iermS3tPdym/o2z48F6dPCjgSf4/
ynrD3uM8ld/jBLmQ9l/J9A9/YHKe+Tf4L/O7d/KygO9mOUauwaM9EfCofk5Z
HP7JHJ98z/va/t2PN+S7kv4GPOXL2td+ncxx6Q2f5N/7ZMN6BU/f+2RzOq9v
cPQF+kPaH/QLekj6G/C0Lt7Tfh3PcZsNH/QgehE8+aM+yfJccfQp+lXaH/Qv
eho8ju/DOQ9yg6NP0a/g38r7BPsGeDxPBjyec89Y3N3NzOf+irNvsY9JfwOe
zgUWrxj4sP+AJ/9Djre52cfVpLi/irPvsg+DP5ztgEfzfg4ez1cBT/azxf+c
yfE/BxbXdP76hjok8t2AR3vhpMVTnclxCw2fdN7McQXBrrmr/ffgp7luacWx
n7CnpP3B3sIuk/4GPJ7DL1ncSOBDPS5w7MIXs50Ins7xNzbRDm1w7EvsTWk/
9uiPXtf94rHM/8Tr2q/A51+zvQn+TLazv5vtaPDUzxsb7G7wO9mO/5ds14Nz
HuB8IP0NeOTf4Nj92OPgSU/+z4Z66eBRngIe9WWDc27hHCPtD+eWv+RzjPQ3
4Mm/8gftV+AT6+A0fL7M564j+RwGnuTys3x+t3u6cO46m89z4N/NOOcz8Lge
DjKfcC4ET+shf7fBoY96rsE5Zzoe9WT4bhzX5rs/zedkzs3S34Cnc8PvtV+n
sp+/uT/i3M45HjzF7d3M54uKc/7/TvYHgONHOMh+BfD0XiDzb3DO//gDwB/J
fg38HOBRzwY8xsU0eNyG7ruV4yt+U/AUp30r6f8f/lr7G/AUd/pr7dd92X/b
8El6+dYGfww4/h38PeBJ395K9sy3Kv3Z7IfCLwUe43MCHv/e4AfZn4V/S9pz
54viJ5Pv3sn8Gxx/Fv4t8KQnb6d96pl/Ujsq4MnfUvH472e3U1zoD3a0/Rdu
p33waPWLxv50ePbznQWv/tL/B3kxRM8=
    "], {{
      {Opacity[0], EdgeForm[None], 
       GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJxMnXe8l+P7wI95xuc0z95HREgpSkIZoSLKysjMipQSIpnZqy8hW0L23soe
WSEjskfIzl7xe79dl5ffH17P+76e676f+3k+z/PpnPNc99tK+4zdbsyyRUVF
H3QuKlqO7aSKoqKxdUVF/ysuKroIngLfAl/WpqjoBHgWfCrx8fDl8Jnw4fAM
+Cx4Inw1fAl8Knw7fAF9J8FXwVcRPwO+F74fvhieB98Gnw8/BV8Dnw0/CN8M
T4Ufh++EL4Tnwo/CV8NvwA/Bl8GveFyOdSx8Lfww8Svh1+BVjPFfX/a/SnwO
vJj4y/CD8KfwFey7Cb4Bfob4rfC78HPwHfAH8Ovwo/CX8AL4Cfhr+FP4dfhP
+BN4Pvw7vBh+E/4b/gB+Af4ZXq2qqGjNhqKijUqLit4i/jTxb4l/BL8E/wo/
BV8Pvw2/Cz8L/wB/Bb8NL1tSVPQ9/CFcAvetLCpavb6oaCj8N/EfiFfBP8Kf
wGXwL/BncBv4N/gLuB38J/w13BFe1Tny34Zcjxf47zd4AcctZvw/4SZyVobb
cqz14Rp4BXgtuA38Nzkrw38x5ndwJVxJfFly1oC7wJVwP7gVLsC94Xq4BF4b
foG+d9P3I47bmXgH4hsQ/474e8RXhNu2LSrqSrzOc4eb4M3hnuS3wgPhdeGV
4cFwb3hVeGt4I7g7vD28MdwT3gneDO4F7wJvD28Jj4K3hvvB+8Bbwn3g3eGu
cA28KTwY3gDeC+4O1+d8hsED4APgbeFN4P3geZzLfZzLJ5zjTsQHEx9NfBd4
CDwWPhQ+ED4FHgPvB0+B94Z3go+E94V3gY+G94dHwMfA4+GD4dPgI+Ax8Fnw
yfDx8KXwSfBk+GL4YXg2/JrXget5JLwNPIr4nvBx8ER4HHwOfBx8NHwB/CD8
APwyPBmeAJ8PPwY/Ai+AR8P7wCfCZ8GnwFfDV8NXwPfD0+Bz4Rvhi+Dz4Fvg
i+EL4Nvgy+Dp8J3wefBZ8PXwtfAM+CH4FngW/AR8P3wvPA8+Fz4dvha+Eb4G
fhQ+DT4JvgK+Db4Rfgq+G74dfg6ewjW5Cz7Xz93vRT93no+14W48y1vAT5D/
OPG3yCnlGS8m3sIz/i7xBcR/IL4Qfg3+Dn4afgp+B34Ongt/AL8CPw9/Bn8I
L4R/gT+B34V/h3+Cv4ULjP89/BVcAu8GD4XHkdPN7zZ4AHN7jfg8+Avin8If
wH/CD3Fei+Gn4d+J/wS3Z5zP4I/hpcTLOZcyzqUT8QXEXyH+tc84/CtcSbwD
Oe3JWQ1uB7eBO8PLwn+RUwsvDy9DvB4uhpeHm+BKuAJeA66Bq+G14M5wF3gD
eBW4M9wX3oPjbs+YE5hDC/EW4r2I/0r8e+Jt4XridcTXhleCO8HrwUXwH+RU
w41wI/Ge8FpwD3gzx+GarAsvB29czTPdyPNWVlTUn5wtiO9IvDu8Hrw53APu
C28J94I3greC14M3hofAm8OD4N3gQfDW8J7w1vC28D7w3vDe8JHwLvDO8Fh4
O3g7+EB4A3gzeBi8E7wjPNo58Fkf4Bz4rPckvgd8OPER8G7wePgPuCPn0oFz
GQnvS/wo4ufAl8PXwEfBx8HnwmPgQ+Ep8KHwYfAp8Hj4CPg0+HD4KPhMeBJ8
Ivw/eDJ8Mnw+fBx8GnwBfBZ8CXw1fDL8P/hS+AT4TPgieBR8EHwcfBJ8Dnwx
3LtdUdEh8Cbw6cQvgq+ET4WnwZfDR8LHwGfD/4OvgmfBC+Fv4O/gdblW98OD
uVYXEb8BvoX4xfDN8G3wpfBt8B3wFfCd8N3wtfBD8ENeB+bzMDwZnkX8MXgO
/AT8KvwWfBf8HPwsfCP8JPwofBV8D3wvfAv8DPyE58jc3oK3Zm5ziL8Mv0r8
AfhF+CX4Avg6+Cb4KfgN+G34fHgmfAP8DrwE/h5+Cf4IXgTPhxfBn8Ovw5/D
X/pcw1/CX8MfwD/CP8Mfw7/Av8Gfwr/Df8I/w+XcS+XcS9/Cy8ErwIvhpeT8
Tc7NXJ934Pvgr4gXkbMsOS/A7xP/iPiPcCnxMuLfwyvCJfCVPMuX8pze488q
xNsRb0f8ZZ7Hn+FP4fbwGvCq8LJwA1wLv8Zxm+H3/Z4hvhLcRLwUXgVugSvg
teDV4Sp4bXhNuA5eB+4Od4E3h/vBK8EbwuvBDXBvuAfcBl4NXhlugdeHe8HL
tec7AG4Lr0p8U3hDeGW4P7w+XATXwtVwV3ggvCm8F3wCfAS8GTwS3gXuBe8A
bwWvBw+Hh8B94V3hofBG8O7w9vCW8P7w7vBgeBS8FzwEHg2PhDfkfjsW3s7v
DeZ8OHwQ8aHkjIX3h9eGt4G3gHeAx2dOT3gYPBDeFZ4EHwrvDE+Ex8BL+eyq
4Aq4D+NPgTeDbyRnPvwoPAm+DP4fPBo+Gz4RHgtPhU+GD4PPh0+Hj4AvhM+C
j4WvhKfBJ8BXwxfBJ8HXwhfDozjuffAE+Ezit8Iz4FPg6+HL4KPgi+Fz4dPg
m+Ar4IvgOfAt8Hnw3fD18FT4Dvg6x4fPgI+Dp8EPwjfC+8GnwpPgW+DX4Sfg
q+Cn4XvhmfCz8APwtfAL8EPwLPgleA58O/wm/DR8F/w2/Cx8L/we/AI8F/4O
fs85c76fwVfD9xP/EJ4HXwI/Ct8Ob+zPnv67xud+OfEn4LuIPwV/Db8NPwZ/
AS+A7+ZzfIFn9jmeqReI/0D8Iz8Lfo49vpVrzzhfE+/QxL1f4LsEbgsvAy+E
/yb/O/Lfh5cl/hP8IbwC/Av8LHOuhF+DPyZeAv8GL4Fr4GLG+QteFa6Ef4Nb
4Xbwj3A9XAb/AjfBbeA/4ZXhjvAKNTzTcAO8DLw6XAN/Rk4BXuozS7wrXEe8
GO4JN8Gt8GC4NzyA67YlvCvn2454H7gz8Y7wBnAXuAruB68Jd4KHwH2cJ+c4
FP6bY61LfB94MPEe8J7wlnAfeD94G3hNeBd4E3i/Wj7LZu6lcq4B8e2Jb0i8
GzwCHgAX4F7wSnAXeCe4H9wXPhAeCm8Mj4F3god34B6C94GHEj8e3h/eDB4H
7wJvDk+Ad4MHwUfCe8JbwUfDe8PbwSfBB8KrM+Yp8LrwDsRPhw9y/vCl8CR4
N/g8eBy8E3wWPNpjcW0neyyu7c7Ez4XHEB8Nz4BPhPeBp8MT4T3gC+AJcA28
CbwWfCB8BXwsvBF8MLw9fCz8ADwNHgffCJ8KHwbfAp8Ob+nfLeDdmcNRxO+C
zyV+PDwbvhA+CX4Evhg+BX4cvgy+CH4NvgU+B34evgY+DX4KvgIeA18DT4HP
hOfCM+BD4VnwKfD58CvwDfBUeB58HVwPD4DXhi+DF8B3widyzRfCZ8MPEP8J
fgm+D/4efhGeBX8Mz4FvhD+FH4VvgRfDT/iZ+rcHP1PO/RHif8CvE58Ht+He
+wR+AS6DP4KX454cBNdxTz5DfHn4XeJ3wl/Rdy48k7n9Bd8KP0u8mJz3fQbp
uwVcQ98niC8Dv0W8hPjWcDPxe4h/S9/nib8KVxBf7DMLrwkv9bsFboS/g9+B
W+DvzeG4nZLfJ94Z/gleANfBX8OL4W7w335fwevCy3Dcv+DN4Er4dbga/pKc
uYzZA34VfoV4e/gz+Bt4PXh58n+CN4IL8G/wxnA7eAncFy6GR3GOD8HHwd8x
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
+Bh4CnxeadRKy9ZLb0r8FHhn73/4dHgX+Hj4DPjC0qihlq2jtiZ6akPURVs3
fXZD1E4PIP8srzV8bFXMYZrHqoqc6fAp8PnwZfCUqhjnEnhL+Fzvs9KoAT+h
IerABxI/D94DngZfC9/oswNfCu/n3OAL4StKoxZbth57G+LT4X3hM6ri++oq
+Gz4MnhmadSDy9aEDyV+hfccvAN8DXwQPAyeAR8AnwtfCV9bGvXjnos15Naw
G7eOfStyLoD3Lo0a8Ksbog78vKrg6+Gjq+Icp5ZG3bTnZe30LdwDj8L3Ozdy
boVvL42a6+sbou56Z+I3wmPg6fBN8K2lUUsuW09uLbl9rSe/jJzb4TudJ3wH
fBc8A76vIWqkr+O4dzdEzfk/tefJu5FzCzwOvhK+C74HPpj8B/J74Hr43hzz
n1r1hqhXv7Aq5nxzadSbeyxrznckPgs+uDRq2D1f69jHMs7s/B64jpw58OzS
qHmXrXu/nZxHkg8m53HvFecAPwE/XBq18LL18Na2P9sQ9e3Wvz/dEDXwo8l/
Cj4Rvhp+MK/5TVWR81hp1Okbt1b/1qoY50m/N+C58EnwSvy+eBq/G67nu0ji
z/ucEO/C74yntsb7/c18V94Q77ifI+c1+ANyHoRfgl8uzfr6hqixn0r8Ffi6
0qjlt6/1/A8Tnw+/Bs/jOizIuDX7bzdE3f6NxBfmZ/Q0+W/C75RGnb5srf4z
VZH/bmnUyL+X98DzxN+FPyyN2n+PZf3//HaRY/4N5HwAP1IatfyfNUQ9/6tV
wYtLo77+w4aosb+Z+Mfw444JfwJ/6ucIL/bzcG7wF/BX8Nvwd/AS7yX4W3hu
aa6faIg1FG8S/xr+xu+3av7taeT7rSzWEziOawr+WU/QEGsKXqyK+XwM3wF/
BT/jPQl/Dz9fGusVfmiINQuuCSjkuoB/1h80xBqEe8n/CX4B/hD+Gf6lNNcr
NMSahfuI/wq/6P0D/wHPgz+D/4SXluY6hoZYy/DPuoRcm/DP2oWGWL/wEPl/
wa/An1TFHH6Hv6iKnCLyv4NXoO+K8NdVMc5y8Gx4GXh+aay98Jq7/uIR4ssT
fx1+tyrO9wf4F7gN8Tb0/QEugUvLcj1Erol4jHiZ9djk/1QV16dA/Fe4ba41
cE1G21yX8Tjx9vCb5P8FV8OVxJdpz880mfM78Q5w+7Jcw5HrOFxv0SHXXDxK
TjH8RmmsH6rMNUR/VgV3hG+DP+VcniJnfd/PEN+2TdT+12T9v2syWnNdRkn7
YOOugajPdRCvcJ83Nsbzspy13HAd8XmM3wn+xL7WdcPNxNvCq8OruO6DnC7w
F9578EbwMsTLrBv32GWxRqQp14m4LmTlXBviupBVc22Iazg2yHUcrzBOZ/gz
xuzEOP3gPq77YP4tOc5b5KwJf1sa60h6NsZakveId4N/JF5J3+7wGmWx7kR2
7cn75PSAfyqNtSxdG2M9y0fE14V/LY31KL0aY01Ka3XMrTfcoTryV4PrqyNn
7bJYj+I1cU3KIsZZD/6jNNas9GmMdSufE+8L/0W8sTriPctirZvPsuvdXO/i
+brmpTc5O8Fbw6vDW8D9y2Jdy4DGWNvyDWNuDC/v9SRnE7hvWax3kV3zsgbx
LeGNy2Jtjez6GtfKDMl7eIO6YGuQnmTMOnhhaayPGdwYa2SWEN8MLobX4bMY
lON0Y/ytnRPcAx7qMbzm1dHXtSeuofFcXEezWnXMf6OyWONivutc+hDfBd7G
ZxDeGW70WPD28KCyWPsiu/5lBeI7wg1lsS7Hvq7NKRDfDV7JZwreG+5cFmt0
9myMdTrLVMf9X+PzC+8Bd4KLOa9t8/nagPgIrwncrzr67gAvD2/n81MWa4DM
cR1QR+L7wl3gAfB+8K5lse5kbmOsPdmK+MHw3mWxxsgc1xnVED8AXgseCB8I
71EWa4lk1xO5lsi+ridqIucQeB2vITwG3hfeCZ4Aj/ZawePgA8pi7ZE5rj+q
JX4Q3M3vB/hQeF34bPgIeCa8I3yYxyuLNUmO47qk87k+tzXGOh3XJHks1yWt
S/5p3itlsSZpcmOsS+pM/CifbXgX+Gh4bFmsVZJdr7Q3Yx6Tc+4FH5f36gjy
j4fHl8V6Kdk1U65nOiXvK9dsndQY67bWJP9E73s/L+7nI/28rOmqjpwjy2Kt
1ZE55wPaxziOvw85J8MT4d2qY/7jvP7w6fAx8LbwTD8zny/4f/CO1j3CZzm/
sliTJLsuaUPi5zhn+BD4XOcKHwqf5zmUxVor2fVWmxKfBu8MbwFf4r3lMwtf
BO8GT4AvgM8oizVbjum6LddpGXetlmuqLm2MdVWu2ZreGOu2jqwOPtvvW/hM
eFv46OrIn1oWa6c8X9dPnUj8GvuXxVqxKxpjvdjWxK+C94GPg2d47LJYEya7
Lsw1YfZ1Xdh25FznfQxPgWfBl3it4FvgqzwufCN8eVmsITPHdWSDiF/ucwtv
D98Aj4KPqY75nAefDt8MX1kWa8scx/Vl1dXx70LXslhbdkvet28Q/wP+qizW
lt3bGOvLhhO/Ez4E/h98l/MoizVnsuvO9ueeuSfvjcvh+7PvdPiBfHZc9ya7
9s11bI80xlo216jNbox1aiMZ/yH4KD+76pjDDfAF1ZFzE3wp/Dh8h+NXxzi3
wvvCD/v8lMW6utsbY23dAcQf89nzfOHX4MfgMfBz8BT4Cvgp+O6yWH8muwbt
YOLPwCfAM6rj++o++Br4efjBslgzJ7tubhzxF+FTfabgV+Ez/U6AX4ZPg6+D
53nOZbEGznNxHZzr7Yy75u5Acp6Ejy2LtXevNMb6u+urgx+Gz6qOc3RtnesX
PS/XMD5N/Fv4HT9H+F34ubJY87egMdb9TSb+Fny+nyO8EH6mLNb2ya7vc22f
fV3f9xA57zsPPy/4A/hleDb8KTwffgD+GH6pLNYCmuN6wOOJvwNfCJ8Mf+Rz
6LnDn8Nv+PlynyzKe941go7jOsFbq2POT5bFGkGP5TrBicTfgM8pizWCnq/r
BC8k/iV8M/w4/BX8ZlmsHZRdP3gx8W/g23x+4SXwnX6O8Pfw+2WxflF2DaNr
fH9tjHW+rjX8qTHWG15J/o/wPfAzzH9xXocXqyPn47JY+7g4P6NXqmOcz/we
gH+B74fP5OeHefy8OsPfp4j/7rNBfHEHfr5p5hgFriXx5ZuYC/E74eVc0wS/
Bf/l+ZdFXblsbfltxIvIeaos1jgun+sc3ya+DLwE/hReEf6zLNY4luU6x3uI
l7rWCV4EF8N/lMX6yOJcI/lJdeT/XhZrFtvkusXPiZfDf5XFOkuP5VrLzeoi
xzrt+8hp51qwslhnWZ1rLb9vH+w4rtdsn2s2nybesSnuvW/oW+H5EH8CroXf
si9cB5cQ/xVugdvCz8DN8LtlsRazJddj/kS8ES7Au9TwvQaPLcT6zrpc4+k6
zsZcy/lVdcxnWfhJuAFeyJjPwSvBH5TFGtBOuQ7UtZh9cz2m60S75FrR58lf
Bf6Q/KVwZ7iiEGtDO+f60HnEV4M/8dmH14AX+Tm61gyuLcSaUdl1o64l7dEU
60ldM9qtKdaNzqfvWvDnfhbVMYcq4svXRE69a9xcawY3wyvWxDiNrnEjf214
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
Z/vM2aA959MSNV16yxxHd5neMnN0l31fG/PxuL8yh6Pyui3L+MfBtW3Ci3Z8
S7jRdI9Nbwn/mJ6zU1rCdVau/ydzyul7EtypTXjRZN1oP3Osk+FyuK1uFrjO
8yL/dLi5TfjSZJ1p+s/ObQkHmo60s1rCs7S8jqC8nivWxRwa4dK6yGmBK/UF
Jbeti3FW0bnBHM6B27cJx9u4vJ/bkfM/uDPx5erifJ1bk94euAvcUZdMst41
WfdaJfGL4DXghoq4PsariV/aEi413W+y/rd2+n/ymnSGZ7aEY7BCt09ehxr6
XgGv1SZcceflPaDXzbhutw7kTINXaxOewhk5TkNdcA8/U873MLgt3EkXUI6p
Y0zWM6b77ZaW8L+11AX3ahOutVkt4Vs70L//t8T3eTN8I7yuY8K3wX38ntf5
k32f0MPj9w//NnXX7dMSDp/19OG0xBrhk/3baEusd9ZF55jWq+ufuz2vm/45
c/w3UVfc3JbwxU3WIwSfT987K/mud18J8yd+c34Wz/Df/S3pWWqJv1PpXemh
v6UlXCvL0ne293lJ+O1kHXc9df4k68x7oCWcdX1cU9wSa+f13j3eEn6MYypj
bue5HrYi8hdy3PUrI2fbkvDe3Zvj9NId1BIODd14T+V5HduWebeEi2BSZcT/
VxJOTZ9lvXZ69TxfnXgzrW93fqXkuG63Jda+6c97pSUcevcz5ostsV77LnLm
wc+WhFdvXo7zDfHX4OVLw+H3WvbVybewJbx8+1cFH0POGD7361piTboevgUt
sQZwff1CLbFOdg3y3/Acyd9Q509LrJk6wDr/llhzsWZV9HUNlK4+z0VH31eV
Mf9lS8OlZ77evGustYYftHalHf9WtcRajwNdF+D9WRqOvQ8yv7/+n5ZYQ6H/
79McfxN9QS2xZmGAfp6WqNnWBfhVS6yVmFgR97/etk31+bSEM3AjPUV5Tea6
jgB+j+M+WxV9rfE+iLm93xLryHQNLs6+y/KdvKQlat3/tv4frioLv92O/zru
rNshflhZuAy/z899Xfr+2BK1x92t+fEzKgtnoWzNsM5C++oq3MPanpaof9vT
WjvnA59rTQ7HuhY+x3oevwvKwnH4R/bdknP8pSXqPAfpC2qJGs6t9AW1Rk3U
NOZT1Br1froPHUfP4R7kbNgaf0vRfeixjA/rwLm2xnvwErZl6TzcWi9QehQf
tv6nNepzdCIWZ85jHKu0Neq7Flvz0xp1CF/AbeCiQngZ26SbUW9iRboEdUO2
Tz9kk+8FXBdD/hxrnOBXGae5JnJ8B63TcfmczzY1Mc6+xIfqAmqN992PVMf8
X6fvtuRUw/v5bo6ctVvj7+o7wM2t8c70CHLq4LMK4T6sS//hkf79vzXebU2E
G+Fz4EvgFvj2QjgdW9LleCXXcKXWeI85x7/Vt8bfzHfiWKu0xvudS4l3gu8o
hBuyMY+lD7JTjrMq2y7pb9QN2Tl5dk3wfPpup++oNd7PPlwT+a8VwtFYndd2
RX8X8Bjl4aRcM92Si/ybf2v8nflTuBv8ZyHck90yR/dkj3ROlvGzxzqt8bfN
Yn8GhpvgNeC+8MaOD68H9y8PV+W62Xdn5rlGa7xrGwH3bo2/hX5SE/P53eMy
/vqt8bffXq0xzj8ey5b43VDfbJ/WOJbxN8jfrSV+d9iE2Gat8TeoQcT7t8bf
Gwf4M7/3VXm4LWX9lrsQ31RvJPG9mc/mrfG3vtH+XgCfWB5+TVnv5WC2W7eG
Z1IX5qCMj+NYA1vj71q71sYc/FvQIbWRcxJ8uj/n+wzCp9bGOJf7My3H3ao1
fq/fgO1GObfTyNmmNX5Pn+PP294/8AHkD2+N31UvJ74dfFd5eC63y++lmXp3
W+NvFFfUxvfV3fDt/mwPP10ebk5ZJ+cdxHdtjd/vHqfvXq3x++YojrV7a/yu
fSc5u8Fzy8O1uW1eh11aI+44+5E/rDX+njPCe7k1PJ+za4Pn03ez2jjHXcrD
k7p35hT8Obk1fs6ZR85B8Cfl4RbdtzX8oqMZf//k75jnAa3xu4YOUVl36IGt
0Vf+lJzRrfF72UeMeQj8q79T+LMWXEbOD/5sD5e2CeeoOf5+NJ++o1rjd9Wx
HHdsa/wuMA4+vDV+Jv+FnPGt8fuILlLH0Tv6Ym3M+ePycJEelvGD6TuyNX6f
Pbo1ztefk5cjPrE1fvb7m75H+Xy1CUeprKe0jOszCW6FDyf/2Nb42bLWn/99
VtuEJ1XWlarH9OTW+DfR//fFiRlvpu8JrfF7wV8c6wi4Eq6ri5zubcKxekQe
t7UuxuntfOg7pTV+/uxZE/VgAwvhvHFtoz9jPJw/v/lznN5TXal6U93qQtVH
qidVf46+U7e29afqTNVbekXmH5l9JuQ+Xak6Uycm60nVg6o/9Zjc6k3Vk2re
zMw/OvtMzjxdqXpSdaLqTz0ut3pTD8vjjc/97tODqjNVL6reVF2VulL/9afa
viNzTso8nam6O/WmnpJtvak6U/Wc6k3VdWpbb6puVF2pelPd6kudnnxetvWh
6j7Vm6pnUR+g3lTHOCvHPSfzzs65OCc9qOdkTG+qzlR9qRcnX5Bt/aB6QfWn
/uNArQt/qs5UHal6U6dnW2+q2+n/7stcvak6U3Wk+vO8nlTbr2b8ityn31Tf
qf5UPak6Ua9Mdqs39dIcV2/qjNynN1XPqB5U/aXX5Fj6EmfmeHpTvd6n5Gdg
rn5Svameq+esN1Vnqs5Tval6UvWU6k11a/v6vCZeD72pt2Tb4+pJtf97Oc7t
OZbOVP2nelN1puow1ZuqM1X/qd7UuzJPb6pzm5XzM3ZX9r8hjz8z+95b958/
1fbHeR96D+pN1ZPq8RblcR/IY+sZ1ZX6rz/Vtt5UvZh6I/Wn6kzVbao39ZFs
603VmarnVG+qrlPbelP1g+pK1ZvqVmeo3lSdqXo/9abqQ9V9qjfV8R7JYzjG
Uzmu+83Tn6pPVDfp2xk3pjdVh6jj6k19LM9Db6rOVJ2nelN1oOrH05+qM1VH
qt7UV7KtN9XtK7nv1cx9JMeZl2PpTNWXqjdVXpDtd3N+elPNtY/e1AXZZ2le
h+fzWuhM1ZeqN1VemO138vz0pi7MPL2pPsc+z/pTPdcP8jrqGdULqkdUZ6rO
U72pukv1jupP1ZmqI1Vv6sfZ1pvq9uPcpyfV/m1znMU5lq5TXan/+lNt6019
KO8Lvam6UXWf6k9dlMd8PuPG9KZ+k2PoTdWBqnfU39/tZ57e1F/yfH7OuTuW
3lRz7aM/Ve/p73m+bnWh6k3Vk6qnVCenW9s/5LVxPL9bfs/+9tGZqs9Ub+py
eV31pupG1X2qP9V73/P8LOPG9KYuybnoTf0rx9Kbaj/zVsk5eHy9qe7/K4+n
M1UXqt5Ufai29abqI9RDqD9V76nOUr2p7i/OPjpTdaTqTS3Ltt5Ut2W5rzz7
60/VmaoLVW9q+2zrTdVjqu9Ub6quU52oelPd3z77lOcYelPdrxdVb6rOVL2i
elMdQy+q3lRzKjJPZ6quxu6ZU515OlN1bvoZ6UDVO6o/VWeqjlS9qY3Z1mvq
tjH3NWeuzkCdqTpS9abqSbU9KOOdcp9+U32n+lP1pOpEXTl55RxfN6rnoze1
c+7bKs+xLs+zS47l34VWy/H0prbknPybz5p5bnpTdabqA9WbqjNV56neVD2p
Okj1prq1rT9VZ6puU72pPbKtN1VPqv2H5zjr5lg6U/Wf6k3Vmar/VG+qzlT9
p3pT18s8vamO1yOPYWy97G/fjbK/ffvW/+dPtb1HztM56kfdKPvoTfVc18zP
Uu+p56w3VXepnlL9qTpTdaTqTd0s23pT3W6W+zbP/l4vnam6UPWmDsq23lQ9
pvpO9abqOtWJqjfV/YOyT/88pt5U9+tF1Zu6ce7Tm+oYelG7Zs7Wmfdaftfr
TTVn28zTi6OzUW+qDlSdpfpTdabqSNWbumO29aa63TH3Dc9cvak6U3Wk6k3V
k2p7UsZ3y336TfWd6k/Vk6oTdUSyW72pO+e4elP3yH16U/WM6kHVm7p3jqU3
da8cT2+qz6NO0aGZq59Ub6puUV2melN1puo89W+VelL1lOpNdWtbf6rfUX4/
6U09KNt6U/Wk2v+MHOeQHEtnqv5TvakeR5+pz5fOVP2nelMPzTy9qc5t35yf
sUOz//55/I2z72H1//lTbesw9Pw8z/F5rCPyeDpE9YLqTdV7qrNUb6qeUR2k
+lN1pupI1Zt6TLb1pro9JvfZz/76U3Wm6kLVm3pitvWm6jHVd6o3VdepTlS9
qe4/Mfscm2PoTXW/XlS9qTpT9YrqTXUMvagjMufkzHO+zntq5pyWeRPzPPSm
Ts1z1p+qM1VHqt7Uc7KtN9XtOblvaubqTdWZqiNVb6qeVNu3Znxa7tNvqu9U
f6qeVJ2oFyS71ZuqG9Xz0Zt6Ue67Pc/xzDzPS3IsvakX53h6U61L1Xvj/5/R
509Hld7Uf2Lpw9F7qitVl6lbXah6U/Wk6q3Sm+rWtv5Unal6S0/I/Ouyz8zc
pzdVZ6ouVF2UelL1oOpPvSm3HktPqnmPZv4N2efmzNMVqSdVJ6r+1Ftz63Nx
dR5vRu53n75Tnal6UfWm6qrUlfqvP9X2S5lzZ+bpTNXdqTf1nmw7js5UPaf/
eFPro603VTeqrlS9qW71pV6V/Fi29aHqPtWbqmdRH6DeVMd4KMedk3mzcy7O
SW/qnIzpTdWZqi91RvKT2dYPqhdUf6oOVJ2l+lN1pupI/cebmm29qW6fyX3P
Zq7eVJ2pOlL1pupJtf15xl/MffpN9Z3qT9WTqhN1XrJbvanP5bh6U1/OfXpT
9YzqQdWb+mqOpTd1fo6nN9XrfU9+BubqJ/3Hm1of56w3VWeqzlO9qXpS9ZTq
TXVre0FeE6+H3tR3sq03VU+q/f/Icd7PsXSm6j/V06gzVYep96rOVP2nelM/
yjy9qc7tjZyfsY+y/5t5/Aez76L6//yptv/K+9B7UG+qnlSPt0we9/M8tp5R
Xan/+lNt603Vi6k3Un+qzlTdpnpTv8m23lSdqXpO9abqOrWtN1U/qK5Uvalu
dYbqTdWZqvdTb6o+VN2nelMd75s8hmP8mOO63zz9qfpEdZPqT/05Y3pTdYg6
rt7U7/I89KbqTNV5qjdVB6reVP2pOlN1pOpNLcq23lS3tt23bOZ+lOMszbF0
pupL1Zsqr5ht5+X89Kaaax+9qe43rzmvw+95LXSm6kvVmyqXZruQ56c31Zj7
9Kb6HPs898hzbZfXUc+oXlC9qTpTdZ7qTdVdqndUf6rOVB2p/3hTs6031W3H
3Kcn1f7dcpzaHEvXqa7Uf/2pttfJe8P7Qm+qblTdp/pTK/OYelPrM6Y3tSnH
0JuqA1Xv6D/e1IbI05u6ap5P55y7Y+lNNdc++lP1nupK1ZvqVheq3lQ9qXpK
9aC6td0pr43jrZf5a2QfnalrZn7PvK4+j7pRdZ/qT/Xe/yKfl+4Z05vamnPR
m7pWjqW70n7m9c85eHy9qe5fK4+nM1UXqt7U3tk2Xx+hHkL9qXpPdZbqTXV/
7+yjM1VHqt7U9bOtN9Xt+rlvg+yvP1Vnqi5Uvan9s603VY+pvlO9qbpOdaLq
TXV//+yzQY6hN9X9elH1pupM1SuqN9Ux9KJ2zJxNM09nqq7GHTJn88zTmapz
U2+qDlS9o/pTdabqSNWbulW29aa63Sr3Dclcvak6U3Wk6k3Vk2p7ZMaH5T79
pvpO9afqSdWJul2yW72pulE9H72pO+S+UXmOA/M8h+dYelN3yvH0pm6Tc/rH
m5rnpjdVZ6o+UL2pOlN1nupN1ZOqg1TfqVvb+lN1puo21Ze4V7b1pupJtf/E
HGdkjqUzdd8cR2fqQXnv6UzVf6o3df/M05foeHvlMYztn/3tOzr723dUw3/+
VNuTcp7OUW/q6OyjN9Vz3TU/S72nnrPeVN2lekr1p+pM1ZGqN3V8tvWmuh2f
+yZkf6+XzlRdqHpTJ2Zbb6oeU32nelN1nepE1Zvq/onZZ0weU2+q+/Wi6k0d
m/s8F8fQi7p95kzKPH8u9fdDfzY159jM82dOf97Um6oDVWep/lSdqTpS9aZO
ybbeVLdTct8pmas3VWeqjlS9qXpSbV+Y8TNyn35Tfaf6U/Wk6kQ9M9mt3tRT
c1y9qWfnPr2pekb1oOpNnZpj6U09N8fTm+rzqFP0uMzVT6o3VbeoLlO9qTpT
dZ7qTdWTqqdUb6pb2/pT/Y7y+0lv6sXZ1puqJ9X+M3Ocy3Isnan6T/Wmehx9
pnpTdabqP9WbemXm6U11bufn/Ixdmf0vyOPvnX2vbvjPn2pbb6rn53lOzWNd
m8fTIaoXVIen3lOdpXpT9YzqINWfqjNVR6re1JuyrTfV7U25z37215+qM1UX
qt7UO7Kt4/Qfj2lDODN1nepE1ZXq/juyzy05ht5U9+tF1cmpM1WvqN8DjnFP
jmnO3ZnnfJ33zZlzX+bNyvPQm/pInrP+VJ2pOlL9HpiTbb2pbufkvkcyV2+q
zlQdqXpT9aTafjjjT+Q+/ab6TvWn6knVifpkslu9qbpRH8hr/nTueyzP8cE8
z2dzLL2pc3M8van+jObPXv5/GP090d8h/V1Rt4TvH/VS6EnVf6orVTeqzhxd
qW5t60zVk6qrVFfq/GzrR9WZan/riIzNzzxjr+e4uk71n+o71Y2qT1X3o1vb
OlP1pOpT1X1q/nvZZ2Hueyv7mauL9b0c13w9qbpQdaXqMdVfqsdUT6q+ysWZ
82Hm6UnV16kr9ZNs60p1+0nu+zT7617Vn6rzVIfqF9nWoepxPJ4OVR2o+k51
pbr/i+yzMOfuPel+fak6UZ2Lc/o45+x852bO15mny1Ovpn5N/am6U3Woyj9k
W0+qXlRdqT9nW1eq259zn55U/aq6Un/Lto5Tt7/lPv2p+lJ1qP6ZbR2qbv/M
fXpSdafqSv072/pRdZ3qFdV3qg9V16pOVD2ptnWlul029+kftY8+1U/zGusU
XT73OZbuUj2k+kt1o+om1ZXq1rbOVD2pOmR1pRayrSv1n23u07eqL9U6tLbZ
1j/5zzb36U/VhapDtUO2daW67ZD7/nHWNoTHtfLf+ZXFtjLnWp2fVWXO0znq
U63Jfdbd6bnUharrUk+kHk59nHpSdY3qSjWnPvP0pOoz9XlpyrauVLdNua8l
++te1Z+q81SH6srZ1qGqK1Rvqg5VHaj6TnWlun/l7NOSY+g7db++VJ2oek/1
luo+dQzdo/pXzVk185yv89Zvac7qmaefVceojlYdqPrx9KfqTNWRqje1e7b1
prrtnvt6ZK7eVD2pOlJ1pepAta0H1W2v3KfrVG+qbld9qPpOeye71Y+qS9Xz
0afaJ/fpRDXWNc9zgxxL/2rfHE+Hqvf73/kM9Mtz0xOrN1QfqO5Qnak6T61d
1IeqK1U/qlvbelJ1mupU1Ws6INu6SfWk2n/jHGfLHEvvqV5U3ae6QrfJe08H
qk5VPaiDM09HpeMNyGMYG5z97Ts0+9t3SON/Tlbb1lVunHPU7zo0++hW9Vz7
5Wep99Rz1puql1Q/qp5U3ah6V/Wj7pRtXbJud8p9O2d/r5fOVH2melNHZFv3
qc+Ez4auaR2oulL1oLp/RPbZLo+pE9X9ulb1qW6f+3S3OobPVufM2TPzTmuN
ul7rbfSn6kXVoSrvl23dqLpQ9aMemG39qG4PzH06TXWk6jU9ONt6Vt0enPt0
pupC1Zs6Jtt6U92OyX36UHWe6kQdl20dqrpR9YfqeNSNqv9UP6oOVNujMz4h
9+kZtY/1q44xLsc9Ivc5ls5RfaZ6R/Wh6krVj+rWtp5U3aiTcvzJ2dY/6XZy
7tOZqiPVe/X4bOs1dXt87tONqi9VP+pJ2daJ6vak3Kf7U4+rvtNTcn6O4/aU
nKv79YQOznk6R/2uemH1UerY1NdoWx+gPlRdo/pR3drWk6obVYepftRzs60f
1e25uU/Hqo5UPavnZVtvqtvzcp/OVP2nelMvyLZ+VLcX5D79qbpQdajqVdV3
enHGp+e+SzKmc/XSbOtE1T+q/1QH6Wl5jTx//aPu00Gql1TvqP5R3ai6UPWj
zsi2flS3M3KfHlkdqbpkr8m2nlW31+Q+nam6UPWmzsq23lS3s3LfDXlMnag3
ZvvyvM5eY/2uulH1n1ovrQPV9lUZvyX3XZ7n43n6b4Lf9V3zM709P1d9lvoq
9VbqQ9WVqh/1zmzrSdWNqlPV+/PebOs1dXtv7tOZqiNVb+oD2faZcvtA7tON
qi9VP+rsbOtEdTs79+kT1XeqH1U3qk5U/ahubc/J/bpHdaI+ln0ezVz361DV
P6oLVQepzlH9pQ9n/KncpxtVj7N+1LnZ1o/qdm7u07GqI1XP6vPZ1pvq9vnc
pzNV/6ne1HnZ1o/qdl7u8/i6UHWo6lXVdzo/46/kvlczpnP1tWzrenW+zlu/
q9+dfofump+Rn49uW32iukb1pOpG1YWqH3VhtvWjul2Y+3Sa6kjVa/putvWs
un039+lM1YWqu/KDbOtNdftB7vso7x2dqB9nW4eqblT9ofpRdaPqP/X+1IFq
e37GP819ekY/z/gbeR7n5DiLcyydo/pM9Y7qQ9WVqh/VrW09qbpRdarqR/02
27pk3X6b+3Sm6kjVm/p9tvWmuv0+9+lG1ZeqH/WnbOtEdftT7vN6O1f9rr/m
/PSjuv0156oPVf/UIzlP56jfdV7+zqc39Y/M012sj0oXqk4qPam6T/91oNr+
OXP+yjw9qbpKdaXqK7WtH1U3qs5THYnGlsk8Haju04mq61T/qb5Tfah6U3/P
vsXZ35h+VX2qclm2daDqOdWDqhvVsVwrsVzOd26O3yaP0T776CDVe6qrVPep
3kq9qbpU9aTq6/R+q8i2rlS3FblPv6n9S3KcuhxLT6p+1H89qbZ1qOo31W2q
41TvqU5U3ai6AHUt6lxsyJhO1OYcQ+dqu5x32+xnns5VvaGOqztUH6r+U52o
OkR1gOoR1Xuq51T3qW5U8yoyv3P20ZOqX1VXapds6zjVjWp/Xalu18yx9KHq
SNWJqsdUZ6guU12nelT1nXbLPP2ojtclj2GsW/a377rZ3749mv7zsNrWoVqV
n4lO0XWzT3Nez055TXWdes66T3WU6krVmaonVYesrtS+2daV6rZv7tsw+3u9
9KTqPNWVunG2daLqLtWbqtdR16neVH2M7t84+/TOY+pHdb+OVN2q6+U+Pa6O
oQtVb6o5m2We953nqbPXnC0yT+elXlS9l3pPdZXqPtU5qjdVl6qeVH2mulK3
zrauVLdb5z79pvbXLTks246lJ1VH6L+uUNs6VPV96k3Vcar3VCeqbtRt8pg+
yztkTCfq8BxD56r9dIbqXLWfeRtl/JDct22OpfdVd6neVP2luk71nOo71Y2q
N1VXqlvbOlP9W5Z/x9KVune2B2aO+/Ws6kB1LD2oek91nuo+1XWqN/XAPKbH
3iVz981j75oxPa76UO2/bfa1n65Ux7A9LMc/II+ha1OHpr5NHag6T/Wg6gTV
NapzVNep3lSdkG71n7p2TDeqfYZn30Ozv35T/aqrZf4R2UfXqS5Ufaf6QSfn
Pan3VG+qLtVBeQ/1zLgxnaiH5bj6To/KsXSi2s+8fXLM43Jc9x+Vx9OBqttU
D6pjHJbz0z+qC1UHqTmnNf3nQLWtQ9WcEzNvSl4Pn6mTs61XVk+qDlNdqXpM
bes79TvS70r90m79vtShOjDP0+dEH6reVJ2ozv3YPK5jnJnjnp15Z+VcnJMe
17MzpnN1Wn6WulLdTsvPVWehzkG9hfpKdZ/qQNWTqhdVV+pF2daV6vai3Hdx
5uo41ZOq/1RXqg5U28dk/PLcp+tUl6lOU32o+k6vSHarH/WSHFd361W5T7eq
PlG9qbpGZ+ZY+levzvF0qOov1Juqw9BcPaR6VnVt6k3VL6r3VM+p7lPdqHpT
Xffn1rbOVD2p+lV1pd6cbT2lulHtf0aOc1uOpQ9VR6r3v8fR76mjVdepHlV9
p3dm3pk5t+tyfsbuzP7X5/Fvy773NP3nYbWtQ9W53Jzz81j35/H0gM7Pz1HX
qd5U3af6R3Wl6kzVk6rPVFfqw9nWler24dxnP/vrTNWTqvNUV+qT2daJqsdU
b6ouU12nelP1nbr/yezzaI6hu9X9OlJ1q+oZ1XOqa9Qx9KhOzpxnMs/5Ou8L
Mue5zHswz0Of6vw8Zx2oelL1oupKfTnbulLdvpz75meu6zH1pOo/1ZWqA9X2
rRl/I/fpOtVlqtNUH6q+0wXJC/Ie0I3q+ehHfSv33ZXn+GKe5zs5lp/p2zme
3lR/Jv0jf371ntUxqu/Xnz39GVRvv95TPae6T3Wj6k3VlerWts5UPan6VXWl
Lsq2jlPdqPbXler28xxLH6qOVJ2oekx1huqB1HWqR1Xf6ZeZpx/V8RblMYx9
mf3tuyT72/ebpv88rLafzXk6R12vS7KPaz/1mOoX1TOq69TvIB2kOkp1pepM
1ZOq01mX6S/Z1j/p9pfcZz/7+/2lJ1Xnqa7UpdnWiepxPJ6OVl2nf+ex3L80
+/yQx9SP6n4dqbpVf8x9elyXzfnenTmOZZ6f3fv5+ekQ1YuqR1QnqB5RfaL6
SnWf6kDVk6oXVVdqabZ1pbotzX2FzNVxqidV/6muVB2othdlvF3u03Wqy1Sn
qT5Ufaftk93qRy3PcXW3dsx9ulX1iepN1TValWPpX63M8XSoel4r5rmZq4dU
z6ox9+lT1Xuq51T3qW5Uvam6Ut3a1pnalNdDV2pztvXK6ka1/485zko5lj5U
Hak6If3/XXTJHF2nelT1na6Sea7jdm61OT9jq2T/+jz+09l3teb/PKy2dai6
DtE1iDoudN54PD2fenHWTDeOnlTdp/86UG3/ljlrZZ6eVF2l3qtrZ1s/qm5U
naf6UY2tnXk6UN2nE1XXqf5Tfaf6UPWmrpB9e2d/Y/pV9anK62dbB6qeUz2o
ulEdSz9qz5yv3lRjG+Yx+mcfHaR6T3WV6j7VW6k3VZeqnlR9nbpSN822rlS3
m+Y+/ab2r81xBuZYelL1o/7rSbWtQ1W/qW5THad6T3Wi6kbVBahrUefi4Izp
RB2SY/hZ9Mt5b5T9zNOTqTd0aN4n+lD1n+pE1SGqA9S15HpP9ZzqPtWNal6n
zN8h++hJ1a+qK3V4tnWc6ka1f5ccZ9ccSx+qjlSdqHpMdYbqMtV1qkdV3+nu
macf1fGG5zGM7Z797Tsy+9t3r+b/PKy2dagOyM/Edfcjs8/aeT2H5TXVdeo5
68nUUaorVWeqnlQdsrpSR2VbV6rbUbnv4Ozv9dKTqvNUV+rYbOtE1V2qN1U3
o65Tval6Qd0/Nvvsl8fUj+p+Ham6VffPfXpcHUMXanXmjM8877sBGTfn8MzT
eakXVe+l3lNdpbpPdY7qTdWlqidVn6mu1EnZ1pXqdlLu029q/8E5zgk5lp5U
HaH/ukJt61DV96k3Vcep3lOdqLpRJ+cxO2fcmE7UU3IMnav20xmqc9V+5g3J
+GW579gcS++r7lK9qfpLdZ3+Lz9H3ah6U3VaurWtM1VPqn5VXalTsz08c9yv
90AHqmPpQdV7qvNU96muU72pF+UxPfZpmXt+Hvv0jOlx1Ydq/xHZ1366Uh1j
+v8b/8I8hq5NHZr6NnWg6jzVg6oTVNeozlFdp3pTdZ+61X+qQ1U3qn32zr5X
Zn/9pvpVB2b+tdlH16kuVH2n+kH1luoI1XuqN1WX6sS8h/pl3JhO1KtzXH2n
1+dYOlHtZ95BOeatOa77r8/j6UDVbaoH1TGuzvnpH70tPy9z7mv+z4FqW4eq
OXdk3l15PXSl3p1tfap6UnWY6pTQY2pbh6ffkX5X6il1+3DO88g8T58Tfah6
U/VPOnfP4ZAc88Ecd3bmPZRzuT2POztjelOfyM9SV6rbJ/Jz1Vmoc1Bvob5S
3ac6UPWkPpnHejrbulLdPp375maujlM9qfpPdaXqQLV9esZfyH26TnWZ6jTV
h6rv9MVkt/pRn81xvSYv5T7dqvpE9abqGp2fY+lffSXH06Gqv1Bvqg5Dc/WQ
6lnVtak3VS+o3lM9p7pPdaPqTdWV6ta2zlQ9qfpVdaW+nW09pbpR7X9xjvNe
jqUPVUeqDk+Psyg/X12nH2X+h5mnT8O5vZ7zM/Zh9l+Qxz8y+37S/J+H1bYu
UOfyds7PY32Wx9MDqjfVOeg61Zuq+1T/qK5Unal6UvWZ6kr9OtteE7df5z77
2V9nqp5Unae6Un/Itk5UPaZ6U/Vq6jrVm6rv1P0/ZJ9vcwzdre7XkapbVc+o
nlNdo46hR/XWzPk585yv856ROb9l3uI8D32qnqvnrANVT+rSvD66UW3rSnX7
d+5bJnP1pupJ1X+qK1UHqu37M75C7tN1qstUp6k+VH2nKya71Y+qG9Xz0Tta
kvsezHP8M8+zkGPpXy3L8XSo+h3vd73f+96zOkb1/e6cbhwdOXpPq/J+1o2q
N1V/i1vbOlP1pOpX1ZVamW0dpzXZX3eo25ocSx+qjlQ/Oz2mOkN1meo61aOq
77Q+8/SgOl5lHsNYffa3b2v2t29Ty38e1sbs2z7nqF+0NfvolNNjql9Uz6iu
U7+DdHvqKNWVqjNVT6pOZ901q2Zb56fbVXNfl+zv95ee1DXyfLtmWyeqx/F4
ukl1nXbL+bi/a/bplMfUj+p+Hal6U1fOfXpce+R8386c7pnnZ9c2Pz8donpR
dXvqBNUjqk9UX6nuUx2oelJ753z6ZFvfkds+ua9v5nq+elL1n+pK1YFq+6OM
98t9uk51meo01Yeq77R/slv9qBvkuPbdJPfpVtUnqjdV1+iAHEv/6mY5ng5V
z6tXnpu5ekj1rPbKc9anqvdUz6nuU92oelN1mbq1rTN167weujqHZFuHqm5U
+/+Y4wzNsfShDstxfC58JnSZ6jrVo6rvdPvM0yfp3LbM+RnbPvsPyuN/m313
avnPw2pbR5C/8/m7n/+/DJ8/j6e72PqcU3VXtQlPqu7Tfx2otnWT6qzSlaoz
VU+qrlJdqXtmWz+qblSdp3o+je2ZeTpQ3acTVdfpqBxTH6reVJ2o+2beyIzp
V9WnKh+YbR2oo/Pa6kZ1rOKcs/PV72rs4DzGmOyjg1Tvqa5S3ad6K/Wm6lLV
k6qvU1fquGyb73Zc7tNvav+OOc6ROZaeVP2o/3pSbetH1W+q21THqd5Tnai6
UXUB6lrUuXhUxrxWx+QYOlcPyXmPzn5H5Zh6Qx33/5g67zApiu/rz8zusNvd
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
Twvu1w2nZzcIx4Y/vs3yaZZcku7QgnuFw7tFRji2tNG9vd/gfV92f+/GjpbB
asFrYm30DceOjV7qzJd5s05ykIt+6CD5uii2Z0f3kf697P7hrG1VelOKt5Nt
pYJ7gcPpFQ7CsVXk+7byVAruGw6nhzgIx5ZJbi/fowruKw7vHgV9atvnytkk
XKvgPuFweoWDcGz0/u6qmDUj9wBvbQx9wBvN322yvaN8TygEOTXn/nDd6cP+
pXI2S9ez4B7jqzW6zzh6eptjW1m6D5RvzYL7nsPpgQ7CsXXjGZLvyQX3RYf3
jII+te0r5ewiXK/gnudw+p6DcGyM/7HyrVPwtecetA165odtVd510p1acG90
eK/I82Xe9HZf4ZPa7xvpMu5rwf3V4fRY794Y+rXLtrrkz5R73YL7sMPp4Q7C
seGP7xnyWaIcXSX3LbjPOZxe5yv0qW1rNoY+7tzLRvdEn99kGdyw4PHJu15k
OzZ6vn+nPKsqbtOCc5Brg8hIvnML7tGOH73dezKW9OcVLNNXHU6P9bUb3cMd
XNFzXfoeyMLhde4DD6f/O7iiT3xHx68SchJL3PkF94rHhv9GjY4hDzpsxNBT
HtvAyHNhThsH/9XCePSxX6fR/bjXCbxHR8sg34fsZ/Zy94LXypq5Lnz/8azy
fchcu4e10L9+XcVsEhnhX8i3F+PK58KC+9vD+0XuN0881weEk6t3o9fMevke
7dXi+azHMy37RQX3rMdvRV/7RuddLcT2CNed2LVTxxNLj3viQfimYZ7MsU/B
vsTwHbti36beu+umXjPfyevLf53U37v99E24huw7aO29UvOtS0b4GuFaEc/1
6tPo7+wVa0nNt4x85mHfQnJvyRs3WsaOHzGMy5h8b2NfO4zLXLD1j5yDs5P7
gg+58GMecPw3CPPCH9wgjLe0yXnIv2FqTi0jcMMwxnLlXkcxWyv/Rql5m8gI
x9ZPfj8oZkvmkJpvHRnh2PpyZsj3Uvn0Sc23ks+mrFH2raT/SznXlc8gyX1T
87rICMfWL3XMoMg5yEVedNjIVeDZkm4X5dlEuk3Et4mM8PVk+1c5NxDuKJ9N
U/M4MsKxDZD/L8q3g3w2S82HREY4ts05P+R7g3z6p+aDIyMc2wDhFuJD0aee
Xykywpkr9t+Ub2TB82SOl0veUfJ2kp+UPDQ130OxAyUPlLx9ZIRvLL86roNw
d/lvkZq3j4xwbNtI/ktj7SafLVPzEZERjm1rrpV8p8lnq9R8eGSEY6tnjcK9
5TOYayz9303Wb53ahh7d2ILt8J2VZzvWLvuMgtfONWL9g1LbduL9wvUW31Z+
7RhXuJ/8t03Ns8gIxzZcchvhvvLZLjUfExnh2HZgbsKHmXNqPjoywrExLmMe
UvD48JXCdeYa3yz9TpITyQdI3j413zMywrGxDtbDOieEc5qzl3vIveS+jtF/
e0jeUzhM2ML7IDLCh0i/q+Sy8GCNtUNqvk9khGPbhXGFc+QzPDXfOzLCsVW5
z8Lj5DMiNV8jCvrUth2Fu4vvK/1IyWMlT4yM8A4dbR8pfK1gmRg4PtiP5h3K
fZZ8kuTdZB8vfkhk/U6pbXtL7iScJJ+dU/MDIyMc216SdxHOk88uqfkBUdCn
tq0ieTfhKfLZNTVfJzLCsTF+i/BE+YyTPEr6UUHP/LCt0AvfLdgOPzjyfJl3
j8j3kHu5bovvEffncPnvyz5KfT8nSt5d+Jn0Y1LzIyIjHNsEyWOFI3X27p6a
HxYZ4dj251kXzleesan5UZERvkfYP+ydTwveR3DyrCGfvSSfI/1+jc7LWHum
5tR5A/cMY++VOmb9yGsZE3KuEWzkOkjyOOEC6feW7kDxYyIjvMrzgCz8XD77
pOZHR0Y4Nta2T1j7uLBWrg8Ix3Zwo68X13B8an5cZBwfrinXm7keLv3/Us/v
2MgIHxe+p7hXfFMxT+Z4ZsG/JflzHH5PHtLobyDe0XdJd5PkGVyf8O3A9wY+
+6b220Tv+vHSj9D8J6bm1OUD4diII35ikCeGb5gjG/29wnfOgcF+UmT9/uH7
5gj9t1/Ij3xAak5e+IpxJW/Y6JzEEX9yZD15sR0U5jJJ+uO5t5Kv4V3Gs8j1
4vuro9fG2g9OzaklCMKx4Y/vtfI5jvlLvkryoan5aZERjq0/94RYyceyr7l/
QQZ/KHhNrIW1Y8d2auT5HhRs5CDXdpGRfNcr9lLJV8p2Ntcj9drOkM8k5iDd
z1zn1Pz0oIdj25L5CG+Vz1Gp+bDICMd2ouQ+whvlc3RqflZkhGM7gfkJf5PP
Man5mZERju044Sni50p/LO8ozuvICD+yo+19hbcULBMD5/5w3beV/8nMTbo/
5HMS70PO3KCflNo2iLkJ75TP8an5yMgIxzZF8qbC2+RzQmp+fmSEY5vM/IV/
yefE1Py8yAjHxvjHCqcXfO25B+sHPfPDdhr7RniHfE5OzS+MPF/mfU5kHTb8
TmXtwn+4Dqn5BfI5QzhFfIBsQ1ivcKZ8Jqfmu0RGODb88b1LPqezdsn5GuVL
zS+KjHBsZ7FHJA+UvD17mXsZZHBWweOT9+LIdmy7Sj6XceVTV+Mc5Lo0MpLv
bsWel9rvCunP5BpKX1Nj+YzU/EzhUPHdIiP8JM5uyVsI71Wes1LzyyMjHNvZ
XENhmxrHEjdb/mentl0m/2HCU6R/qGAdNmLOSW0bFXkuzOmS4I+NmHOF54lP
jYzwLTtaBu8veD+zl28veK2smetyMWsRNmpu53PNJcfIfGuI7x4Z4VNku0Dy
NsIHleeC1Pwq+VyYOv7KyAgn10jul/AJ+V/IfZRcUv6LJA+S/Ij0F6X2Gxs5
H3m3CbHYiCf2ktTxxF6cOh6EXxPmyRwfLdiXmKsj71P2K3v38tRrvlb6ndkL
7BvpL5E8WPi4Yi9Lza+LjPDB4VoRz/XajfsrfFb+V6Tm4yKfeZx910ueKvky
yTdEtuNHDOMy5tMF24dKfqrguWDbK3IOzs72NfYhF36juL/C5+V/VWo+PjLC
sU3lvBQ+I5+rU/ObIyMc2xXsAWGT8l+Tmt8UGeHYRnPfhS8pz7Wp+f8iIxzb
VZyXwufkc11qfqt8xnDvpH9V+iu5p5KbNdb1qfktkRGO7YbUMRMi5yAXedFh
I9d13C9hqjw3Snet+LTICB/Ou5O9IWyRz02p+e2REY5tD/aS8A3N7ebUfL/I
CMd2Pee38BX53JKa3xkZ4dhuE+4pvr/0t6ae3x2REc5csV8mfLvgeTLHF7kv
jKH/VtM870vN71Xs7ZJvlN/0yAjfievD3hNW5T8tNb8rMsKx7cMeE76j/Hek
5gdFRji2mzkXhW/J587U/O7ICMfGt9VUYavG+h9z4Z4FPd9e2NCj+7BgO/xQ
roNwtPTvFbx2rhHrn5Hado98bhPey/3jncq+Fa6qse5OzWdGRji22xt9fbhW
M1PzWZFxZrh209i3wu7yuSc1vy8ywrExLmPuVOfxV8wjXGeu8etcE/ae5DWV
Z1ZqPjsywrGxDtbDOvl7Cv6OYmK4p9xL7uvR0j9LPOev8I5G13Negen/zeWG
MJ/Z4XowZxCObXqj18C6HkjNH4yMD4R13sX+D3N+MDV/IDLCsT0snCH+kPQP
pf49wu8UEL5+i+38buG3DDIxcHyw81ujv76fbxLfUXN+gnvKeRtZ/0hqG9/0
6PkN8mhqzu8C8NEQc2+jfyfw2+Gx1PyxKGBq2z3snzDW46k5Y4Hw28I4hzV6
LMZ+MvihZ37Y0KMjz5NhjlwH5su8qY/N7wa+oyeFe8T94b5M4GwO1+4onkfx
RRrr6dT8lMgIx3Yf11D4pXzmpOZPREY4tlncU+Haul/PpOaPR0b4tLB/2DuL
C95H8Mnymc39ln5d9oPkAyQvlM/c1PzpyAjH9lzqmKcir2VGuL/osJHrSclH
CH+V/nnpjhGfEhnhM9g/kg8UfiOfF1LzZyMjHNtDPLPCDTS3F1PzZyIjHNtJ
PJfC35XnpdT87MgIvy9cb+ZKXfGXU8/vpcgIZ678HSJ/fzigxvNkjt8V/Gda
/NlWB/lfzh6WvoN8Psy0d9pqzbGec/k8K9vrwefV1H5zJZ8jbCv/11LzNyIj
HNuKOMmPBBkcJf+ruYeSO0t+S/YXxN+OrH8jte1FyRcKO9ZYfjM1f4frJNyl
znFP8N6ocRzxt0XWkxfb26lj5kc+azZs8dn4mnTvyLaF9vTG0r0Uzsx5qfnQ
khGODX98D6jx+HPDHN5NzT+IjHBsb8j/fcnPSX5T8nupcyCD5GFNrG1eZDu2
jyPP9+2Qlxzk+igyku9gxf4q+R/ZHmXscI5y9r7V6POX8+3D1PyToP8wnNED
tI7n5b8z9b5Sc+rbg3Bs7zb63OQs/Tg1/zwyfhzOVvxeDnk+CXGMtQJT2z4T
3i/fJ6X/NJyvnMngp2F+2F8R71VjmRj4O+GacW3fF94hXU/5fCn9h+ILg35+
att77E/hkfL5PDVfEBnh2B5kT3JGy2dBaj4nMsKxfcTahevJ54vUfFFkhGNj
/Dc4q2t87bkH7C30zA/bI+xDYV/5LEzN50aeL/P+IrIOG36fSp7JHpX/otR8
sXweFX7NPua6sjc4G+TzVWr+dWSEY8Mf3024DrwbJPeRvDg1/zYywrE9JnkJ
10vyfMnfcL+DDE6u8fjkfS6yHdsSyV8LZ8tnYI1zkOv5yEi+/tL/lNrvZ+m/
EN4rfb8ay9+m5kuFC8SXRgG5RtI/zr4Vbi7/71LzFyIjHNsiybOEm9U4lrhT
JX+f2vaj/BfyDEl/Ro112Ij5IbXth8hzYU7fBX9sxPwofIrzNDLCP+5oGdy6
xvv5rfDcsVbWzHX5SfJDvJel/1byA5K3lfyz7F/hFxnhn8j2NPtZOEQ+v6Tm
r8jn19Txv0VGOLmWsLeFl7JeyQ9K3kHyHPaX5JGSl6X2WxY5H3nnh1hsxBP7
e+p4Yn9LHQ/CXw3zZI7n1diXmD8j71P2K3t3eeo1/y39d8I/xL+U/hl8ODMV
+2dq/lpkhC8K14p4rteP7GfhDfL/KzX/K/KZx9mX07vpb85XztQo2FPHMC5j
Xl1j+2LJY2o8lxVzipyDs3O34EMu/H5h/wtvlf7f1PzfKGBq2/PsW+Ee8sll
5m9FRji23yU/Jhwtn3xmXhMb4dh+Y58Lp8mnkJkX4oCZbS+xV4V7y6cmM39H
Y/3J/pT+LumXc75KHiu5NjNvExvh2IqZY4qxc5CLvCt0mXPl9M5/WjhOedpI
9zLPf2SE/yTbP5KfEu4ln7rMPIqNcGx/s5+FM+RTn5nXxwEz215hHwr3lU+U
mb8XGeHYEuG/4jG9PDLPL4mNcOaK/VfhzBrPkzmOl/w696KTvrUkd87MP1T+
BsmFtu6JA8KXKaZG8m98n+hdVsrMy7ERji0v+XfhPcpZzswbYiMc26vsL+F+
8mnMzN+PjHBsRfnPEU7gfklux70J+raZbejRzaqxHd4Ye67L2bd1XjvXiPW3
D+tgPlvqPd6JeyNe19bzY84dMvP2sbFDWEMb/feXfO+TT1Nm3i42wrFFkv8W
7qpxO2bmTbERjo1x/wl5GB9OTxyu87Iw53rJfVr8/dOcmXeIjXBsy8J6WOe6
wpVk6xH7HnIvua+dpVtDcllyi7CB+NgIf5b9w9plv19jdcnMO8VGODa+pwqd
/E2VZuZ8g4FwbOW2/jZjzllm3hIb4diqwbez9BXJpbaWQXhNJ9vnNXosZGLg
+GDn2nId4cgry96e+Nj6riHvix19vZhPa2ZOjyGwNVzTD3gelfNY+ayUmX8Z
GeHYOsjvNcUcJZ9umXk1NsKxMX69fJ/kO1Cxq3DvO1nP/LChR3d8je3wryLP
l3lzf7mH3MvPOvoecX8myr+j5FW5huJNPNfKM0f61TLzrrERju0zrpfwFPl0
z8y/iYxwbC3yn6d8J8hn9cx8ldgIx8b+Ye88V+N9BF9ZPhnXTvYpfGcqZ1v5
nC55zcz8+8gIx7ZW5pjusdfCOo6psQ4bub6Rf0f5XiJ9D+lS1hMb4e1kWyyf
DsIL5dMzM/8lMsKxdZX/p8p3vnzWzszXjI1wbFWeS/m+I591MvM1YiMcG9eb
ubZK3yvz/H6NjHDmyv3iXl1Q43kyx1dqfD6tOKcU28rzJP370h8p/VTxm6Vf
X/KqknsFn/Uy+y1V/hbhVfLvnZn/Hhnh2IgjfkFHy+Dl7CueWdnnS95I9u7k
ja3fILPtB+VJhdfUWN4wM1+N51T4RY3jFirnlTWOI36d2HryYts4c8y60vfg
WVDst/JfS3Jf2b6Wz8/K31X6G6Xvk5n/Exnh2PDH9zr2D9dbuq8l98vMN4iN
cGw9JW8qeYlilinPJpx9nSyDt9d4TaxteWQ7tnzs+TJv1kkOcm0cG8l3s2Ir
kveRbQv5bJZ5bRvJ5w/lWFm6O+XTPzOvDXo4tnXk+53y3CafzTPzvrERjm1t
njP5fi+fAZl5n9gIx/aXcq4mnC6fgZl5XWyEY9tSuK5iNpF+C8nrcV1iI/zH
jrZ3l+9PNZaJgXN/uO4bsg953qUbrbN0W+k3Jj7ot8ps24Dng2usPFtn5pvH
Rji23jxnwp/ls01mvllshGMjV48w1qCQGx8Qjo3xiSEP15570C3otw15N9J/
PcN8tsvMB8aeL/Ompxs6bPj1aetvFL5bBmfmW8b+FtlevJ/ep1tTQzDkHJKZ
Dy8Z4djwx5fvBN73vTr5PT40vP/5ZgDh2PppnB24T5I3kTwsfFsg14XvDcYn
L99R2LFtI7kd61TcozXOQS766IHkYy27ZPbLpG/kWZf+wRrLwzPzEcLNuHax
EV7L/uc6C/+U/8jMfFBshGNry/MnfKTGscTNlrxjZlsq/wHCovQP1FiHjZid
MtuGxJ4Lc+oS/LERs7Nwc/HBsRG+YSfL4N813s/s5TtqvFbWzHXpwh4Uvsx3
FM+Z5Gcl78qzKz40NsLbyDaQZ52GJrX6xsrMt5fPqMzxK8VGOLm2lpwIn+Ib
jGdL8lzJW3EWSW6jPKMz+w2PnY+8G4dYbMQTu3vmeGLHZI4H4TuEeTLHh2vs
S0y32PuU/cre3TPzmleVflvhWPEGnhueEWG95rNHZj4yNsI3C9eKeK7XEMmN
wuc11l6Z+S6xzzzOvtUl7y15MPcjth0/YhiXMZ+psX2A5FKt54Jtx9g5ODvn
BR9y4TdMcnvhG9KPy8xHxUY4tqE8l8JOyjk+M98tNsKxdeP5EH6oPP/LzHvG
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
+9faDr+cc0B4svT71nrtXCPW/3Fm20vyeVo4X/wR6Z/gORPeLv9PMvMXYyMc
23M8T8I75fNpZv5mbIRjm8ueEs6Qz2eZ+RuxEY6NcRlzrzqPD38lXGeu8WjF
Xij5Id4dkj/PzK+OjXBsrIP1sM7lwvniS2LfQ+4l9/VOyT9LfkXyF8Jn2Oux
Ef5wJ7+nN2/x+/fL8N7mXQ/CsT3f1u9+3rkLM/O3YuPC8H0wmP4/3FOta1Fm
vnPJCMf2dUBiv5L8MnsrNn4V3v3Ynwp5/ouB44OdeXKGPh/ms5RzQvLM2PrF
YX438qyIT5LPN5n59NgIx/Yq+0V4tHyWZObvx0Y4tlc483nfy+fbzPy92AjH
xvhzhafwvEv+Tvorg575YUOP7oRa2+Efx54v8+abh3vIvXy3k+8R92c654zk
79lz7FHJLwhPlf6HzHxWbIRjmyf5Gs4Y+fyYmX8WG+HY3maP8yzK56fM/NPY
CH8x7B/2zpm13kfw2fJ5j7NR+jk845Kvl3y65F8y8y9iIxzbr5ljFsReC+t4
uNY6bOT6XPIdwkulX8bzyjMQG+Fv8PxKvok9K5/fMvOvYiMc20c8l8IX5PN7
Zr4oNsKx3c+ZILxCPn9k5k/GRjg2rjdz/Uj6PzPP79vYCGeu3C/u1bxaz5M5
nlvr35L8OQ6/Jx9kTwmvkr6/fkuupN+SPfRb8h/Zv2CvxPb5K7Pfl+xT4eXy
/zsz/z42wrERR/wHQQbflf8jnI2Sr5Wc11gL2ROx9f9mti3iWRFeWWs5VzF/
nD0ivLnWcR9J/qDWccTPja0nL7ZCxTEvSP8U95zvF541ybWyzRdfwt5kb0tf
UzFfFhvh2PDHdz57lfONayC5WDH/KzbCsX0ruY61Sf5BchvJi4IMflXrNbG2
H2PbsS2PPV/mzTrJQa7fYiP59tGZ06j701O2t8TrK17by/L5nr0v3a3KH1XM
/wx6OLbvJH/JNZZPXDH/IzbCsf3MnhXurbGSivk/sRGObSi1zsJaGirmu5WM
cGxl4RyeQ8WWJP/E/oiN8C1abF8i37tqLRMD5/5w3X+V/2/CB6WbJp8O0v/O
vUmsb6zYtoy9z1ksn7YV83xihGPj3bY0vPvaVcx5P4JwbH+09fuSd2j7inlt
YoRjY/zvwvXh2nMP2Fvomd93YZwX23qsppCbOTNf5l1IrMP2YrjexJOzY7jG
XKvXpGtmn/EN0MnXjrl1qpjPi42dwvXFH98HeDYlPyN5luTOFfP6xAjH9rrk
LpJ/kfyX5BbyBBn8odbjk/eD2HZsdcpT1D58ST6P1DoHuT6MjeR7SPqVKvZr
m9BISe9+6WfXWk4r5pnwX/ZfYoT/yjuYvc99k3+lYv5JbIRjq1Ge5znDah1L
3M+SqxXbyspZEP7OHqm1DhsxXSu2lRLPhTklwR8bMa3Cd3j+YyP8j06WwSdq
fd3Zy9wX1sqauS4lya/znpS+XvLLnGGSu8leK96YGOF/cj5ylgifls/KFfPP
Ne4qFcd3SIxwctVJ/pt7xbMs+TW+S/he5XmV/KzkVSv2a584H3n/CrHYiCe2
e8XxxK5WcTwI/zL2PJnjH7X2JaZj4n3aMTyTa1a85s7SR8LVua+yf8iz2Kxr
rtg1KuYLYyMcG3HEc70aJBekKxRzubUq5s2JzzzOvi6Se0j+RPFfx7bjRwzj
Mua/tbbXSPdSreeCrSlxDs7O54IPufArS18rrNW4a1fMWxIjHNunnPPCVxS7
TsV8cWyEY2sn/7d5/uXTq2KeJUY4traS28i3TmOtWzFPEyMc22c8Z8I3lWe9
ivk3Gqu9fOq5ZortIHme8r0mn94V82pihGNbv+KYSuIc5CIvOmzkSiV/LN/3
lGcD6RbIb2lshCfyaZbPezyX8tmwYt4tMcKxdZLcIN8OmttGFfOVEiMc21ec
28KPlGfjivlPsRGOra+wC3tUsX0qnt9qiRHOXLG3lW9L0fNkju/U+h28ZYvf
0duEdzLv0H68l+T3c2yEt1dMVXk+YZ/Kf5OK+RqJEY6twvMn30xjbVoxXz0x
wrEtVs6O3Dfl2axi/ktshGPj2+pTvhPl0yp5c65R0PPthQ09uq5F2+Fraaw1
eQ6kH1/ntXONWP+Aim0byGc14Vbi3YQrc441+zoMrJivnRjh2PDrLGzVWFuE
uJ6JEY6NMbuEcbesmOMDwrExLjHkYXz4uomvM9f4E84i9rjkleWzdcW8V2KE
Y2MdA8IY/D0Ff0fRFO4p95L72ls+u0peQz6DhN3F10uMcL6Vhuk7JJN9HH+f
WzEfVTLCsS3lPBcuVP7tKua/x0Y4th7KuYBvf/kMrphvlBjh2Lav+LuO78Ah
ktfieUiM8JWabe/W7O+lRSEGjg/2VThz2vk7kvs1gv3DORZbP7RiW0/ua1jX
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
uuQdJG8hebLki0v7bRr+cGJ2ZB8V7iKfS0rzveVzaen4vZIRTq7+rF3h3vLf
iXUgeSrf/Rg3yXtKvqy032bJ+ci7esRiI57Yy0vHE/uP0vEgfJ/k4zIk5g++
xIyM8aT/jOlVpfu8r/QDhVeIby39bpLXYYxVz5Wl+X7JCMdGHPGM16asXeFY
+V9dmm8j/2s4l0neX/I/Je8heXSyHT9iaJc2R9Vs7yd5dM21YNsiOcd20p8W
PuTqF/OOfu4cPrSH336sb855LcYdQ95T+uuZW5wnmMuxV1xXmo9JRji2G0rH
H5CMcHLtLZ+bGNOGEX6gfO6UvIvkUXznFN5Yuk0+tHl6zXo4MnHkOKPmuJGS
p9Uch99ByXryYrs+8lHPzbFXsQfuX/f+Q19ukX4fyQcn4y2xV/K/LP6PNaHF
/9OCjy3sg519+LbSuQ5L9t09/Nmn7oi8tEnbOzTte1vsfQtqabqG20vHUwOx
+0T+O2LP2yny40cbE9nLhafK52DOM5KPl3yE5AflM0b8HuE48UnJuK90R6u2
u0rHHJ2McOIPYh0IL6/Zn3hiDmMuM5Y18wMiz6HS30f/xa8tPYfGJevRXSP/
u0vnPUr6e0vnmpwch98xyTnvL50XO360x/HfsenjTg5yUd/4umPJj8/s0n6z
Y54yJ/F5INpgTMZE/YwN/Fj5TKh77jL+D5XmxyfvkeyVY5OR/XJmzf27Nub3
v5jDvAupcO304ZjI+VCsDez4jW24Fmo6LlmP7iiN4SOlj+UJyQjnuJ6BTji3
5vn+GH1h3KmXdSX9o6X59GSEY8P/0Fgjk+peF4zh46X5Scn4eKwZfJ+kDxwP
fZ5g3jQsj4s6H4u1y/rCju1EyXOif4zbk1EjepB81PC29KdI/luyL7HkfE76
4ySfKv0U4R6cs+U/lz2WPiTj3Dg2o1kT4mfL56nS/HD5PF06/uTIAyfXZOzC
W2puZ0/Js/hblTnB+VnyM6X9ZkRtc6Jv6LARTw0TYp4Q+2zpeHBBruRaqIn6
aIu+0d7rwpPFz5HPi5KnSZ4p+Vjh88wJ5qvkIzmvK/8Lpfn4ZIRjI474EZz/
GD/hXfJ/qTQ/Xf6vSD5R8lmSX+a4SJ6QbMfvqMhDjr/VbJ8o+SK+u3LsJd9b
c469OFeED7nwo17qPiXZh/bwQ0c/bq+5r/R5b/EDGUfOsdK/VpofmYxwbPjj
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
ym38H+Zm4UI=
         "]]]}, {}, {}, {}, {}}, 
     {GrayLevel[0], 
      Line3DBox[{3462, 1, 5012, 1962, 3487, 1856, 5004, 1954, 3479, 59, 5010, 
       1960, 3485, 1860, 5008, 1958, 3483, 1859, 5006, 1956, 3481, 1857, 4989,
        1939, 3464, 1855, 4988, 1938, 3463, 1854, 6428, 3378, 4903, 1853, 
       6432, 3382, 4907, 1934, 6434, 3384, 4909, 1849, 6417, 3367, 4892, 1848,
        6433, 3383, 4908, 1935, 6430, 3380, 4905, 1850, 4987, 1937, 3462}], 
      Line3DBox[{3465, 8, 5015, 1965, 3490, 69, 5016, 1966, 3491, 5, 4990, 
       1940, 3465}], 
      Line3DBox[{3466, 14, 5018, 1968, 3493, 78, 5019, 1969, 3494, 12, 4991, 
       1941, 3466}], 
      Line3DBox[{3467, 22, 5024, 1974, 3499, 94, 5025, 1975, 3500, 20, 4992, 
       1942, 3467}], 
      Line3DBox[{3468, 26, 5028, 1978, 3503, 103, 5029, 1979, 3504, 24, 4993, 
       1943, 3468}], 
      Line3DBox[{3469, 37, 5036, 1986, 3511, 119, 5037, 1987, 3512, 34, 4994, 
       1944, 3469}], 
      Line3DBox[{3470, 43, 5039, 1989, 3514, 128, 5040, 1990, 3515, 40, 4995, 
       1945, 3470}], 
      Line3DBox[{3471, 45, 5042, 1992, 3517, 131, 5043, 1993, 3518, 42, 4996, 
       1946, 3471}], 
      Line3DBox[{3472, 51, 5048, 1998, 3523, 142, 5049, 1999, 3524, 48, 4997, 
       1947, 3472}], 
      Line3DBox[{3473, 56, 5054, 2004, 3529, 149, 5055, 2005, 3530, 53, 4998, 
       1948, 3473}], 
      Line3DBox[{3475, 57, 5060, 2010, 3535, 1861, 5056, 2006, 3531, 150, 
       5059, 2009, 3534, 1858, 5062, 2012, 3537, 58, 5000, 1950, 3475}], 
      Line3DBox[{3488, 62, 5063, 2013, 3538, 155, 5064, 2014, 3539, 60, 5013, 
       1963, 3488}], 
      Line3DBox[{3489, 68, 5066, 2016, 3541, 163, 5067, 2017, 3542, 65, 5014, 
       1964, 3489}], 
      Line3DBox[{3492, 75, 5068, 2018, 3543, 169, 5069, 2019, 3544, 73, 5017, 
       1967, 3492}], 
      Line3DBox[{3495, 83, 5070, 2020, 3545, 175, 5071, 2021, 3546, 79, 5020, 
       1970, 3495}], 
      Line3DBox[{3496, 85, 5072, 2022, 3547, 178, 5073, 2023, 3548, 82, 5021, 
       1971, 3496}], 
      Line3DBox[{3497, 90, 5075, 2025, 3550, 182, 5076, 2026, 3551, 87, 5022, 
       1972, 3497}], 
      Line3DBox[{3498, 93, 5077, 2027, 3552, 184, 5078, 2028, 3553, 89, 5023, 
       1973, 3498}], 
      Line3DBox[{3501, 96, 5079, 2029, 3554, 187, 5080, 2030, 3555, 92, 5026, 
       1976, 3501}], 
      Line3DBox[{3502, 99, 5081, 2031, 3556, 190, 5082, 2032, 3557, 95, 5027, 
       1977, 3502}], 
      Line3DBox[{3505, 105, 5085, 2035, 3560, 195, 5086, 2036, 3561, 101, 
       5030, 1980, 3505}], 
      Line3DBox[{3506, 107, 5088, 2038, 3563, 197, 5089, 2039, 3564, 104, 
       5031, 1981, 3506}], 
      Line3DBox[{3507, 110, 5090, 2040, 3565, 200, 5091, 2041, 3566, 106, 
       5032, 1982, 3507}], 
      Line3DBox[{3508, 113, 5092, 2042, 3567, 201, 5093, 2043, 3568, 109, 
       5033, 1983, 3508}], 
      Line3DBox[{3509, 117, 5094, 2044, 3569, 206, 5095, 2045, 3570, 115, 
       5034, 1984, 3509}], 
      Line3DBox[{3510, 118, 5097, 2047, 3572, 209, 5098, 2048, 3573, 116, 
       5035, 1985, 3510}], 
      Line3DBox[{3513, 123, 5100, 2050, 3575, 214, 5101, 2051, 3576, 120, 
       5038, 1988, 3513}], 
      Line3DBox[{3516, 130, 5104, 2054, 3579, 223, 5105, 2055, 3580, 126, 
       5041, 1991, 3516}], 
      Line3DBox[{3519, 133, 5106, 2056, 3581, 225, 5107, 2057, 3582, 129, 
       5044, 1994, 3519}], 
      Line3DBox[{3520, 135, 5108, 2058, 3583, 227, 5109, 2059, 3584, 132, 
       5045, 1995, 3520}], 
      Line3DBox[{3521, 138, 5111, 2061, 3586, 230, 5112, 2062, 3587, 134, 
       5046, 1996, 3521}], 
      Line3DBox[{3522, 141, 5113, 2063, 3588, 232, 5114, 2064, 3589, 137, 
       5047, 1997, 3522}], 
      Line3DBox[{3525, 144, 5116, 2066, 3591, 235, 5117, 2067, 3592, 140, 
       5050, 2000, 3525}], 
      Line3DBox[{3540, 159, 5127, 2077, 3602, 245, 5128, 2078, 3603, 156, 
       5065, 2015, 3540}], 
      Line3DBox[{3549, 180, 5133, 2083, 3608, 266, 5134, 2084, 3609, 176, 
       5074, 2024, 3549}], 
      Line3DBox[{3558, 192, 5140, 2090, 3615, 280, 5141, 2091, 3616, 188, 
       5083, 2033, 3558}], 
      Line3DBox[{3559, 194, 5143, 2093, 3618, 283, 5144, 2094, 3619, 191, 
       5084, 2034, 3559}], 
      Line3DBox[{3562, 196, 5146, 2096, 3621, 286, 5147, 2097, 3622, 193, 
       5087, 2037, 3562}], 
      Line3DBox[{3571, 208, 5152, 2102, 3627, 300, 5153, 2103, 3628, 205, 
       5096, 2046, 3571}], 
      Line3DBox[{3574, 213, 5155, 2105, 3630, 305, 5156, 2106, 3631, 210, 
       5099, 2049, 3574}], 
      Line3DBox[{3577, 219, 5157, 2107, 3632, 309, 5158, 2108, 3633, 215, 
       5102, 2052, 3577}], 
      Line3DBox[{3578, 222, 5160, 2110, 3635, 312, 5161, 2111, 3636, 218, 
       5103, 2053, 3578}], 
      Line3DBox[{3585, 229, 5164, 2114, 3639, 320, 5165, 2115, 3640, 226, 
       5110, 2060, 3585}], 
      Line3DBox[{3590, 234, 5170, 2120, 3645, 326, 5171, 2121, 3646, 231, 
       5115, 2065, 3590}], 
      Line3DBox[{3594, 237, 5122, 2072, 3597, 1862, 5125, 2075, 3600, 147, 
       5124, 2074, 3599, 1863, 5119, 2069, 3594}], 
      Line3DBox[{3601, 242, 5181, 2131, 3656, 335, 5182, 2132, 3657, 239, 
       5126, 2076, 3601}], 
      Line3DBox[{3604, 247, 5184, 2134, 3659, 340, 5185, 2135, 3660, 244, 
       5129, 2079, 3604}], 
      Line3DBox[{3605, 252, 5187, 2137, 3662, 345, 5188, 2138, 3663, 248, 
       5130, 2080, 3605}], 
      Line3DBox[{3606, 263, 5191, 2141, 3666, 357, 5192, 2142, 3667, 261, 
       5131, 2081, 3606}], 
      Line3DBox[{3607, 265, 5194, 2144, 3669, 360, 5195, 2145, 3670, 262, 
       5132, 2082, 3607}], 
      Line3DBox[{3610, 268, 5196, 2146, 3671, 362, 5197, 2147, 3672, 264, 
       5135, 2085, 3610}], 
      Line3DBox[{3611, 271, 5199, 2149, 3674, 365, 5200, 2150, 3675, 267, 
       5136, 2086, 3611}], 
      Line3DBox[{3612, 274, 5201, 2151, 3676, 367, 5202, 2152, 3677, 270, 
       5137, 2087, 3612}], 
      Line3DBox[{3613, 277, 5203, 2153, 3678, 370, 5204, 2154, 3679, 273, 
       5138, 2088, 3613}], 
      Line3DBox[{3614, 279, 5206, 2156, 3681, 373, 5207, 2157, 3682, 276, 
       5139, 2089, 3614}], 
      Line3DBox[{3617, 282, 5209, 2159, 3684, 376, 5210, 2160, 3685, 278, 
       5142, 2092, 3617}], 
      Line3DBox[{3620, 285, 5211, 2161, 3686, 379, 5212, 2162, 3687, 281, 
       5145, 2095, 3620}], 
      Line3DBox[{3623, 290, 5214, 2164, 3689, 384, 5215, 2165, 3690, 287, 
       5148, 2098, 3623}], 
      Line3DBox[{3624, 293, 5217, 2167, 3692, 387, 5218, 2168, 3693, 289, 
       5149, 2099, 3624}], 
      Line3DBox[{3625, 296, 5220, 2170, 3695, 389, 5221, 2171, 3696, 292, 
       5150, 2100, 3625}], 
      Line3DBox[{3626, 299, 5222, 2172, 3697, 392, 5223, 2173, 3698, 295, 
       5151, 2101, 3626}], 
      Line3DBox[{3629, 304, 5225, 2175, 3700, 398, 5226, 2176, 3701, 301, 
       5154, 2104, 3629}], 
      Line3DBox[{3634, 311, 5228, 2178, 3703, 404, 5229, 2179, 3704, 307, 
       5159, 2109, 3634}], 
      Line3DBox[{3637, 314, 5230, 2180, 3705, 406, 5231, 2181, 3706, 310, 
       5162, 2112, 3637}], 
      Line3DBox[{3638, 317, 5232, 2182, 3707, 408, 5233, 2183, 3708, 313, 
       5163, 2113, 3638}], 
      Line3DBox[{3641, 322, 5238, 2188, 3713, 414, 5239, 2189, 3714, 319, 
       5166, 2116, 3641}], 
      Line3DBox[{3643, 324, 5244, 2194, 3719, 1867, 5240, 2190, 3715, 415, 
       5243, 2193, 3718, 1866, 5246, 2196, 3721, 325, 5168, 2118, 3643}], 
      Line3DBox[{3647, 327, 5175, 2125, 3650, 1864, 5179, 2129, 3654, 236, 
       5177, 2127, 3652, 1865, 5172, 2122, 3647}], 
      Line3DBox[{3655, 331, 5247, 2197, 3722, 420, 5248, 2198, 3723, 329, 
       5180, 2130, 3655}], 
      Line3DBox[{3658, 339, 5251, 2201, 3726, 428, 5252, 2202, 3727, 336, 
       5183, 2133, 3658}], 
      Line3DBox[{3661, 342, 5253, 2203, 3728, 430, 5254, 2204, 3729, 338, 
       5186, 2136, 3661}], 
      Line3DBox[{3664, 347, 5256, 2206, 3731, 435, 5257, 2207, 3732, 343, 
       5189, 2139, 3664}], 
      Line3DBox[{3665, 352, 5260, 2210, 3735, 440, 5261, 2211, 3736, 349, 
       5190, 2140, 3665}], 
      Line3DBox[{3668, 359, 5263, 2213, 3738, 448, 5264, 2214, 3739, 355, 
       5193, 2143, 3668}], 
      Line3DBox[{3673, 364, 5266, 2216, 3741, 453, 5267, 2217, 3742, 361, 
       5198, 2148, 3673}], 
      Line3DBox[{3680, 372, 5268, 2218, 3743, 458, 5269, 2219, 3744, 368, 
       5205, 2155, 3680}], 
      Line3DBox[{3683, 375, 5271, 2221, 3746, 461, 5272, 2222, 3747, 371, 
       5208, 2158, 3683}], 
      Line3DBox[{3688, 380, 5273, 2223, 3748, 464, 5274, 2224, 3749, 377, 
       5213, 2163, 3688}], 
      Line3DBox[{3691, 386, 5276, 2226, 3751, 470, 5277, 2227, 3752, 382, 
       5216, 2166, 3691}], 
      Line3DBox[{3694, 388, 5279, 2229, 3754, 473, 5280, 2230, 3755, 385, 
       5219, 2169, 3694}], 
      Line3DBox[{3699, 394, 5282, 2232, 3757, 479, 5283, 2233, 3758, 390, 
       5224, 2174, 3699}], 
      Line3DBox[{3702, 399, 5285, 2235, 3760, 482, 5286, 2236, 3761, 396, 
       5227, 2177, 3702}], 
      Line3DBox[{3712, 413, 5300, 2250, 3775, 498, 5301, 2251, 3776, 409, 
       5237, 2187, 3712}], 
      Line3DBox[{3724, 422, 5304, 2254, 3779, 503, 5305, 2255, 3780, 418, 
       5249, 2199, 3724}], 
      Line3DBox[{3725, 427, 5306, 2256, 3781, 505, 5307, 2257, 3782, 423, 
       5250, 2200, 3725}], 
      Line3DBox[{3730, 434, 5310, 2260, 3785, 513, 5311, 2261, 3786, 431, 
       5255, 2205, 3730}], 
      Line3DBox[{3733, 437, 5313, 2263, 3788, 516, 5314, 2264, 3789, 433, 
       5258, 2208, 3733}], 
      Line3DBox[{3734, 439, 5315, 2265, 3790, 518, 5316, 2266, 3791, 436, 
       5259, 2209, 3734}], 
      Line3DBox[{3737, 445, 5318, 2268, 3793, 523, 5319, 2269, 3794, 441, 
       5262, 2212, 3737}], 
      Line3DBox[{3740, 449, 5322, 2272, 3797, 528, 5323, 2273, 3798, 446, 
       5265, 2215, 3740}], 
      Line3DBox[{3745, 460, 5329, 2279, 3804, 543, 5330, 2280, 3805, 456, 
       5270, 2220, 3745}], 
      Line3DBox[{3750, 469, 5332, 2282, 3807, 553, 5333, 2283, 3808, 465, 
       5275, 2225, 3750}], 
      Line3DBox[{3753, 472, 5335, 2285, 3810, 556, 5336, 2286, 3811, 468, 
       5278, 2228, 3753}], 
      Line3DBox[{3756, 475, 5338, 2288, 3813, 558, 5339, 2289, 3814, 471, 
       5281, 2231, 3756}], 
      Line3DBox[{3759, 480, 5341, 2291, 3816, 563, 5342, 2292, 3817, 477, 
       5284, 2234, 3759}], 
      Line3DBox[{3762, 487, 5345, 2295, 3820, 571, 5346, 2296, 3821, 483, 
       5287, 2237, 3762}], 
      Line3DBox[{3763, 489, 5348, 2298, 3823, 574, 5349, 2299, 3824, 486, 
       5288, 2238, 3763}], 
      Line3DBox[{3764, 491, 5351, 2301, 3826, 577, 5352, 2302, 3827, 488, 
       5289, 2239, 3764}], 
      Line3DBox[{3766, 493, 5358, 2308, 3833, 1871, 5353, 2303, 3828, 578, 
       5356, 2306, 3831, 1870, 5359, 2309, 3834, 494, 5291, 2241, 3766}], 
      Line3DBox[{3770, 497, 5298, 2248, 3773, 1868, 5302, 2252, 3777, 412, 
       5299, 2249, 3774, 1869, 5295, 2245, 3770}], 
      Line3DBox[{3778, 502, 5362, 2312, 3837, 585, 5363, 2313, 3838, 499, 
       5303, 2253, 3778}], 
      Line3DBox[{3783, 510, 5365, 2315, 3840, 597, 5366, 2316, 3841, 506, 
       5308, 2258, 3783}], 
      Line3DBox[{3784, 512, 5368, 2318, 3843, 600, 5369, 2319, 3844, 509, 
       5309, 2259, 3784}], 
      Line3DBox[{3787, 515, 5370, 2320, 3845, 603, 5371, 2321, 3846, 511, 
       5312, 2262, 3787}], 
      Line3DBox[{3792, 522, 5374, 2324, 3849, 611, 5375, 2325, 3850, 519, 
       5317, 2267, 3792}], 
      Line3DBox[{3795, 525, 5376, 2326, 3851, 613, 5377, 2327, 3852, 521, 
       5320, 2270, 3795}], 
      Line3DBox[{3796, 527, 5378, 2328, 3853, 615, 5379, 2329, 3854, 524, 
       5321, 2271, 3796}], 
      Line3DBox[{3799, 530, 5380, 2330, 3855, 617, 5381, 2331, 3856, 526, 
       5324, 2274, 3799}], 
      Line3DBox[{3800, 533, 5383, 2333, 3858, 619, 5384, 2334, 3859, 529, 
       5325, 2275, 3800}], 
      Line3DBox[{3801, 536, 5385, 2335, 3860, 622, 5386, 2336, 3861, 532, 
       5326, 2276, 3801}], 
      Line3DBox[{3802, 539, 5388, 2338, 3863, 625, 5389, 2339, 3864, 535, 
       5327, 2277, 3802}], 
      Line3DBox[{3803, 542, 5391, 2341, 3866, 628, 5392, 2342, 3867, 538, 
       5328, 2278, 3803}], 
      Line3DBox[{3806, 545, 5393, 2343, 3868, 630, 5394, 2344, 3869, 541, 
       5331, 2281, 3806}], 
      Line3DBox[{3809, 555, 5396, 2346, 3871, 637, 5397, 2347, 3872, 551, 
       5334, 2284, 3809}], 
      Line3DBox[{3812, 557, 5399, 2349, 3874, 640, 5400, 2350, 3875, 554, 
       5337, 2287, 3812}], 
      Line3DBox[{3815, 562, 5402, 2352, 3877, 644, 5403, 2353, 3878, 559, 
       5340, 2290, 3815}], 
      Line3DBox[{3818, 564, 5404, 2354, 3879, 647, 5405, 2355, 3880, 561, 
       5343, 2293, 3818}], 
      Line3DBox[{3819, 570, 5407, 2357, 3882, 652, 5408, 2358, 3883, 566, 
       5344, 2294, 3819}], 
      Line3DBox[{3822, 573, 5413, 2363, 3888, 656, 5414, 2364, 3889, 569, 
       5347, 2297, 3822}], 
      Line3DBox[{3835, 582, 5423, 2373, 3898, 660, 5424, 2374, 3899, 580, 
       5360, 2310, 3835}], 
      Line3DBox[{3836, 584, 5425, 2375, 3900, 662, 5426, 2376, 3901, 581, 
       5361, 2311, 3836}], 
      Line3DBox[{3839, 596, 5429, 2379, 3904, 672, 5430, 2380, 3905, 592, 
       5364, 2314, 3839}], 
      Line3DBox[{3842, 599, 5431, 2381, 3906, 675, 5432, 2382, 3907, 595, 
       5367, 2317, 3842}], 
      Line3DBox[{3847, 605, 5435, 2385, 3910, 680, 5436, 2386, 3911, 601, 
       5372, 2322, 3847}], 
      Line3DBox[{3848, 610, 5439, 2389, 3914, 685, 5440, 2390, 3915, 606, 
       5373, 2323, 3848}], 
      Line3DBox[{3857, 618, 5445, 2395, 3920, 697, 5446, 2396, 3921, 616, 
       5382, 2332, 3857}], 
      Line3DBox[{3862, 624, 5449, 2399, 3924, 703, 5450, 2400, 3925, 620, 
       5387, 2337, 3862}], 
      Line3DBox[{3865, 627, 5452, 2402, 3927, 706, 5453, 2403, 3928, 623, 
       5390, 2340, 3865}], 
      Line3DBox[{3870, 634, 5458, 2408, 3933, 718, 5459, 2409, 3934, 631, 
       5395, 2345, 3870}], 
      Line3DBox[{3873, 639, 5462, 2412, 3937, 724, 5463, 2413, 3938, 635, 
       5398, 2348, 3873}], 
      Line3DBox[{3876, 641, 5465, 2415, 3940, 726, 5466, 2416, 3941, 638, 
       5401, 2351, 3876}], 
      Line3DBox[{3881, 651, 5473, 2423, 3948, 737, 5474, 2424, 3949, 648, 
       5406, 2356, 3881}], 
      Line3DBox[{3885, 653, 5480, 2430, 3955, 1875, 5475, 2425, 3950, 738, 
       5478, 2428, 3953, 1874, 5482, 2432, 3957, 654, 5410, 2360, 3885}], 
      Line3DBox[{3890, 657, 5418, 2368, 3893, 1872, 5422, 2372, 3897, 575, 
       5420, 2370, 3895, 1873, 5415, 2365, 3890}], 
      Line3DBox[{3902, 669, 5486, 2436, 3961, 752, 5487, 2437, 3962, 666, 
       5427, 2377, 3902}], 
      Line3DBox[{3903, 671, 5488, 2438, 3963, 755, 5489, 2439, 3964, 668, 
       5428, 2378, 3903}], 
      Line3DBox[{3908, 677, 5490, 2440, 3965, 759, 5491, 2441, 3966, 673, 
       5433, 2383, 3908}], 
      Line3DBox[{3909, 679, 5493, 2443, 3968, 761, 5494, 2444, 3969, 676, 
       5434, 2384, 3909}], 
      Line3DBox[{3912, 682, 5495, 2445, 3970, 764, 5496, 2446, 3971, 678, 
       5437, 2387, 3912}], 
      Line3DBox[{3913, 684, 5497, 2447, 3972, 766, 5498, 2448, 3973, 681, 
       5438, 2388, 3913}], 
      Line3DBox[{3916, 687, 5499, 2449, 3974, 769, 5500, 2450, 3975, 683, 
       5441, 2391, 3916}], 
      Line3DBox[{3917, 690, 5501, 2451, 3976, 771, 5502, 2452, 3977, 686, 
       5442, 2392, 3917}], 
      Line3DBox[{3918, 693, 5503, 2453, 3978, 774, 5504, 2454, 3979, 689, 
       5443, 2393, 3918}], 
      Line3DBox[{3919, 696, 5505, 2455, 3980, 775, 5506, 2456, 3981, 692, 
       5444, 2394, 3919}], 
      Line3DBox[{3922, 699, 5507, 2457, 3982, 778, 5508, 2458, 3983, 695, 
       5447, 2397, 3922}], 
      Line3DBox[{3923, 702, 5509, 2459, 3984, 781, 5510, 2460, 3985, 698, 
       5448, 2398, 3923}], 
      Line3DBox[{3926, 705, 5511, 2461, 3986, 783, 5512, 2462, 3987, 701, 
       5451, 2401, 3926}], 
      Line3DBox[{3929, 708, 5513, 2463, 3988, 786, 5514, 2464, 3989, 704, 
       5454, 2404, 3929}], 
      Line3DBox[{3930, 711, 5516, 2466, 3991, 788, 5517, 2467, 3992, 707, 
       5455, 2405, 3930}], 
      Line3DBox[{3931, 714, 5518, 2468, 3993, 791, 5519, 2469, 3994, 710, 
       5456, 2406, 3931}], 
      Line3DBox[{3932, 717, 5521, 2471, 3996, 793, 5522, 2472, 3997, 713, 
       5457, 2407, 3932}], 
      Line3DBox[{3935, 720, 5523, 2473, 3998, 795, 5524, 2474, 3999, 716, 
       5460, 2410, 3935}], 
      Line3DBox[{3936, 723, 5525, 2475, 4000, 798, 5526, 2476, 4001, 719, 
       5461, 2411, 3936}], 
      Line3DBox[{3939, 725, 5527, 2477, 4002, 800, 5528, 2478, 4003, 722, 
       5464, 2414, 3939}], 
      Line3DBox[{3942, 730, 5529, 2479, 4004, 805, 5530, 2480, 4005, 727, 
       5467, 2417, 3942}], 
      Line3DBox[{3944, 734, 5540, 2490, 4015, 1877, 5536, 2486, 4011, 810, 
       5539, 2489, 4014, 1876, 5542, 2492, 4017, 735, 5469, 2419, 3944}], 
      Line3DBox[{3958, 742, 5543, 2493, 4018, 814, 5544, 2494, 4019, 740, 
       5483, 2433, 3958}], 
      Line3DBox[{3959, 745, 5546, 2496, 4021, 817, 5547, 2497, 4022, 741, 
       5484, 2434, 3959}], 
      Line3DBox[{3960, 750, 5549, 2499, 4024, 821, 5550, 2500, 4025, 746, 
       5485, 2435, 3960}], 
      Line3DBox[{3967, 760, 5555, 2505, 4030, 833, 5556, 2506, 4031, 757, 
       5492, 2442, 3967}], 
      Line3DBox[{3990, 787, 5561, 2511, 4036, 858, 5562, 2512, 4037, 784, 
       5515, 2465, 3990}], 
      Line3DBox[{3995, 792, 5565, 2515, 4040, 864, 5566, 2516, 4041, 789, 
       5520, 2470, 3995}], 
      Line3DBox[{4007, 806, 5578, 2528, 4053, 1879, 5573, 2523, 4048, 879, 
       5576, 2526, 4051, 1878, 5579, 2529, 4054, 807, 5532, 2482, 4007}], 
      Line3DBox[{4020, 816, 5580, 2530, 4055, 885, 5581, 2531, 4056, 813, 
       5545, 2495, 4020}], 
      Line3DBox[{4023, 820, 5583, 2533, 4058, 890, 5584, 2534, 4059, 818, 
       5548, 2498, 4023}], 
      Line3DBox[{4026, 826, 5586, 2536, 4061, 895, 5587, 2537, 4062, 822, 
       5551, 2501, 4026}], 
      Line3DBox[{4027, 828, 5589, 2539, 4064, 898, 5590, 2540, 4065, 825, 
       5552, 2502, 4027}], 
      Line3DBox[{4028, 831, 5591, 2541, 4066, 900, 5592, 2542, 4067, 827, 
       5553, 2503, 4028}], 
      Line3DBox[{4029, 832, 5594, 2544, 4069, 903, 5595, 2545, 4070, 830, 
       5554, 2504, 4029}], 
      Line3DBox[{4032, 838, 5596, 2546, 4071, 909, 5597, 2547, 4072, 834, 
       5557, 2507, 4032}], 
      Line3DBox[{4033, 844, 5600, 2550, 4075, 916, 5601, 2551, 4076, 841, 
       5558, 2508, 4033}], 
      Line3DBox[{4034, 851, 5603, 2553, 4078, 923, 5604, 2554, 4079, 848, 
       5559, 2509, 4034}], 
      Line3DBox[{4035, 855, 5606, 2556, 4081, 928, 5607, 2557, 4082, 852, 
       5560, 2510, 4035}], 
      Line3DBox[{4038, 860, 5609, 2559, 4084, 933, 5610, 2560, 4085, 857, 
       5563, 2513, 4038}], 
      Line3DBox[{4039, 863, 5612, 2562, 4087, 936, 5613, 2563, 4088, 859, 
       5564, 2514, 4039}], 
      Line3DBox[{4042, 866, 5615, 2565, 4090, 939, 5616, 2566, 4091, 862, 
       5567, 2517, 4042}], 
      Line3DBox[{4043, 869, 5618, 2568, 4093, 941, 5619, 2569, 4094, 865, 
       5568, 2518, 4043}], 
      Line3DBox[{4044, 872, 5620, 2570, 4095, 943, 5621, 2571, 4096, 868, 
       5569, 2519, 4044}], 
      Line3DBox[{4045, 874, 5625, 2575, 4100, 946, 5626, 2576, 4101, 871, 
       5570, 2520, 4045}], 
      Line3DBox[{4047, 877, 5632, 2582, 4107, 948, 5633, 2583, 4108, 873, 
       5572, 2522, 4047}], 
      Line3DBox[{4057, 889, 5639, 2589, 4114, 959, 5640, 2590, 4115, 886, 
       5582, 2532, 4057}], 
      Line3DBox[{4060, 892, 5641, 2591, 4116, 962, 5642, 2592, 4117, 888, 
       5585, 2535, 4060}], 
      Line3DBox[{4063, 897, 5645, 2595, 4120, 966, 5646, 2596, 4121, 893, 
       5588, 2538, 4063}], 
      Line3DBox[{4068, 902, 5648, 2598, 4123, 972, 5649, 2599, 4124, 899, 
       5593, 2543, 4068}], 
      Line3DBox[{4073, 912, 5651, 2601, 4126, 981, 5652, 2602, 4127, 910, 
       5598, 2548, 4073}], 
      Line3DBox[{4074, 915, 5653, 2603, 4128, 984, 5654, 2604, 4129, 911, 
       5599, 2549, 4074}], 
      Line3DBox[{4077, 922, 5657, 2607, 4132, 992, 5658, 2608, 4133, 918, 
       5602, 2552, 4077}], 
      Line3DBox[{4080, 924, 5659, 2609, 4134, 995, 5660, 2610, 4135, 921, 
       5605, 2555, 4080}], 
      Line3DBox[{4083, 929, 5663, 2613, 4138, 1000, 5664, 2614, 4139, 926, 
       5608, 2558, 4083}], 
      Line3DBox[{4086, 935, 5665, 2615, 4140, 1004, 5666, 2616, 4141, 931, 
       5611, 2561, 4086}], 
      Line3DBox[{4089, 938, 5667, 2617, 4142, 1007, 5668, 2618, 4143, 934, 
       5614, 2564, 4089}], 
      Line3DBox[{4092, 940, 5670, 2620, 4145, 1010, 5671, 2621, 4146, 937, 
       5617, 2567, 4092}], 
      Line3DBox[{4102, 947, 5630, 2580, 4105, 1880, 5635, 2585, 4110, 876, 
       5631, 2581, 4106, 1881, 5627, 2577, 4102}], 
      Line3DBox[{4111, 951, 5682, 2632, 4157, 1018, 5683, 2633, 4158, 949, 
       5636, 2586, 4111}], 
      Line3DBox[{4112, 954, 5685, 2635, 4160, 1021, 5686, 2636, 4161, 950, 
       5637, 2587, 4112}], 
      Line3DBox[{4113, 955, 5687, 2637, 4162, 1024, 5688, 2638, 4163, 953, 
       5638, 2588, 4113}], 
      Line3DBox[{4118, 964, 5690, 2640, 4165, 1030, 5691, 2641, 4166, 960, 
       5643, 2593, 4118}], 
      Line3DBox[{4119, 965, 5693, 2643, 4168, 1032, 5694, 2644, 4169, 963, 
       5644, 2594, 4119}], 
      Line3DBox[{4122, 971, 5696, 2646, 4171, 1037, 5697, 2647, 4172, 967, 
       5647, 2597, 4122}], 
      Line3DBox[{4125, 980, 5699, 2649, 4174, 1046, 5700, 2650, 4175, 976, 
       5650, 2600, 4125}], 
      Line3DBox[{4130, 986, 5703, 2653, 4178, 1051, 5704, 2654, 4179, 982, 
       5655, 2605, 4130}], 
      Line3DBox[{4131, 991, 5706, 2656, 4181, 1056, 5707, 2657, 4182, 987, 
       5656, 2606, 4131}], 
      Line3DBox[{4136, 997, 5709, 2659, 4184, 1060, 5710, 2660, 4185, 993, 
       5661, 2611, 4136}], 
      Line3DBox[{4137, 999, 5712, 2662, 4187, 1063, 5713, 2663, 4188, 996, 
       5662, 2612, 4137}], 
      Line3DBox[{4144, 1009, 5720, 2670, 4195, 1076, 5721, 2671, 4196, 1005, 
       5669, 2619, 4144}], 
      Line3DBox[{4150, 1012, 5728, 2678, 4203, 1078, 5729, 2679, 4204, 1008, 
       5675, 2625, 4150}], 
      Line3DBox[{4151, 1014, 5678, 2628, 4153, 1882, 5681, 2631, 4156, 944, 
       5679, 2629, 4154, 1883, 5676, 2626, 4151}], 
      Line3DBox[{4159, 1020, 5733, 2683, 4208, 1084, 5734, 2684, 4209, 1017, 
       5684, 2634, 4159}], 
      Line3DBox[{4164, 1028, 5737, 2687, 4212, 1092, 5738, 2688, 4213, 1025, 
       5689, 2639, 4164}], 
      Line3DBox[{4167, 1031, 5740, 2690, 4215, 1097, 5741, 2691, 4216, 1029, 
       5692, 2642, 4167}], 
      Line3DBox[{4170, 1036, 5743, 2693, 4218, 1103, 5744, 2694, 4219, 1033, 
       5695, 2645, 4170}], 
      Line3DBox[{4173, 1045, 5747, 2697, 4222, 1114, 5748, 2698, 4223, 1042, 
       5698, 2648, 4173}], 
      Line3DBox[{4176, 1048, 5750, 2700, 4225, 1117, 5751, 2701, 4226, 1044, 
       5701, 2651, 4176}], 
      Line3DBox[{4177, 1050, 5753, 2703, 4228, 1119, 5754, 2704, 4229, 1047, 
       5702, 2652, 4177}], 
      Line3DBox[{4180, 1053, 5755, 2705, 4230, 1122, 5756, 2706, 4231, 1049, 
       5705, 2655, 4180}], 
      Line3DBox[{4183, 1057, 5758, 2708, 4233, 1127, 5759, 2709, 4234, 1054, 
       5708, 2658, 4183}], 
      Line3DBox[{4186, 1062, 5761, 2711, 4236, 1132, 5762, 2712, 4237, 1058, 
       5711, 2661, 4186}], 
      Line3DBox[{4189, 1065, 5763, 2713, 4238, 1135, 5764, 2714, 4239, 1061, 
       5714, 2664, 4189}], 
      Line3DBox[{4190, 1068, 5766, 2716, 4241, 1138, 5767, 2717, 4242, 1064, 
       5715, 2665, 4190}], 
      Line3DBox[{4192, 1073, 5775, 2725, 4250, 1887, 5771, 2721, 4246, 1141, 
       5774, 2724, 4249, 1886, 5779, 2729, 4254, 1074, 5717, 2667, 4192}], 
      Line3DBox[{4194, 1075, 5776, 2726, 4251, 1142, 5777, 2727, 4252, 1070, 
       5719, 2669, 4194}], 
      Line3DBox[{4197, 1077, 5725, 2675, 4200, 1884, 5730, 2680, 4205, 1011, 
       5727, 2677, 4202, 1885, 5722, 2672, 4197}], 
      Line3DBox[{4206, 1081, 5780, 2730, 4255, 1145, 5781, 2731, 4256, 1079, 
       5731, 2681, 4206}], 
      Line3DBox[{4207, 1083, 5783, 2733, 4258, 1148, 5784, 2734, 4259, 1080, 
       5732, 2682, 4207}], 
      Line3DBox[{4210, 1088, 5786, 2736, 4261, 1154, 5787, 2737, 4262, 1085, 
       5735, 2685, 4210}], 
      Line3DBox[{4211, 1091, 5789, 2739, 4264, 1157, 5790, 2740, 4265, 1087, 
       5736, 2686, 4211}], 
      Line3DBox[{4214, 1096, 5792, 2742, 4267, 1161, 5793, 2743, 4268, 1093, 
       5739, 2689, 4214}], 
      Line3DBox[{4217, 1102, 5795, 2745, 4270, 1165, 5796, 2746, 4271, 1098, 
       5742, 2692, 4217}], 
      Line3DBox[{4220, 1108, 5797, 2747, 4272, 1169, 5798, 2748, 4273, 1104, 
       5745, 2695, 4220}], 
      Line3DBox[{4221, 1110, 5799, 2749, 4274, 1171, 5800, 2750, 4275, 1107, 
       5746, 2696, 4221}], 
      Line3DBox[{4224, 1116, 5802, 2752, 4277, 1176, 5803, 2753, 4278, 1112, 
       5749, 2699, 4224}], 
      Line3DBox[{4227, 1118, 5805, 2755, 4280, 1179, 5806, 2756, 4281, 1115, 
       5752, 2702, 4227}], 
      Line3DBox[{4232, 1124, 5808, 2758, 4283, 1185, 5809, 2759, 4284, 1120, 
       5757, 2707, 4232}], 
      Line3DBox[{4235, 1131, 5811, 2761, 4286, 1191, 5812, 2762, 4287, 1128, 
       5760, 2710, 4235}], 
      Line3DBox[{4240, 1137, 5816, 2766, 4291, 1196, 5817, 2767, 4292, 1133, 
       5765, 2715, 4240}], 
      Line3DBox[{4257, 1147, 5825, 2775, 4300, 1204, 5826, 2776, 4301, 1143, 
       5782, 2732, 4257}], 
      Line3DBox[{4260, 1153, 5829, 2779, 4304, 1209, 5830, 2780, 4305, 1149, 
       5785, 2735, 4260}], 
      Line3DBox[{4263, 1156, 5832, 2782, 4307, 1212, 5833, 2783, 4308, 1152, 
       5788, 2738, 4263}], 
      Line3DBox[{4266, 1160, 5836, 2786, 4311, 1218, 5837, 2787, 4312, 1158, 
       5791, 2741, 4266}], 
      Line3DBox[{4269, 1164, 5840, 2790, 4315, 1224, 5841, 2791, 4316, 1162, 
       5794, 2744, 4269}], 
      Line3DBox[{4276, 1175, 5845, 2795, 4320, 1236, 5846, 2796, 4321, 1172, 
       5801, 2751, 4276}], 
      Line3DBox[{4279, 1178, 5848, 2798, 4323, 1238, 5849, 2799, 4324, 1174, 
       5804, 2754, 4279}], 
      Line3DBox[{4282, 1181, 5850, 2800, 4325, 1241, 5851, 2801, 4326, 1177, 
       5807, 2757, 4282}], 
      Line3DBox[{4285, 1187, 5855, 2805, 4330, 1248, 5856, 2806, 4331, 1186, 
       5810, 2760, 4285}], 
      Line3DBox[{4288, 1193, 5859, 2809, 4334, 1254, 5860, 2810, 4335, 1189, 
       5813, 2763, 4288}], 
      Line3DBox[{4290, 1195, 5867, 2817, 4342, 1256, 5868, 2818, 4343, 1192, 
       5815, 2765, 4290}], 
      Line3DBox[{4293, 1197, 5821, 2771, 4296, 1888, 5824, 2774, 4299, 1139, 
       5823, 2773, 4298, 1889, 5818, 2768, 4293}], 
      Line3DBox[{4302, 1206, 5873, 2823, 4348, 1264, 5874, 2824, 4349, 1202, 
       5827, 2777, 4302}], 
      Line3DBox[{4303, 1208, 5876, 2826, 4351, 1267, 5877, 2827, 4352, 1205, 
       5828, 2778, 4303}], 
      Line3DBox[{4306, 1211, 5879, 2829, 4354, 1270, 5880, 2830, 4355, 1207, 
       5831, 2781, 4306}], 
      Line3DBox[{4309, 1214, 5881, 2831, 4356, 1273, 5882, 2832, 4357, 1210, 
       5834, 2784, 4309}], 
      Line3DBox[{4310, 1217, 5884, 2834, 4359, 1276, 5885, 2835, 4360, 1213, 
       5835, 2785, 4310}], 
      Line3DBox[{4313, 1220, 5886, 2836, 4361, 1279, 5887, 2837, 4362, 1216, 
       5838, 2788, 4313}], 
      Line3DBox[{4314, 1223, 5889, 2839, 4364, 1282, 5890, 2840, 4365, 1219, 
       5839, 2789, 4314}], 
      Line3DBox[{4317, 1226, 5891, 2841, 4366, 1284, 5892, 2842, 4367, 1222, 
       5842, 2792, 4317}], 
      Line3DBox[{4318, 1228, 5893, 2843, 4368, 1287, 5894, 2844, 4369, 1225, 
       5843, 2793, 4318}], 
      Line3DBox[{4319, 1233, 5895, 2845, 4370, 1293, 5896, 2846, 4371, 1230, 
       5844, 2794, 4319}], 
      Line3DBox[{4322, 1237, 5899, 2849, 4374, 1299, 5900, 2850, 4375, 1234, 
       5847, 2797, 4322}], 
      Line3DBox[{4327, 1243, 5903, 2853, 4378, 1305, 5904, 2854, 4379, 1239, 
       5852, 2802, 4327}], 
      Line3DBox[{4328, 1245, 5906, 2856, 4381, 1308, 5907, 2857, 4382, 1242, 
       5853, 2803, 4328}], 
      Line3DBox[{4329, 1247, 5909, 2859, 4384, 1311, 5910, 2860, 4385, 1244, 
       5854, 2804, 4329}], 
      Line3DBox[{4333, 1253, 5920, 2870, 4395, 1316, 5921, 2871, 4396, 1249, 
       5858, 2808, 4333}], 
      Line3DBox[{4336, 1255, 5864, 2814, 4339, 1890, 5870, 2820, 4345, 1194, 
       5866, 2816, 4341, 1891, 5861, 2811, 4336}], 
      Line3DBox[{4346, 1261, 5926, 2876, 4401, 1322, 5927, 2877, 4402, 1258, 
       5871, 2821, 4346}], 
      Line3DBox[{4347, 1263, 5928, 2878, 4403, 1324, 5929, 2879, 4404, 1260, 
       5872, 2822, 4347}], 
      Line3DBox[{4350, 1266, 5931, 2881, 4406, 1327, 5932, 2882, 4407, 1262, 
       5875, 2825, 4350}], 
      Line3DBox[{4353, 1269, 5934, 2884, 4409, 1330, 5935, 2885, 4410, 1265, 
       5878, 2828, 4353}], 
      Line3DBox[{4358, 1275, 5937, 2887, 4412, 1334, 5938, 2888, 4413, 1271, 
       5883, 2833, 4358}], 
      Line3DBox[{4363, 1281, 5940, 2890, 4415, 1338, 5941, 2891, 4416, 1277, 
       5888, 2838, 4363}], 
      Line3DBox[{4372, 1295, 5944, 2894, 4419, 1348, 5945, 2895, 4420, 1291, 
       5897, 2847, 4372}], 
      Line3DBox[{4373, 1298, 5946, 2896, 4421, 1351, 5947, 2897, 4422, 1294, 
       5898, 2848, 4373}], 
      Line3DBox[{4376, 1301, 5949, 2899, 4424, 1354, 5950, 2900, 4425, 1297, 
       5901, 2851, 4376}], 
      Line3DBox[{4377, 1304, 5952, 2902, 4427, 1357, 5953, 2903, 4428, 1300, 
       5902, 2852, 4377}], 
      Line3DBox[{4380, 1307, 5955, 2905, 4430, 1360, 5956, 2906, 4431, 1303, 
       5905, 2855, 4380}], 
      Line3DBox[{4383, 1310, 5961, 2911, 4436, 1363, 5962, 2912, 4437, 1306, 
       5908, 2858, 4383}], 
      Line3DBox[{4388, 1313, 5968, 2918, 4443, 1365, 5969, 2919, 4444, 1309, 
       5913, 2863, 4388}], 
      Line3DBox[{4389, 1315, 5917, 2867, 4392, 1892, 5923, 2873, 4398, 1252, 
       5919, 2869, 4394, 1893, 5914, 2864, 4389}], 
      Line3DBox[{4399, 1319, 5972, 2922, 4447, 1368, 5973, 2923, 4448, 1317, 
       5924, 2874, 4399}], 
      Line3DBox[{4400, 1321, 5974, 2924, 4449, 1370, 5975, 2925, 4450, 1318, 
       5925, 2875, 4400}], 
      Line3DBox[{4405, 1326, 5976, 2926, 4451, 1374, 5977, 2927, 4452, 1323, 
       5930, 2880, 4405}], 
      Line3DBox[{4408, 1329, 5979, 2929, 4454, 1377, 5980, 2930, 4455, 1325, 
       5933, 2883, 4408}], 
      Line3DBox[{4411, 1333, 5982, 2932, 4457, 1381, 5983, 2933, 4458, 1331, 
       5936, 2886, 4411}], 
      Line3DBox[{4414, 1337, 5986, 2936, 4461, 1387, 5987, 2937, 4462, 1335, 
       5939, 2889, 4414}], 
      Line3DBox[{4417, 1341, 5989, 2939, 4464, 1391, 5990, 2940, 4465, 1339, 
       5942, 2892, 4417}], 
      Line3DBox[{4418, 1346, 5992, 2942, 4467, 1397, 5993, 2943, 4468, 1343, 
       5943, 2893, 4418}], 
      Line3DBox[{4423, 1353, 5996, 2946, 4471, 1404, 5997, 2947, 4472, 1349, 
       5948, 2898, 4423}], 
      Line3DBox[{4426, 1356, 5998, 2948, 4473, 1405, 5999, 2949, 4474, 1352, 
       5951, 2901, 4426}], 
      Line3DBox[{4429, 1359, 6001, 2951, 4476, 1408, 6002, 2952, 4477, 1355, 
       5954, 2904, 4429}], 
      Line3DBox[{4435, 1362, 6009, 2959, 4484, 1410, 6010, 2960, 4485, 1358, 
       5960, 2910, 4435}], 
      Line3DBox[{4438, 1364, 5966, 2916, 4441, 1894, 5971, 2921, 4446, 1312, 
       5967, 2917, 4442, 1895, 5963, 2913, 4438}], 
      Line3DBox[{4453, 1376, 6014, 2964, 4489, 1424, 6015, 2965, 4490, 1372, 
       5978, 2928, 4453}], 
      Line3DBox[{4456, 1380, 6016, 2966, 4491, 1428, 6017, 2967, 4492, 1378, 
       5981, 2931, 4456}], 
      Line3DBox[{4459, 1383, 6019, 2969, 4494, 1431, 6020, 2970, 4495, 1379, 
       5984, 2934, 4459}], 
      Line3DBox[{4460, 1386, 6022, 2972, 4497, 1434, 6023, 2973, 4498, 1382, 
       5985, 2935, 4460}], 
      Line3DBox[{4463, 1389, 6024, 2974, 4499, 1436, 6025, 2975, 4500, 1385, 
       5988, 2938, 4463}], 
      Line3DBox[{4466, 1396, 6027, 2977, 4502, 1443, 6028, 2978, 4503, 1392, 
       5991, 2941, 4466}], 
      Line3DBox[{4469, 1399, 6030, 2980, 4505, 1445, 6031, 2981, 4506, 1395, 
       5994, 2944, 4469}], 
      Line3DBox[{4470, 1401, 6032, 2982, 4507, 1448, 6033, 2983, 4508, 1398, 
       5995, 2945, 4470}], 
      Line3DBox[{4478, 1409, 6006, 2956, 4481, 1896, 6011, 2961, 4486, 1361, 
       6008, 2958, 4483, 1897, 6003, 2953, 4478}], 
      Line3DBox[{4487, 1415, 6047, 2997, 4522, 1461, 6048, 2998, 4523, 1412, 
       6012, 2962, 4487}], 
      Line3DBox[{4488, 1421, 6049, 2999, 4524, 1465, 6050, 3000, 4525, 1417, 
       6013, 2963, 4488}], 
      Line3DBox[{4493, 1430, 6055, 3005, 4530, 1477, 6056, 3006, 4531, 1426, 
       6018, 2968, 4493}], 
      Line3DBox[{4496, 1433, 6058, 3008, 4533, 1479, 6059, 3009, 4534, 1429, 
       6021, 2971, 4496}], 
      Line3DBox[{4501, 1438, 6061, 3011, 4536, 1485, 6062, 3012, 4537, 1435, 
       6026, 2976, 4501}], 
      Line3DBox[{4504, 1444, 6066, 3016, 4541, 1494, 6067, 3017, 4542, 1442, 
       6029, 2979, 4504}], 
      Line3DBox[{4509, 1450, 6071, 3021, 4546, 1500, 6072, 3022, 4547, 1446, 
       6034, 2984, 4509}], 
      Line3DBox[{4513, 1453, 6079, 3029, 4554, 1502, 6080, 3030, 4555, 1449, 
       6038, 2988, 4513}], 
      Line3DBox[{4514, 1455, 6042, 2992, 4517, 1898, 6045, 2995, 4520, 1406, 
       6043, 2993, 4518, 1899, 6039, 2989, 4514}], 
      Line3DBox[{4521, 1460, 6083, 3033, 4558, 1508, 6084, 3034, 4559, 1458, 
       6046, 2996, 4521}], 
      Line3DBox[{4526, 1467, 6087, 3037, 4562, 1516, 6088, 3038, 4563, 1464, 
       6051, 3001, 4526}], 
      Line3DBox[{4527, 1470, 6089, 3039, 4564, 1518, 6090, 3040, 4565, 1466, 
       6052, 3002, 4527}], 
      Line3DBox[{4528, 1473, 6092, 3042, 4567, 1521, 6093, 3043, 4568, 1469, 
       6053, 3003, 4528}], 
      Line3DBox[{4529, 1476, 6094, 3044, 4569, 1523, 6095, 3045, 4570, 1472, 
       6054, 3004, 4529}], 
      Line3DBox[{4532, 1478, 6097, 3047, 4572, 1526, 6098, 3048, 4573, 1475, 
       6057, 3007, 4532}], 
      Line3DBox[{4535, 1484, 6099, 3049, 4574, 1529, 6100, 3050, 4575, 1480, 
       6060, 3010, 4535}], 
      Line3DBox[{4538, 1487, 6101, 3051, 4576, 1531, 6102, 3052, 4577, 1483, 
       6063, 3013, 4538}], 
      Line3DBox[{4539, 1490, 6103, 3053, 4578, 1534, 6104, 3054, 4579, 1486, 
       6064, 3014, 4539}], 
      Line3DBox[{4540, 1493, 6106, 3056, 4581, 1536, 6107, 3057, 4582, 1489, 
       6065, 3015, 4540}], 
      Line3DBox[{4543, 1496, 6111, 3061, 4586, 1540, 6112, 3062, 4587, 1492, 
       6068, 3018, 4543}], 
      Line3DBox[{4545, 1499, 6119, 3069, 4594, 1542, 6120, 3070, 4595, 1495, 
       6070, 3020, 4545}], 
      Line3DBox[{4548, 1501, 6076, 3026, 4551, 1900, 6081, 3031, 4556, 1452, 
       6078, 3028, 4553, 1901, 6073, 3023, 4548}], 
      Line3DBox[{4557, 1507, 6123, 3073, 4598, 1547, 6124, 3074, 4599, 1503, 
       6082, 3032, 4557}], 
      Line3DBox[{4560, 1510, 6126, 3076, 4601, 1550, 6127, 3077, 4602, 1506, 
       6085, 3035, 4560}], 
      Line3DBox[{4561, 1513, 6129, 3079, 4604, 1553, 6130, 3080, 4605, 1509, 
       6086, 3036, 4561}], 
      Line3DBox[{4566, 1520, 6133, 3083, 4608, 1561, 6134, 3084, 4609, 1517, 
       6091, 3041, 4566}], 
      Line3DBox[{4571, 1525, 6137, 3087, 4612, 1567, 6138, 3088, 4613, 1522, 
       6096, 3046, 4571}], 
      Line3DBox[{4580, 1535, 6145, 3095, 4620, 1582, 6146, 3096, 4621, 1532, 
       6105, 3055, 4580}], 
      Line3DBox[{4584, 1537, 6151, 3101, 4626, 1905, 6147, 3097, 4622, 1583, 
       6150, 3100, 4625, 1904, 6153, 3103, 4628, 1538, 6109, 3059, 4584}], 
      Line3DBox[{4588, 1541, 6116, 3066, 4591, 1902, 6122, 3072, 4597, 1498, 
       6118, 3068, 4593, 1903, 6113, 3063, 4588}], 
      Line3DBox[{4600, 1549, 6155, 3105, 4630, 1592, 6156, 3106, 4631, 1546, 
       6125, 3075, 4600}], 
      Line3DBox[{4603, 1552, 6157, 3107, 4632, 1594, 6158, 3108, 4633, 1548, 
       6128, 3078, 4603}], 
      Line3DBox[{4606, 1557, 6161, 3111, 4636, 1600, 6162, 3112, 4637, 1554, 
       6131, 3081, 4606}], 
      Line3DBox[{4607, 1560, 6164, 3114, 4639, 1603, 6165, 3115, 4640, 1556, 
       6132, 3082, 4607}], 
      Line3DBox[{4610, 1563, 6166, 3116, 4641, 1605, 6167, 3117, 4642, 1559, 
       6135, 3085, 4610}], 
      Line3DBox[{4611, 1566, 6169, 3119, 4644, 1608, 6170, 3120, 4645, 1562, 
       6136, 3086, 4611}], 
      Line3DBox[{4614, 1572, 6172, 3122, 4647, 1612, 6173, 3123, 4648, 1568, 
       6139, 3089, 4614}], 
      Line3DBox[{4615, 1575, 6174, 3124, 4649, 1614, 6175, 3125, 4650, 1571, 
       6140, 3090, 4615}], 
      Line3DBox[{4616, 1578, 6180, 3130, 4655, 1617, 6181, 3131, 4656, 1574, 
       6141, 3091, 4616}], 
      Line3DBox[{4629, 1591, 6189, 3139, 4664, 1626, 6190, 3140, 4665, 1588, 
       6154, 3104, 4629}], 
      Line3DBox[{4634, 1596, 6192, 3142, 4667, 1631, 6193, 3143, 4668, 1593, 
       6159, 3109, 4634}], 
      Line3DBox[{4635, 1599, 6195, 3145, 4670, 1634, 6196, 3146, 4671, 1595, 
       6160, 3110, 4635}], 
      Line3DBox[{4638, 1602, 6198, 3148, 4673, 1637, 6199, 3149, 4674, 1598, 
       6163, 3113, 4638}], 
      Line3DBox[{4643, 1607, 6200, 3150, 4675, 1641, 6201, 3151, 4676, 1604, 
       6168, 3118, 4643}], 
      Line3DBox[{4646, 1610, 6203, 3153, 4678, 1644, 6204, 3154, 4679, 1606, 
       6171, 3121, 4646}], 
      Line3DBox[{4654, 1616, 6213, 3163, 4688, 1651, 6214, 3164, 4689, 1613, 
       6179, 3129, 4654}], 
      Line3DBox[{4657, 1618, 6185, 3135, 4660, 1906, 6187, 3137, 4662, 1580, 
       6186, 3136, 4661, 1907, 6182, 3132, 4657}], 
      Line3DBox[{4663, 1623, 6216, 3166, 4691, 1656, 6217, 3167, 4692, 1619, 
       6188, 3138, 4663}], 
      Line3DBox[{4666, 1628, 6218, 3168, 4693, 1661, 6219, 3169, 4694, 1625, 
       6191, 3141, 4666}], 
      Line3DBox[{4669, 1633, 6220, 3170, 4695, 1666, 6221, 3171, 4696, 1630, 
       6194, 3144, 4669}], 
      Line3DBox[{4672, 1636, 6223, 3173, 4698, 1668, 6224, 3174, 4699, 1632, 
       6197, 3147, 4672}], 
      Line3DBox[{4677, 1643, 6225, 3175, 4700, 1676, 6226, 3176, 4701, 1640, 
       6202, 3152, 4677}], 
      Line3DBox[{4683, 1650, 6211, 3161, 4686, 1908, 6215, 3165, 4690, 1615, 
       6212, 3162, 4687, 1909, 6208, 3158, 4683}], 
      Line3DBox[{4697, 1667, 6242, 3192, 4717, 1698, 6243, 3193, 4718, 1665, 
       6222, 3172, 4697}], 
      Line3DBox[{4704, 1678, 6254, 3204, 4729, 1708, 6255, 3205, 4730, 1675, 
       6229, 3179, 4704}], 
      Line3DBox[{4705, 1679, 6233, 3183, 4708, 1910, 6236, 3186, 4711, 1647, 
       6235, 3185, 4710, 1911, 6230, 3180, 4705}], 
      Line3DBox[{4712, 1683, 6258, 3208, 4733, 1712, 6259, 3209, 4734, 1681, 
       6237, 3187, 4712}], 
      Line3DBox[{4713, 1686, 6260, 3210, 4735, 1715, 6261, 3211, 4736, 1682, 
       6238, 3188, 4713}], 
      Line3DBox[{4714, 1689, 6263, 3213, 4738, 1718, 6264, 3214, 4739, 1685, 
       6239, 3189, 4714}], 
      Line3DBox[{4715, 1692, 6266, 3216, 4741, 1721, 6267, 3217, 4742, 1688, 
       6240, 3190, 4715}], 
      Line3DBox[{4716, 1697, 6269, 3219, 4744, 1730, 6270, 3220, 4745, 1694, 
       6241, 3191, 4716}], 
      Line3DBox[{4719, 1700, 6271, 3221, 4746, 1733, 6272, 3222, 4747, 1696, 
       6244, 3194, 4719}], 
      Line3DBox[{4723, 1705, 6282, 3232, 4757, 1738, 6283, 3233, 4758, 1702, 
       6248, 3198, 4723}], 
      Line3DBox[{4724, 1707, 6252, 3202, 4727, 1912, 6257, 3207, 4732, 1677, 
       6253, 3203, 4728, 1913, 6249, 3199, 4724}], 
      Line3DBox[{4737, 1717, 6287, 3237, 4762, 1745, 6288, 3238, 4763, 1713, 
       6262, 3212, 4737}], 
      Line3DBox[{4740, 1720, 6290, 3240, 4765, 1747, 6291, 3241, 4766, 1716, 
       6265, 3215, 4740}], 
      Line3DBox[{4743, 1729, 6293, 3243, 4768, 1754, 6294, 3244, 4769, 1725, 
       6268, 3218, 4743}], 
      Line3DBox[{4749, 1734, 6302, 3252, 4777, 1917, 6298, 3248, 4773, 1756, 
       6301, 3251, 4776, 1916, 6304, 3254, 4779, 1735, 6274, 3224, 4749}], 
      Line3DBox[{4751, 1737, 6279, 3229, 4754, 1914, 6284, 3234, 4759, 1704, 
       6281, 3231, 4756, 1915, 6276, 3226, 4751}], 
      Line3DBox[{4760, 1741, 6305, 3255, 4780, 1759, 6306, 3256, 4781, 1739, 
       6285, 3235, 4760}], 
      Line3DBox[{4761, 1743, 6307, 3257, 4782, 1761, 6308, 3258, 4783, 1740, 
       6286, 3236, 4761}], 
      Line3DBox[{4764, 1746, 6310, 3260, 4785, 1766, 6311, 3261, 4786, 1744, 
       6289, 3239, 4764}], 
      Line3DBox[{4767, 1753, 6315, 3265, 4790, 1773, 6316, 3266, 4791, 1750, 
       6292, 3242, 4767}], 
      Line3DBox[{4784, 1765, 6324, 3274, 4799, 1783, 6325, 3275, 4800, 1762, 
       6309, 3259, 4784}], 
      Line3DBox[{4788, 1771, 6333, 3283, 4808, 1921, 6329, 3279, 4804, 1788, 
       6332, 3282, 4807, 1920, 6335, 3285, 4810, 1772, 6313, 3263, 4788}], 
      Line3DBox[{4792, 1774, 6320, 3270, 4795, 1918, 6323, 3273, 4798, 1755, 
       6322, 3272, 4797, 1919, 6317, 3267, 4792}], 
      Line3DBox[{4811, 1792, 6352, 3302, 4827, 1811, 6353, 3303, 4828, 1790, 
       6336, 3286, 4811}], 
      Line3DBox[{4812, 1795, 6355, 3305, 4830, 1814, 6356, 3306, 4831, 1791, 
       6337, 3287, 4812}], 
      Line3DBox[{4813, 1798, 6358, 3308, 4833, 1816, 6359, 3309, 4834, 1794, 
       6338, 3288, 4813}], 
      Line3DBox[{4814, 1801, 6365, 3315, 4840, 1820, 6366, 3316, 4841, 1797, 
       6339, 3289, 4814}], 
      Line3DBox[{4816, 1803, 6370, 3320, 4845, 1925, 6367, 3317, 4842, 1821, 
       6369, 3319, 4844, 1924, 6374, 3324, 4849, 1804, 6341, 3291, 4816}], 
      Line3DBox[{4820, 1805, 6371, 3321, 4846, 1822, 6372, 3322, 4847, 1800, 
       6345, 3295, 4820}], 
      Line3DBox[{4821, 1807, 6349, 3299, 4824, 1922, 6351, 3301, 4826, 1786, 
       6350, 3300, 4825, 1923, 6346, 3296, 4821}], 
      Line3DBox[{4829, 1813, 6375, 3325, 4850, 1828, 6376, 3326, 4851, 1809, 
       6354, 3304, 4829}], 
      Line3DBox[{4832, 1815, 6382, 3332, 4857, 1832, 6383, 3333, 4858, 1812, 
       6357, 3307, 4832}], 
      Line3DBox[{4836, 1817, 6388, 3338, 4863, 1927, 6384, 3334, 4859, 1833, 
       6387, 3337, 4862, 1926, 6389, 3339, 4864, 1818, 6361, 3311, 4836}], 
      Line3DBox[{4853, 1829, 6399, 3349, 4874, 1929, 6395, 3345, 4870, 1840, 
       6398, 3348, 4873, 1928, 6400, 3350, 4875, 1830, 6378, 3328, 4853}], 
      Line3DBox[{4865, 1837, 6405, 3355, 4880, 1845, 6406, 3356, 4881, 1835, 
       6390, 3340, 4865}], 
      Line3DBox[{4869, 1839, 6413, 3363, 4888, 1847, 6414, 3364, 4889, 1836, 
       6394, 3344, 4869}], 
      Line3DBox[{4877, 1842, 6425, 3375, 4900, 1933, 6421, 3371, 4896, 1851, 
       6424, 3374, 4899, 1932, 6427, 3377, 4902, 1843, 6402, 3352, 4877}], 
      Line3DBox[{4882, 1846, 6410, 3360, 4885, 1930, 6415, 3365, 4890, 1838, 
       6412, 3362, 4887, 1931, 6407, 3357, 4882}]}}], {}},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"RelieveDPZFighting" -> True, "DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.929347372025693*^9, 3.929348997293732*^9, {3.929359998682734*^9, 
   3.9293600098666697`*^9}, 3.929360972580783*^9, 3.929518048188223*^9, 
   3.929541053667484*^9, 3.929876211395102*^9},
 CellLabel->"Out[17]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJylfQm4ZkVx9nGYGUZ22fe5gAzLsA3IIsLwsTjDvokIIswAygwIyq4gyyeI
qKjEBRU3RhQQd+MWjToYDTEa4m5ijMZoYqKP/iYxiX/+aOb3VHfX+1aft79v
hpznufee26dP1VvV1X16qa4+5cJrVz7viguvvfTiC2eWXn3hlSsvvfiamSUv
vPr3Ses9oetmfb3r1ttkppv9+/s1Xad/fbPr1iHhx3a73viSSy4ZrVy50v77
BT3/kd3O6Z+v+f0P/w35fmC3s3sanGdWnzqr/48zf99SjcZ6q1esWGF3hsMe
9EkJUleun9Hb30usmE3/Mzcl9y8XFP3Pz+nN7xJfl6K/5sV37YXq3W9rrhsm
3Pxm4sCIvwklO9tNPOes9HQNy/tP9PbXWqg3jSTs7p/pxcc05M0983p+x/y+
ootyK888WwD+RyLwZfDt9VJKeJtIwO5+Sq89OoTbY9gucetvzTAsk9D6PxCp
L7ZUtkOLmGVmIb6glbezIDDHCTCG1SlnKPRdxNtzhTZ/THQ+25JlN/EioPyE
SHxGy7JAEJjrBBjDp1oYdrUHo86LZEisEvfviewngKsYSf/z5PxazjbqGuTX
d1RM9GNDYXsAu0eiq11bFdF5Iu3viPxHWqrYwx6scS5+rZd+B2Od51R+RLQ/
NITe/+xlmVcnXExZVYMnOmVG/f6Uv67TC9P79ns8jfIGQjM/IB4Pk2ZCq74w
i9WVSpFeQPFt6Hc/JHoPaW3sm2CMSrb0bqC3kUD6t0T5PYQ0lOF+9ntOoT0i
tFRkG/kdi38/4LIxL0okmZwrAiQ39jvGuWqogb40DrTkuaszqXKtzixAdROh
h78h+u9o6eEge9ATzB+nUYeyqxnY3feJ7NuGsPufgxOpMZPK5IMouQaGVgOM
GP9bEqPaqg8FZliISHtii1GV9j1i+SZSWTDyiunI/kuZO687gSw+38zgjVp5
hycCbEalYQlNgqqkm4q0vyKWryOZghk8Lb0YSgcyqVoGmf6aGNytZTrSMvfU
S0PM0m0oyG/m5Bn/a1LO8KU9Kqd1ZGyzRZoS4kki7TvE71UtfWWmo46MLItW
Kudkpkb0u8TqFQl4rbmjI6MRMRqxdBtn5tyMby6Yf5tY3pFY1pXquPway0Gy
jaeyNNlYjbd7alWVjhNkSy+po0ux2sKJskwv1WpcYpl7Pvnb0XllCUS3FCrj
QdQtJEkwiKXpxZ6ul8n6QhI0b+hlf4sY3KTxn5BIjTqyt/UFS9TKrYV03yBG
N+a3uSqdFLn0f72X1JE1DLiE1o65vKilr5MF2fXB3gVCO4BBBTO4Tuvr1Cw9
k58n0kB+2wyIS/5rxOjqxKiuLKcbgZ5m+cZ0VERPEuqBHF8n8ldCDh5JnZEI
jFklT4Qc40mMtnVGLMcLhgrr3zoT6J1R+cJ0dClG2wnVPUYsn+9AKiN4RlTZ
yJla/dyixcpI/SUxuHQoU/9zNvCPJsm0hcCvZPoLYpngxOpzTkoLBpb59fK4
XlUjA8FYc8/11EpzxsrMbiPBVDHY3kmxGBfZ7UBzzxao81d6xGlbCUY7iLSv
EMtlLZnOEwxIunHFNLRsOzjRrxKr8yEdd9TPByO3jY1iml2qCd1RpP05sTwP
LLl6XSBY5pFAl5sExcgkYuWd01LecihqVPDPcgaz8bQLT6uaoCTeyVmynGcP
5ex/zJ7MLjdx5miH5meWbBp/RkTPSs9DpXquUyydWxYRjel8v/syUTyjpa/n
JmI9IddKHhGMOQ3gZ/yOIZ+m9XAJyDve0t9g/BX5qrV7lBid3JJkRZtVkA4t
zC5+xwxOhCRcWS4TqEmScSBf4c+TYKG8v0Qsjx8qr38/fS966qV/3tHVZGQS
/SmRf3pLZZdHBmalar5wVyfAqI8dou5/XpAJdKRzhX97wUhN8P0JsRwllnXn
40qw9KLPLMcMY0dBHrJ9kRgtJpWFnrpiVcYXHZmGYpWlC63KF4jpEUm6WqHX
5NeYfOl+sHQ7tViaHKzGp5J0wSCutQc9xS0EU8XgyU6KJTlUS3J9TX7U0Wdm
Z6Ge3QXL1cSozLBwS/lioRsSZzyVn4nzCHE5sKUvYuWlXzodHV2K1QInygId
oDV3Y4uR1dmZFvmqen2eGKVJxUFVuhmKGhX0SiJ8Zvb0Oya/kFQWKpAxMBvI
/ZdeAC+nGX9tr8yUS/6zxGAvrahbnXz5hrMkFXm7+xwRRZlUBT3O2uyGnb6Q
hgZ4b79j1E/WqG8DKS9ewj8ekl8o1PMZYrRreh4qxsvaXEpaR+8G04E4f0xc
YAWVvu4A+FEhu3XK3HlDGBgogT5NrHbSmrvTiPZ8ysC1o0tJAstkfaWv0aA6
vNLJ59HmmMnPQppLiXmVsqjDzPdx5izbtpCNB72vygS64aDX2fVXmVxjGJl5
UOc+Iu1TBGNrwOBuyF1g6Sy2FdBUWw15/4gYYcqqMptXC1a5nxNMSbHKqySh
EfwkMX3SULr+525BnqRzc1JLh2VhhkuYWeb+YaiErwO/caGznUhT/GyxxvTG
XLA4U2kzzXL3VMtYtKNrgdDX/oLpx4lVGsUPdPgG6MutIY+zf/9rzxYjw/wJ
Io/1rEqSN4KBy6Bk2kOwOsCJsiRzIAn38t8UGY2I0Zilw0fvQKGyPyRG6w1V
1kN7S0bakdmRRJ5WMbK7jxF5pa17QXtc0R6xEPgGHiSE+Gj687sh/v7HVry4
3XVO9kBIV3Gzu6yo/84kuJ68QwCe12Y1ZlZl/XmYb254N7/TKxJfhaf4XdbA
//WESs8E0a1wvTacwBoDrvzhC43IU1JaKI8Ppz//ab8H5XFfxGK8c68z1JC9
W9xMwI+kTL9uSfwuUHTpdnJJ9hG0cwc91Mi06N/9KyThKvju/EY37KoHvkpv
BzvwrK1fDbXVv5CWw3sWeSqm5+Tmkpv1oH1Qzuh/0dLRA4LifMjk+BWXQ0Ta
B9Kfnw8l6X8eylroyAbnI80R7NfiZiJ8MCUkn6hBJ+jhyMMkmIFE40k8DnUe
WY5/9IRqYPC+/DbriCRx6dQ3qixFsy0kB5AueQUN9PYBgX8mQevKKCxa7WEO
PFP+EUkSLMC0ada1K2Tya39B+6lCpqT17ocaf7LvaGW7OP5FLR4GN2k6+4fE
VvejWZHdcDgQCkYp6HBnkKF/r6WgisuIuIxYoEVO4AihoGT6eV1/oKCPC9SZ
R6iGFQ+7e296lB0g6+rwSVAZV5SD3vDBPlJo68GU6Zuko1AdjIsZ0ZMFv4r2
LDQF3de1PlL/OxpMGSR0dIEy5sAy1scIayjPTwvp88RQ5x+zUDkXZ85cnu9J
f76q8f9x5NH/9WEA4z+oxc2Ap8Y5r1RE0/88iI0qBQWlKXGOcgZZiEdbqspc
QmGSGM75YKGgxYJz+lrm2eSB0h4xGD2zMh3EkqivDSTJlLNXaF0J/kRopowo
WA7FYyTSUs8i0xqMhL8I9PWALKQd2uJmEiV/te5z4MF9gi9FevbaFpDSL/Tc
DhPcjnZuWaLPeEJlCY/mtzvS1h5I8yvLFBqPYwTn1APs/mgoXf/z5UylI7vb
wyV5aouHAV+Vsud2L1QaW5MzAyvzdSzOYYLssQL6O9Ofj7VU9ZXMuatHYFWa
EuNYJ5oV9FGtoLQaLAZIlUHjM4pllYz/Qy38j4G262cvwQ9f0CVCS29Pfz4A
/Nxt/np+o6uHXFWhVzzsLg1kcg9sUDG+IbRA6N1Yn+b0shNQKIfkIpk+2kpH
6UPYM8lDsS4viDDF0PRlig8MUfc/6eMtOkjV5JlyTnqa4LbUsWS+eZwSqsN3
wcCZlplYZjDXRTxSsDo+Q+LCT2P65B+r1Eec3QTKfF9HBXdEi58RfWvKlOx5
oNLvCXqbQzpPozll14KS8wTnm6V7W0u65AIr3Zj8//7aReRTXY0TRNqb0597
ITtXL+ssm3mST6Vf6wksM0hz4zqqhcWEfgsDGVTDHziC/SClo1CUTxRpaYIr
TagpTf8QqAdjR5auyc+IZl2+fihJ//OjqJmR87AakT09Q+NxklPO+LN/bd0r
+bGgXMaLjH4keBRPPJYozTsmd1vVSf9JptORvWVt9aK4BpVMcGS4J2W6S2sr
DZh7UmXQxdwU5VNEWpqiTd61qtx/WnMZMX70BU71u6yblwM115d/FlTS+LRP
Kn6sHVkweJzmdxn1y4aa6QX7GXh4aR8Q0+xCF+D09DSUcZqQTw6zSjM/F1zy
oLHLnrugbXfJ7Ltbh6j7n19C9lHBoFrR4kHQ0QVJ4NCT8WeH2bpG2AQYOSL1
5Hd19E/PsnGrfIbQUapuyVdW1QNwKTPJLMlxLS5G6g9Sphdrbf1rfrcjOzoQ
2vI0JcmZQpLXpj/XkSShtP8N/FyGLFMosSY/I5r1dY2W6d/bPIKcSwV+8MiS
XJWVwd2Q3wjAJMR4EoNniLS0LJdcZpXSjB83Hs7BHmSKnNbkbOTT9obkntQN
1Pdfzi1Pynb6g5696EIzmNrY4ihbV5a8DjHqhoPaIBEtuPp1vOB2lkuUNbgC
EvHw9rfgW8+HBb6bIc3xnSD4PtP5ZnmfB77cgP5O8C0D9o5sR/EoTsWs8Vem
Pxc5+8pO1mQ6TPtgYHCZTmzxM6JpWTx7eg6sw3gkj8+eXl5q7vTkH3oscCjN
QmRP1VCvjPZspw3Xzj2iIu06KdKu2oq0zSW5yTZVNVvohtbAXIx9INp4yP5c
v8tMz52gublREmOhltPKsiengWX2mw7GkToKVI5KYtr64OzzxHuXOzZgYHd3
JrJnQSbuhhjRDYDfVZabQ1eX0RMy5V5hKDswzzKdCeZcvYxQ2unprdVwBbL/
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
omQP0/1M1AsefDi/8YT/D3AiLUM=\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"d069921c-4e65-4873-99bf-a8ea9f9ff505"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{
   RowBox[{"DiracDelta", "[", "x", "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.929785319110814*^9, 3.929785350446081*^9}, 
   3.9297854541593933`*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"c5d9e641-3c66-49b0-bb16-8c607d8294ab"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.929785334692465*^9, 3.929785351041217*^9}, 
   3.929785454719821*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"a853e95b-bea5-4220-9a2a-2e7e378c7dcf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
  RowBox[{
   RowBox[{"DiracDelta", "[", "x", "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.929785366288208*^9, 3.929785406889255*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"7f1d4a98-d3bc-46c7-ade3-69789f652d94"],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"HeavisideTheta", "[", "0", "]"}]}]], "Output",
 CellChangeTimes->{3.9297854073973293`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"99d1d7b8-1c8b-4af9-aeaa-fb04f40d178e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"\[Lambda]", " "}], "7"], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[ImaginaryI]", " ", "3"}], " ", ")"}], "\[Lambda]"}]], 
   RowBox[{"\[DifferentialD]", "\[Lambda]"}]}]}]], "Input",
 CellChangeTimes->{{3.929725851223611*^9, 3.929725932053024*^9}, {
   3.9297259705683603`*^9, 3.929725984639587*^9}, {3.92972635994317*^9, 
   3.929726360937585*^9}, {3.9297264530551147`*^9, 3.929726467332481*^9}, {
   3.929726609025474*^9, 3.92972663385976*^9}, 3.92972672512926*^9},
 CellLabel->
  "In[120]:=",ExpressionUUID->"c921ce38-512e-4320-b95c-8c80ff03c95c"],

Cell[BoxData[
 TemplateBox[{
  "Integrate", "idiv", 
   "\"Integral of \\!\\(\\*RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{\\\"3\\\", \\\" \\\", \\\"\[ImaginaryI]\\\", \\\" \\\", \\\"\[Lambda]\
\\\"}]], \\\" \\\", SuperscriptBox[\\\"\[Lambda]\\\", \\\"7\\\"]}]\\) does \
not converge on \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"\
\[Infinity]\\\"}], \\\",\\\", \\\"\[Infinity]\\\"}], \\\"}\\\"}]\\).\"", 2, 
   120, 22, 27151838310960192920, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9297264737669153`*^9, {3.92972661016461*^9, 3.9297266364422483`*^9}, 
   3.929726725960643*^9},
 CellLabel->
  "During evaluation of \
In[120]:=",ExpressionUUID->"34055512-f61d-480b-bc4b-8cd841e1c458"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Lambda]"}]], " ", 
    SuperscriptBox["\[Lambda]", "7"]}], 
   RowBox[{"\[DifferentialD]", "\[Lambda]"}]}]}]], "Output",
 CellChangeTimes->{3.929726725963179*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"c712a3b0-cd63-48ee-be6c-f58f34b5903b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
  RowBox[{
   SuperscriptBox["x", "b"], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"a", " ", "x"}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.9297262553957*^9, 3.9297262576136436`*^9}, {
  3.929726322630178*^9, 3.92972633709767*^9}, {3.929726656199354*^9, 
  3.9297266819652843`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"a0d30c72-88f9-4d63-930f-2ba4a33e14bb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"b", "=", "7"}], "\[IndentingNewLine]", 
 RowBox[{"a", "=", 
  RowBox[{"\[ImaginaryI]", " ", "3"}]}]}], "Input",
 CellChangeTimes->{{3.9297267699278603`*^9, 3.929726783320775*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"11db0858-3284-4999-8737-b3a544945cd0"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{{3.9297262469138527`*^9, 3.929726261328349*^9}, {
   3.929726325164312*^9, 3.9297263410638723`*^9}, {3.929726666666194*^9, 
   3.9297266858947153`*^9}, 3.929726802646261*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"48e52b8e-76ab-41e5-a55d-32b641e9bf13"],

Cell[BoxData[
 RowBox[{"3", " ", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{{3.9297262469138527`*^9, 3.929726261328349*^9}, {
   3.929726325164312*^9, 3.9297263410638723`*^9}, {3.929726666666194*^9, 
   3.9297266858947153`*^9}, 3.929726802648129*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"a4413d87-aaa9-4247-acd3-d2c1fa0a6244"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "3"}], ")"}], 
   RowBox[{
    RowBox[{"-", "1"}], "-", "7"}]], " ", 
  RowBox[{"Gamma", "[", 
   RowBox[{"1", "+", "7"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.929726881830352*^9, 3.9297268965401278`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"d092a796-c838-4491-a1ab-22ba4fb02844"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "7"}], "\[Infinity]"], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"\[Lambda]", " "}], "b"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", "k", " ", ")"}], "\[Lambda]"}]], 
      RowBox[{"\[DifferentialD]", "\[Lambda]"}]}]}], ")"}], ",", 
   RowBox[{"b", ">=", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92972599504261*^9, 3.929725997511591*^9}, 
   3.92972603099308*^9, {3.929761577785235*^9, 3.9297615920272503`*^9}, {
   3.929782151652626*^9, 3.9297821536225243`*^9}, {3.929782243909129*^9, 
   3.929782256951186*^9}, 3.9297824037991457`*^9, {3.929782826326625*^9, 
   3.9297828295566998`*^9}, 3.9297829528540154`*^9, 3.929784088354558*^9, 
   3.92978437476121*^9, 3.9297846253711567`*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"234cb5cb-d197-4e62-b1c7-76a61db3da58"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    RowBox[{
      RowBox[{
        RowBox[{"-", "b"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
           RowBox[{"-", "k"}], ")"}], 
         RowBox[{"-", "b"}]], " ", 
        RowBox[{"Gamma", "[", "b", "]"}]}], "+", 
      RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "b"], " ", 
        SuperscriptBox["k", 
         RowBox[{"-", "b"}]], " ", 
        RowBox[{"(", 
          RowBox[{
            RowBox[{"Gamma", "[", 
              RowBox[{"1", "+", "b"}], "]"}], "-", 
            RowBox[{"Gamma", "[", 
              RowBox[{
                RowBox[{"1", "+", "b"}], ",", 
                RowBox[{"7", " ", "k"}]}], "]"}]}], ")"}]}]}], "k"], 
   RowBox[{
     RowBox[{"Re", "[", "k", "]"}], "<", "0"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{{3.929782933117854*^9, 3.929782954892888*^9}, 
   3.929784114964374*^9, 3.929784404052742*^9, 3.92978463547403*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"766908e2-1117-4fd7-80d2-4d9b0857bfee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"\[Lambda]", " "}], "b"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", " ", "k"}], " ", ")"}], "\[Lambda]"}]], 
      RowBox[{"\[DifferentialD]", "\[Lambda]"}]}]}], ")"}], ",", 
   RowBox[{"b", ">=", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{3.929784169929777*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"ef0e8ab5-5fb9-459f-b69b-d06e89f7ffa5"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
        RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "k"}], ")"}], 
      RowBox[{
        RowBox[{"-", "1"}], "-", "b"}]], " ", 
     RowBox[{"Gamma", "[", 
       RowBox[{"1", "+", "b"}], "]"}]}], 
   RowBox[{
     RowBox[{"Im", "[", "k", "]"}], ">", "0"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.929784182119897*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"5848b001-cef3-4b59-80f3-f782a5e2c2fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "b"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "k"}], ")"}], 
       RowBox[{"-", "b"}]], " ", 
      RowBox[{"Gamma", "[", "b", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "b"], " ", 
      SuperscriptBox["k", 
       RowBox[{"-", "b"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{"1", "+", "b"}], "]"}], "-", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"1", "+", "b"}], ",", 
          RowBox[{
           RowBox[{"-", "p"}], " ", "k"}]}], "]"}]}], ")"}]}]}], "k"], ",", 
   RowBox[{"p", "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9297829030759287`*^9, 3.929782931329327*^9}, {
  3.929784231060462*^9, 3.929784265580771*^9}, {3.929784444706238*^9, 
  3.92978445180401*^9}, {3.929784657787025*^9, 3.929784661868024*^9}, {
  3.929784723326428*^9, 3.9297847383585043`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"0af05adf-366c-4149-b155-2cc67277b1ca"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
        RowBox[{"-", "k"}], ")"}], 
      RowBox[{
        RowBox[{"-", "1"}], "-", "b"}]], " ", 
     RowBox[{"Gamma", "[", 
       RowBox[{"1", "+", "b"}], "]"}]}], 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
        TagBox[
         TooltipBox["\"condition\"", 
          TagBox[
           RowBox[{
             RowBox[{
               RowBox[{"(", 
                 RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "b"], "|", 
                   SuperscriptBox["k", 
                    RowBox[{"-", "b"}]]}], ")"}], "\[Element]", 
               TemplateBox[{}, "Reals"]}], "&&", 
             RowBox[{"b", ">", "0"}], "&&", 
             RowBox[{"k", "<", "0"}], "&&", 
             RowBox[{
               FractionBox[
                RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"-", "k"}], ")"}], 
                   RowBox[{"-", "b"}]], " ", 
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"b", " ", 
                    RowBox[{"Gamma", "[", "b", "]"}]}], "-", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{"1", "+", "b"}], "]"}]}], ")"}]}], "k"], 
               "\[Equal]", "0"}]}], Short[#, 7]& ]], Annotation[#, 
          Short[
           And[
            Element[
             
             Alternatives[(-1)^$CellContext`b, \
$CellContext`k^(-$CellContext`b)], Reals], $CellContext`b > 0, $CellContext`k < 
            0, (-$CellContext`k)^(-$CellContext`b) $CellContext`k^(-1) \
($CellContext`b Gamma[$CellContext`b] - Gamma[1 + $CellContext`b]) == 0], 7], 
          "Tooltip"]& ], "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["And", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["1288", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]}, "IconizedObject"]], 
    And[
     Element[
      Alternatives[(-1)^$CellContext`b, $CellContext`k^(-$CellContext`b)], 
      Reals], $CellContext`b > 0, $CellContext`k < 
     0, (-$CellContext`k)^(-$CellContext`b) $CellContext`k^(-1) \
($CellContext`b Gamma[$CellContext`b] - Gamma[1 + $CellContext`b]) == 0], 
    SelectWithContents -> True, Selectable -> False]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.929784273665159*^9, 3.929784561726351*^9, 
  3.92978467860636*^9, 3.929784756882234*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"6e8caaee-87eb-435f-b65e-882840935170"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "b"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "k"}], ")"}], 
       RowBox[{"-", "b"}]], " ", 
      RowBox[{"Gamma", "[", "b", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "b"], " ", 
      SuperscriptBox["k", 
       RowBox[{"-", "b"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{"1", "+", "b"}], "]"}], "-", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"1", "+", "b"}], ",", 
          RowBox[{
           RowBox[{"-", "p"}], " ", "k"}]}], "]"}]}], ")"}]}]}], "k"], ",", 
   RowBox[{"p", "->", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.9297847750357857`*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"e18f12cd-4c52-439b-bf1d-49500537be32"],

Cell[BoxData[
 TemplateBox[{"0", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
        TagBox[
         TooltipBox["\"condition\"", 
          TagBox[
           RowBox[{
             RowBox[{
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"b", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "k"}], ")"}], 
                    RowBox[{"-", "b"}]], " ", 
                    RowBox[{"Gamma", "[", "b", "]"}]}], "|", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "b"], "|", 
                   SuperscriptBox["k", 
                    RowBox[{"-", "b"}]], "|", 
                   RowBox[{"Gamma", "[", 
                    RowBox[{"1", "+", "b"}], "]"}], "|", "b"}], ")"}], 
               "\[Element]", 
               TemplateBox[{}, "Reals"]}], "&&", 
             RowBox[{"k", "<", "0"}], "&&", 
             RowBox[{
               RowBox[{"b", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                    RowBox[{"-", "k"}], ")"}], 
                  RowBox[{"-", "b"}]], " ", 
                 RowBox[{"Gamma", "[", "b", "]"}]}], "\[Equal]", 
               RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "b"], " ", 
                 SuperscriptBox["k", 
                  RowBox[{"-", "b"}]], " ", 
                 RowBox[{"Gamma", "[", 
                   RowBox[{"1", "+", "b"}], "]"}]}]}]}], Short[#, 7]& ]], 
         Annotation[#, 
          Short[
           And[
            Element[
             
             Alternatives[$CellContext`b (-$CellContext`k)^(-$CellContext`b) 
              Gamma[$CellContext`b], (-1)^$CellContext`b, \
$CellContext`k^(-$CellContext`b), 
              Gamma[1 + $CellContext`b], $CellContext`b], 
             Reals], $CellContext`k < 
            0, $CellContext`b (-$CellContext`k)^(-$CellContext`b) 
             Gamma[$CellContext`b] == (-1)^$CellContext`b \
$CellContext`k^(-$CellContext`b) Gamma[1 + $CellContext`b]], 7], 
          "Tooltip"]& ], "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["And", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["1656", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]}, "IconizedObject"]], 
    And[
     Element[
      Alternatives[$CellContext`b (-$CellContext`k)^(-$CellContext`b) 
       Gamma[$CellContext`b], (-1)^$CellContext`b, \
$CellContext`k^(-$CellContext`b), 
       Gamma[1 + $CellContext`b], $CellContext`b], Reals], $CellContext`k < 
     0, $CellContext`b (-$CellContext`k)^(-$CellContext`b) 
      Gamma[$CellContext`b] == (-1)^$CellContext`b \
$CellContext`k^(-$CellContext`b) Gamma[1 + $CellContext`b]], 
    SelectWithContents -> True, Selectable -> False]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.929784784317235*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"c2cdcfa6-db03-4c64-bfc9-c0a3f2da994c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "K"}], ")"}], 
         RowBox[{"b", "+", "2"}]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "+", "delta", "-", "K"}], ")"}], 
         RowBox[{"B", "+", "n", "-", "b", "-", "1"}]]}]], 
      RowBox[{"\[DifferentialD]", "x"}]}]}], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{" ", 
      RowBox[{"K", " ", "L"}]}]]], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"L", ">", "0"}], "&&", 
     RowBox[{"delta", ">=", "0"}], "&&", 
     RowBox[{"b", ">=", "0"}], "&&", 
     RowBox[{"n", ">", "0"}], "&&", 
     RowBox[{"B", ">", "0"}], "&&", 
     RowBox[{"B", ">", "b"}], "&&", 
     RowBox[{
      RowBox[{"2", "+", "b"}], ">", 
      RowBox[{"B", "+", "n"}]}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.929762747294623*^9, 3.929762772919057*^9}, {
  3.929763043364039*^9, 3.929763053186252*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"88be444e-abdf-495c-bae5-2b7417b36e13"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
        RowBox[{"-", "K"}], " ", "L"}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
        RowBox[{"-", "K"}], ")"}], 
      RowBox[{"-", "b"}]], " ", 
     RowBox[{"(", 
       RowBox[{
         FractionBox[
          RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{"-", 
                 FractionBox["1", "K"]}], ")"}], 
             RowBox[{
               RowBox[{"-", "b"}], "+", "B", "+", "n"}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
               FractionBox["delta", "K"], ")"}], 
             RowBox[{
               RowBox[{"-", "B"}], "-", "n"}]], " ", "\[Pi]", " ", 
            RowBox[{"Csc", "[", 
              RowBox[{
                RowBox[{"(", 
                  RowBox[{"b", "-", "B", "-", "n"}], ")"}], " ", "\[Pi]"}], 
              "]"}], " ", 
            RowBox[{"Gamma", "[", 
              RowBox[{"B", "+", "n"}], "]"}]}], 
          RowBox[{
            RowBox[{"Gamma", "[", 
              RowBox[{"2", "+", "b"}], "]"}], " ", 
            RowBox[{"Gamma", "[", 
              RowBox[{
                RowBox[{"-", "1"}], "-", "b", "+", "B", "+", "n"}], "]"}]}]], 
         "+", 
         FractionBox[
          RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{"delta", "-", "K"}], ")"}], 
             RowBox[{"2", "+", "b", "-", "B", "-", "n"}]], " ", 
            RowBox[{"Hypergeometric2F1", "[", 
              RowBox[{"1", ",", 
                RowBox[{"2", "+", "b"}], ",", 
                RowBox[{"3", "+", "b", "-", "B", "-", "n"}], ",", 
                RowBox[{"1", "-", 
                  FractionBox["delta", "K"]}]}], "]"}]}], 
          RowBox[{
            SuperscriptBox["K", "2"], " ", 
            RowBox[{"(", 
              RowBox[{
                RowBox[{"-", "2"}], "-", "b", "+", "B", "+", "n"}], 
              ")"}]}]]}], ")"}]}], 
   RowBox[{
     RowBox[{"Re", "[", "K", "]"}], "<", "0"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.929762792028323*^9, 3.929763069052059*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"2c017399-04a6-474b-b8ba-76181be777c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k", " ", "L"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k"}], ")"}], 
       RowBox[{"-", "b"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{"b", "-", "B", "-", "n"}], ")"}], " ", "\[Pi]"}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", "delta"}], "k"]}], ")"}], 
           RowBox[{
            RowBox[{"-", "B"}], "-", "n"}]], " ", 
          SuperscriptBox["k", 
           RowBox[{"b", "-", "B", "-", "n"}]], " ", "\[Pi]", " ", 
          RowBox[{"Csc", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b", "-", "B", "-", "n"}], ")"}], " ", "\[Pi]"}], "]"}], 
          " ", 
          RowBox[{"Gamma", "[", 
           RowBox[{"B", "+", "n"}], "]"}]}], 
         RowBox[{
          RowBox[{"Gamma", "[", 
           RowBox[{"2", "+", "b"}], "]"}], " ", 
          RowBox[{"Gamma", "[", 
           RowBox[{
            RowBox[{"-", "1"}], "-", "b", "+", "B", "+", "n"}], "]"}]}]], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"delta", "-", 
             RowBox[{"\[ImaginaryI]", " ", "k"}]}], ")"}], 
           RowBox[{"2", "+", "b", "-", "B", "-", "n"}]], " ", 
          RowBox[{"Gamma", "[", 
           RowBox[{"2", "+", "b", "-", "B", "-", "n"}], "]"}], " ", 
          RowBox[{"Hypergeometric2F1Regularized", "[", 
           RowBox[{"1", ",", 
            RowBox[{"2", "+", "b"}], ",", 
            RowBox[{"3", "+", "b", "-", "B", "-", "n"}], ",", 
            RowBox[{"1", "+", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", "delta"}], "k"]}]}], "]"}]}], 
         SuperscriptBox["k", "2"]]}], ")"}], 
      RowBox[{"\[DifferentialD]", "k"}]}]}], 
    RowBox[{"2", " ", "\[Pi]"}]], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"L", ">", "0"}], "&&", 
     RowBox[{"delta", ">=", "0"}], "&&", 
     RowBox[{"b", ">=", "0"}], "&&", 
     RowBox[{"n", ">", "0"}], "&&", 
     RowBox[{"B", ">", "0"}], "&&", 
     RowBox[{"B", ">", "b"}], "&&", 
     RowBox[{
      RowBox[{"2", "+", "b"}], ">", 
      RowBox[{"B", "+", "n"}]}], "&&", 
     RowBox[{"x", ">", "0"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.929702632525919*^9, 3.929702654949367*^9}, 
   3.929702795466844*^9, 3.929709149067268*^9, {3.929709180610317*^9, 
   3.9297092181950073`*^9}, {3.929709378570396*^9, 3.929709394059916*^9}, {
   3.9297208661172323`*^9, 3.9297209021403*^9}, {3.9297209520166063`*^9, 
   3.929720995980185*^9}, {3.929721563122492*^9, 3.929721601343891*^9}, {
   3.929723387493725*^9, 3.929723394471672*^9}, {3.9297237988933687`*^9, 
   3.929723814217527*^9}, 3.929725385053986*^9, 3.929762084570919*^9, {
   3.929762135675054*^9, 3.9297621780459137`*^9}, {3.9297622251489143`*^9, 
   3.9297622269100227`*^9}, 3.929762834677925*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"d151237c-776d-46b6-8603-d304e68ece60"],

Cell[BoxData[
 FractionBox[
  RowBox[{"TerminatedEvaluation", "[", "\<\"RecursionLimit\"\>", "]"}], 
  RowBox[{"2", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.929721002084746*^9, 3.929721067610664*^9, 
  3.929721685864788*^9, 3.929723468737488*^9, 3.929723894848495*^9, 
  3.92972546462249*^9, 3.929762690718301*^9, 3.929763038691847*^9, 
  3.9297643659524918`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"a6fe224d-9341-4b2d-be41-c674592b2393"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "k"}], ")"}], 
         RowBox[{"B", "+", "n", "+", "1"}]], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{" ", 
          RowBox[{"\[ImaginaryI]", " ", "k", " ", "L"}]}]]}]], 
      RowBox[{"\[DifferentialD]", "k"}]}]}], 
    RowBox[{"2", " ", "\[Pi]"}]], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"L", ">", "0"}], "&&", 
     RowBox[{"b", ">=", "0"}], "&&", 
     RowBox[{"n", ">", "0"}], "&&", 
     RowBox[{"B", ">", "0"}], "&&", 
     RowBox[{"B", ">", "b"}], "&&", 
     RowBox[{
      RowBox[{"2", "+", "b"}], ">", 
      RowBox[{"B", "+", "n"}]}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.929725396907192*^9, 3.929725402439886*^9}, 
   3.929725482900394*^9},
 CellLabel->
  "In[103]:=",ExpressionUUID->"7e9f9abd-0c40-492c-82ad-26895fc1a1b7"],

Cell[BoxData["Undefined"], "Output",
 CellChangeTimes->{3.929725529977047*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"f976d69c-6702-4bb1-affc-5ad230718b25"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"core", "[", 
   RowBox[{"delta_", ",", "n_", ",", "L_", ",", "B_", ",", "b_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{
     RowBox[{"-", "2"}], "-", "B", "-", "n"}]], " ", 
   SuperscriptBox["L", 
    RowBox[{"B", "+", "n"}]], " ", "\[Pi]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"4", " ", 
      RowBox[{"HypergeometricPFQRegularized", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"2", "+", "b"}], "2"], ",", 
          FractionBox[
           RowBox[{"3", "+", "b"}], "2"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox["1", "2"], ",", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "B", "+", "n"}], ")"}]}], ",", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", "B", "+", "n"}], ")"}]}]}], "}"}], ",", 
        FractionBox[
         RowBox[{
          SuperscriptBox["delta", "2"], " ", 
          SuperscriptBox["L", "2"]}], "4"]}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", "b"}], ")"}], " ", "delta", " ", "L", " ", 
      RowBox[{"HypergeometricPFQRegularized", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"3", "+", "b"}], "2"], ",", 
          FractionBox[
           RowBox[{"4", "+", "b"}], "2"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          FractionBox["3", "2"], ",", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", "B", "+", "n"}], ")"}]}], ",", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"3", "+", "B", "+", "n"}], ")"}]}]}], "}"}], ",", 
        FractionBox[
         RowBox[{
          SuperscriptBox["delta", "2"], " ", 
          SuperscriptBox["L", "2"]}], "4"]}], "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.9297218897395887`*^9, 3.929721931223062*^9}, {
  3.929723740924581*^9, 3.929723745236105*^9}, {3.9297239368709707`*^9, 
  3.929723944998685*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"7751d226-7a82-4163-8ab9-049525d01792"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.929802889831409*^9},ExpressionUUID->"e6288833-12e6-49d9-a26a-\
23446cbf731d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"forkrate", "[", 
   RowBox[{"delta_", ",", "n_", ",", "L_"}], "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"B", "[", "n", "]"}], "+", "n", "-", "1"}], ")"}], "!"}], 
     RowBox[{
      SuperscriptBox["L", 
       RowBox[{
        RowBox[{"B", "[", "n", "]"}], "+", "n"}]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"delta", " ", "L"}]]}]], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["b", "i"], "+", "1"}], ")"}], 
       RowBox[{"core", "[", 
        RowBox[{"delta", ",", "n", ",", "L", ",", 
         RowBox[{"B", "[", "n", "]"}], ",", 
         SubscriptBox["b", "i"]}], "]"}]}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.9297234490343657`*^9, 3.929723450943815*^9}, {
   3.929723532350095*^9, 3.929723566944615*^9}, {3.929723632791708*^9, 
   3.929723686535271*^9}, {3.929723723070518*^9, 3.92972372549692*^9}, {
   3.929723761067741*^9, 3.929723789087928*^9}, {3.929723825613009*^9, 
   3.92972383746868*^9}, {3.9297239937171373`*^9, 3.929723994046375*^9}, 
   3.9297243353133597`*^9, {3.929724814453841*^9, 3.92972482705704*^9}, {
   3.929724914664047*^9, 3.929724940693301*^9}, 3.929725228659418*^9},
 CellLabel->"In[99]:=",ExpressionUUID->"a0f17429-8b01-4e8e-942d-9c9285a2d19a"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.929723950352482*^9, 3.929723956935144*^9}, {
   3.929725136222828*^9, 3.929725136364184*^9}, {3.9297251910218678`*^9, 
   3.929725191226558*^9}, 
   3.929802835029449*^9},ExpressionUUID->"2d3a2f23-1246-4627-aaba-\
4bb34f9ed95e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "1", ",", "3", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", 
   ",", "7", ",", "8", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.929725136864689*^9, 3.929725191653536*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"1282af90-712f-4ef4-a12a-fc5dae53c198"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"forkrate", "[", 
  RowBox[{"0", ",", "2", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.9297239666624403`*^9, 3.929724004373103*^9}, {
   3.929724052316206*^9, 3.929724070573143*^9}, {3.929724217050071*^9, 
   3.929724290973755*^9}, {3.929724325097234*^9, 3.929724328651876*^9}, {
   3.9297243632123013`*^9, 3.9297243866672163`*^9}, 3.929724523501378*^9, {
   3.929724608192988*^9, 3.9297247119353037`*^9}, {3.92972497569827*^9, 
   3.929725062188024*^9}, {3.929725140845677*^9, 3.9297251411010838`*^9}, 
   3.929725268903328*^9},
 CellLabel->
  "In[101]:=",ExpressionUUID->"4338c257-9f78-47af-b951-c7ed4026004e"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.929724233493222*^9, 3.929724291410232*^9}, {
   3.929724325769784*^9, 3.929724328917411*^9}, {3.929724360710428*^9, 
   3.929724387052206*^9}, 3.9297245239937897`*^9, {3.9297246134671583`*^9, 
   3.929724644996131*^9}, {3.9297246811123543`*^9, 3.929724712463715*^9}, 
   3.929724818574449*^9, 3.929724924300722*^9, {3.929724972456262*^9, 
   3.929725062454431*^9}, {3.92972513886343*^9, 3.9297251414013233`*^9}, 
   3.9297251982762403`*^9, 3.9297252311505747`*^9, 3.9297252694543743`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"405f8ff3-0f18-4518-9a73-46197364f958"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fr6", "[", 
   RowBox[{"delta_", ",", "n_", ",", "L_", ",", "c_"}], "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{
    UnderscriptBox["\[Integral]", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"ai", "[", "n", "]"}], "]"}], "\[Element]", 
      RowBox[{"reg", "[", 
       RowBox[{"n", ",", "L"}], "]"}]}]], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"c", "+", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"i", "=", "1"}], "n"], 
         RowBox[{
          SubscriptBox["b", "i"], 
          RowBox[{"Log", "[", 
           SubscriptBox["a", "i"], "]"}]}]}], "-", 
        RowBox[{"delta", " ", 
         RowBox[{"(", 
          RowBox[{"L", "-", 
           SubscriptBox["a", "i"]}], ")"}]}]}]], 
      SubscriptBox["a", "i"]}]}]}]}]}]], "Input",
 CellLabel->"In[18]:=",ExpressionUUID->"406ecd61-63b1-4c53-afb3-6dd66aecc62e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"logcpd", "[", 
   RowBox[{"n_", ",", "L_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], 
     RowBox[{
      RowBox[{"B", "[", "n", "]"}], "+", "n", "-", "1"}]], 
    RowBox[{"Log", "[", "i", "]"}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"B", "[", "n", "]"}], "+", "n"}], ")"}], 
    RowBox[{"Log", "[", "L", "]"}]}], "-", 
   RowBox[{
    RowBox[{"Log", "[", "n", "]"}], "/", "2"}], "-", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], 
      SubscriptBox["b", "i"]], 
     RowBox[{"Log", "[", "j", "]"}]}]}]}]}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"104145c3-ace3-4415-9249-066ed7297b61"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fr6", "[", 
  RowBox[{"2", ",", "2", ",", "0.3", ",", 
   RowBox[{"logcpd", "[", 
    RowBox[{"2", ",", "0.3"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9297244992759657`*^9, 3.929724605636992*^9}, {
   3.9297246529378157`*^9, 3.92972465435992*^9}, {3.929724727727024*^9, 
   3.92972473534251*^9}, 3.9297249814315457`*^9, {3.929725047610311*^9, 
   3.929725056407098*^9}, {3.9297252178506536`*^9, 3.929725219936737*^9}, {
   3.929876274655964*^9, 3.929876279497841*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"ce9e0473-8b5a-4cc7-99c5-9192fbebc8c0"],

Cell[BoxData["0.18564494496355588`"], "Output",
 CellChangeTimes->{{3.92972446957699*^9, 3.929724615222479*^9}, 
   3.9297246809806356`*^9, 3.929724735719924*^9, 3.929724832972136*^9, 
   3.9297249261922817`*^9, 3.929724981956395*^9, {3.929725048129712*^9, 
   3.9297250567536993`*^9}, {3.929725208811636*^9, 3.929725220310041*^9}, 
   3.929876279847064*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"6ef6778e-39fb-4495-bfba-5fd91ddd9754"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9297212133174257`*^9, 
  3.929721230364826*^9}},ExpressionUUID->"3ef72409-02b2-4087-b98b-\
d48cd3981783"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
  RowBox[{
   SuperscriptBox["x", "b"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"k", " ", "x"}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.929718781843882*^9, 3.929718816863491*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"8c705b84-ddac-41d2-b8bb-e26b9c088e25"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
        RowBox[{"-", "k"}], ")"}], 
      RowBox[{
        RowBox[{"-", "1"}], "-", "b"}]], " ", 
     RowBox[{"Gamma", "[", 
       RowBox[{"1", "+", "b"}], "]"}]}], 
   RowBox[{
     RowBox[{
       RowBox[{"Re", "[", "k", "]"}], "<", "0"}], "&&", 
     RowBox[{
       RowBox[{"Re", "[", "b", "]"}], ">", 
       RowBox[{"-", "1"}]}]}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.929718820964333*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"e5bd0919-75df-4f7c-b8ea-85922fb5a73a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "+", "x"}], ")"}], "2"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"delta", "+", "r", "+", "x"}], ")"}], 
      RowBox[{"n", "-", "1"}]]}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.929709256902933*^9, 3.929709258598855*^9}, {
  3.929709307212247*^9, 3.929709322673134*^9}, {3.9297096820861197`*^9, 
  3.9297097145343437`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"9a0d1c67-0990-419f-aa07-fde502fbbafa"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     RowBox[{"-", 
       RowBox[{"(", 
         RowBox[{
           RowBox[{"(", 
             RowBox[{
               RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", "\[Pi]", " ", 
           SuperscriptBox[
            RowBox[{"(", 
              FractionBox["1", "r"], ")"}], "n"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
              RowBox[{"-", 
                FractionBox["delta", "r"]}], ")"}], 
            RowBox[{"-", "n"}]], " ", 
           RowBox[{"Csc", "[", 
             RowBox[{"n", " ", "\[Pi]"}], "]"}]}], ")"}]}], "+", 
     FractionBox[
      RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
           RowBox[{"delta", "+", "r"}], ")"}], 
         RowBox[{"2", "-", "n"}]], " ", 
        RowBox[{"(", 
          RowBox[{
            RowBox[{"-", "2"}], "+", "n", "-", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
              RowBox[{"Hypergeometric2F1", "[", 
                RowBox[{"1", ",", "1", ",", 
                  RowBox[{"3", "-", "n"}], ",", 
                  FractionBox[
                   RowBox[{"delta", "+", "r"}], "r"]}], "]"}]}]}], ")"}]}], 
      RowBox[{"delta", " ", 
        RowBox[{"(", 
          RowBox[{
            RowBox[{"-", "2"}], "+", "n"}], ")"}], " ", "r"}]]}], 
   RowBox[{
     RowBox[{"(", 
       RowBox[{
         RowBox[{
           RowBox[{"Re", "[", "r", "]"}], "\[GreaterEqual]", "0"}], "||", 
         RowBox[{"r", "\[NotElement]", 
           TemplateBox[{}, "Reals"]}]}], ")"}], "&&", 
     RowBox[{
       RowBox[{"Re", "[", "n", "]"}], ">", "0"}], "&&", 
     RowBox[{
       RowBox[{"Re", "[", 
         RowBox[{"delta", "+", "r"}], "]"}], ">", "0"}]}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{
  3.929709267394207*^9, {3.9297093120113173`*^9, 3.929709325884801*^9}, 
   3.9297097195311117`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"59d748bf-1e5a-4b3a-9d4b-e647ab35a25f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "a", "b"], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "k", " ", "x"}]], 
   RowBox[{"\[DifferentialD]", "k"}]}]}]], "Input",
 CellChangeTimes->{{3.9297030363102427`*^9, 3.929703039902866*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"4cd8924a-2b24-4bda-b78b-898e342a7e4e"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "a", "b"], 
  RowBox[{
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "a", " ", "x"}]], "-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "b", " ", "x"}]]}], ")"}]}], "x"], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.929703094052133*^9, 
  3.929703129221188*^9}},ExpressionUUID->"108dbe42-75a5-41f4-a7b2-\
400bc71dfa16"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", 
        RowBox[{"\[ImaginaryI]", " ", "k"}]}], ")"}], "2"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"delta", "-", 
        RowBox[{"\[ImaginaryI]", " ", "k"}], "+", "x"}], ")"}], 
      RowBox[{"3", " ", "n"}]]}]], 
   RowBox[{"\[DifferentialD]", "k"}]}]}]], "Input",
 CellChangeTimes->{{3.929705669498621*^9, 3.929705671885619*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"450bbde4-77ed-44d3-885c-41eceeafc6b4"],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"3", " ", "\[ImaginaryI]", " ", "n", " ", "\[Pi]", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", 
      FractionBox["delta", "x"]}], ")"}], 
    RowBox[{
     RowBox[{"-", "3"}], " ", "n"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"\[ImaginaryI]", " ", "x"}], ")"}], 
    RowBox[{
     RowBox[{"-", "3"}], " ", "n"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"delta", "+", "x"}], ")"}], 
    RowBox[{
     RowBox[{"-", "3"}], " ", "n"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["\[ImaginaryI]", "x"], ")"}], 
       RowBox[{"3", " ", "n"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[ImaginaryI]", " ", "x"}], ")"}], 
       RowBox[{"3", " ", "n"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         RowBox[{"(", 
          RowBox[{"delta", "+", "x"}], ")"}]}], ")"}], 
       RowBox[{"3", " ", "n"}]]}], "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"delta", "+", "x"}], ")"}]}], ")"}], 
      RowBox[{"3", " ", "n"}]]}], ")"}], " ", 
   RowBox[{"Csc", "[", 
    RowBox[{"3", " ", "n", " ", "\[Pi]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9297057090848227`*^9, 3.929705713094561*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"56d281e4-15d7-4d82-a1a0-f9981a7644dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
     RowBox[{"\[Lambda]", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "k"}], " ", "-", "x"}], ")"}], 
        "\[Lambda]"}]], 
      RowBox[{"\[DifferentialD]", "\[Lambda]"}]}]}], ")"}], "*", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"\[Lambda]", " "}], "2"], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "k"}], " ", "-", "delta", " ", "-", 
           "x"}], ")"}], "\[Lambda]"}]], 
       RowBox[{"\[DifferentialD]", "\[Lambda]"}]}]}], ")"}], "n"], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.92970477596791*^9, 3.9297047759695883`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"cf107c7b-48c3-4a93-8073-12bf5447f6ef"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
  RowBox[{
   TemplateBox[{
     FractionBox[
      RowBox[{
        SuperscriptBox["2", "n"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
           FractionBox["1", 
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{"delta", "-", 
                 RowBox[{"\[ImaginaryI]", " ", "k"}], "+", "x"}], ")"}], 
             "3"]], ")"}], "n"]}], 
      SuperscriptBox[
       RowBox[{"(", 
         RowBox[{
           RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "k"}], "+", "x"}], ")"}], 
       "2"]], 
     RowBox[{
       RowBox[{
         RowBox[{
           RowBox[{"Im", "[", "k", "]"}], "+", 
           RowBox[{"Re", "[", "x", "]"}]}], ">", "0"}], "&&", 
       RowBox[{
         RowBox[{
           RowBox[{"Im", "[", "k", "]"}], "+", 
           RowBox[{"Re", "[", 
             RowBox[{"delta", "+", "x"}], "]"}]}], ">", "0"}]}]},
    "ConditionalExpression"], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{3.929704785175159*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"373af893-02f3-4e13-b7af-d1b05404d58f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"3", " ", "\[ImaginaryI]", " ", "delta", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", 
      SuperscriptBox["delta", "2"]}], ")"}], 
    RowBox[{
     RowBox[{"-", "3"}], " ", "n"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "\[ImaginaryI]"}], ")"}], 
       RowBox[{"3", " ", "n"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[ImaginaryI]", " ", "delta"}], ")"}], 
       RowBox[{"3", " ", "n"}]]}], "-", 
     SuperscriptBox["delta", 
      RowBox[{"3", " ", "n"}]]}], ")"}], " ", "n", " ", "\[Pi]", " ", 
   RowBox[{"Csc", "[", 
    RowBox[{"3", " ", "n", " ", "\[Pi]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.929705140770433*^9, 3.929705144149191*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"28b791e8-b8d7-4653-a69e-5976921f2b39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"\[Lambda]", " "}], "2"], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "k"}], " ", "-", "delta", " ", "-", 
       "x"}], ")"}], "\[Lambda]"}]], 
   RowBox[{"\[DifferentialD]", "\[Lambda]"}]}]}]], "Input",
 CellChangeTimes->{{3.929704282916977*^9, 3.929704284879521*^9}, {
  3.929704318365285*^9, 3.929704319058412*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"a7658dc1-f153-4f34-8d97-8160e5cb7a90"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["2", 
    SuperscriptBox[
     RowBox[{"(", 
       RowBox[{"delta", "-", 
         RowBox[{"\[ImaginaryI]", " ", "k"}], "+", "x"}], ")"}], "3"]], 
   RowBox[{
     RowBox[{
       RowBox[{"Im", "[", "k", "]"}], "+", 
       RowBox[{"Re", "[", 
         RowBox[{"delta", "+", "x"}], "]"}]}], ">", "0"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.929704287723522*^9, 3.929704331655151*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"9cc7cb85-7afb-49f8-8e90-16be0326a232"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[CapitalLambda]"], 
  RowBox[{"\[Lambda]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "k"}], " ", "-", "x"}], ")"}], 
     "\[Lambda]"}]], 
   RowBox[{"\[DifferentialD]", "\[Lambda]"}]}]}]], "Input",
 CellLabel->"In[30]:=",ExpressionUUID->"1cc76e6c-3a36-419f-a4f0-a9f2ee2d60a7"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{"k", "+", 
        RowBox[{"\[ImaginaryI]", " ", "x"}]}], ")"}], " ", 
      "\[CapitalLambda]"}]], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"\[ImaginaryI]", " ", "k", " ", "\[CapitalLambda]"}], "+", 
      RowBox[{"x", " ", "\[CapitalLambda]"}]}], ")"}]}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"k", "+", 
     RowBox[{"\[ImaginaryI]", " ", "x"}]}], ")"}], "2"]]], "Output",
 CellChangeTimes->{3.92970426228128*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"256f82ef-f627-494f-b7a4-fa47567872c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  FractionBox["\[Placeholder]", 
   RowBox[{"2", " ", "\[Pi]"}]], "]"}]], "Input",
 CellChangeTimes->{{3.929702173307087*^9, 3.929702319661633*^9}, {
   3.929702374647455*^9, 3.929702377825539*^9}, {3.929702428397256*^9, 
   3.9297024824931498`*^9}, 
   3.9297026298483953`*^9},ExpressionUUID->"1a39256c-48f0-46ee-8bc3-\
693d71522b0c"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"ExpIntegralEi", "[", 
     RowBox[{"\[ImaginaryI]", " ", "k", " ", "x"}], "]"}]}], 
   RowBox[{"2", " ", "\[Pi]"}]]}]], "Output",
 CellChangeTimes->{
  3.92970237843216*^9, {3.9297024347589073`*^9, 3.929702491755898*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"ee203e44-94da-49be-b22d-9c7065d0371c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9297023546878223`*^9, 
  3.929702371313507*^9}},ExpressionUUID->"c4873200-891e-4117-9065-\
35815989efcc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"0.`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
  RowBox[{"ExpIntegralEi", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"1.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", "k", " ", "x"}], 
   "]"}]}]], "Output",
 CellChangeTimes->{3.929702357488844*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"4bf85116-7f98-4107-ba7a-d600793f2e40"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"int", "[", 
   RowBox[{"n_", ",", "L_"}], "]"}], ":=", 
  RowBox[{
   UnderscriptBox["\[Integral]", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"ai", "[", "n", "]"}], "]"}], "\[Element]", 
     RowBox[{"reg", "[", 
      RowBox[{"n", ",", "L"}], "]"}]}]], "1"}]}]], "Input",
 CellChangeTimes->{{3.929291457879195*^9, 3.929291499664378*^9}, {
   3.929292051296006*^9, 3.929292052896413*^9}, {3.929292090140402*^9, 
   3.929292101377517*^9}, 3.929292146670651*^9, {3.929292401876285*^9, 
   3.929292406871889*^9}, {3.92929260849923*^9, 3.92929262667721*^9}, {
   3.9292926629094954`*^9, 3.929292677025599*^9}, {3.929292954090106*^9, 
   3.929292984214602*^9}, {3.92929304868285*^9, 3.9292930650533047`*^9}, {
   3.929293136301365*^9, 3.929293155777123*^9}, 3.929293213479347*^9, {
   3.92929350936936*^9, 3.929293559553084*^9}, {3.929348099021247*^9, 
   3.929348113117826*^9}, {3.929360021237699*^9, 3.929360028030338*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"7b8d4e63-eda9-4540-aaa6-56c54e0023bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"intclose", "[", 
   RowBox[{"n_", ",", "L_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    SqrtBox["n"], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "-", "1"}], ")"}], "!"}]], "*", 
   SuperscriptBox["L", 
    RowBox[{"n", "-", "1"}]]}]}]], "Input",
 CellChangeTimes->{{3.929293157986786*^9, 3.929293169904806*^9}, {
   3.929293221999089*^9, 3.929293327747632*^9}, 3.929293360475396*^9, {
   3.9292935621528053`*^9, 3.929293587792029*^9}, {3.929347318137362*^9, 
   3.929347355249973*^9}, 3.929347390745543*^9, 3.929347489598787*^9, {
   3.929347527809235*^9, 3.929347530436495*^9}, {3.929360139042658*^9, 
   3.929360161836887*^9}, {3.929360264898199*^9, 3.929360266815166*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"570f118e-38bf-4ca0-823d-f7d522acf5d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"int", "[", 
   RowBox[{"4", ",", "9"}], "]"}], "==", 
  RowBox[{"intclose", "[", 
   RowBox[{"4", ",", "9"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.929347425628113*^9, 3.9293475401149187`*^9}, {
   3.929348046013599*^9, 3.929348046434801*^9}, {3.929360171267919*^9, 
   3.92936020239268*^9}, 3.9293602377288113`*^9, {3.929360272988555*^9, 
   3.929360276067727*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"96e4c560-5274-4277-b80c-83324fd01c99"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.929347498224472*^9, 3.929347540384323*^9}, 
   3.9293480467523537`*^9, 3.929348133841672*^9, {3.9293601641306057`*^9, 
   3.929360202658618*^9}, 3.9293602382131453`*^9, {3.929360269412986*^9, 
   3.9293602847191133`*^9}, 3.9293609806467533`*^9, 3.929541059345437*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"689382f6-d84d-4d19-b004-b2cfba5ddfb7"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9293601814427433`*^9, 3.92936018169571*^9}, 
   3.9293602719160833`*^9},ExpressionUUID->"fc0e6a41-483b-4c85-b6ea-\
b7938f54636a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"intp", "[", 
   RowBox[{"n_", ",", "L_"}], "]"}], ":=", 
  RowBox[{
   UnderscriptBox["\[Integral]", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"ai", "[", "n", "]"}], "]"}], "\[Element]", 
     RowBox[{"reg", "[", 
      RowBox[{"n", ",", "L"}], "]"}]}]], 
   RowBox[{
    UnderoverscriptBox["\[Product]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SuperscriptBox[
     SubscriptBox["a", "i"], 
     SubscriptBox["b", "i"]]}]}]}]], "Input",
 CellChangeTimes->{{3.929348059211965*^9, 3.9293480605331693`*^9}, {
   3.929348139449082*^9, 3.9293481538559923`*^9}, {3.929348195806734*^9, 
   3.929348204365573*^9}, {3.929348302625915*^9, 3.929348394570758*^9}, 
   3.929348451185317*^9, {3.929360302479231*^9, 3.929360309525373*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"b3c37930-ffc3-40f5-a70c-3eca9170a491"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.929348544731525*^9, 3.929348557392784*^9}, {
   3.9293489656064253`*^9, 3.92934897392593*^9}, {3.929361199980954*^9, 
   3.929361200117892*^9}, {3.929541141387393*^9, 3.929541141569817*^9}, 
   3.929724025974009*^9},ExpressionUUID->"5767cb4e-85a5-4862-8299-\
769e7de787e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"const", "[", 
   RowBox[{"n_", ",", "L_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"B", "[", "n", "]"}], "+", "n", "-", "1"}], ")"}], "!"}], 
    RowBox[{
     SqrtBox["n"], 
     RowBox[{
      UnderoverscriptBox["\[Product]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["b", "i"], "!"}], ")"}]}]}]], "/", 
   SuperscriptBox["L", 
    RowBox[{
     RowBox[{"B", "[", "n", "]"}], "+", "n", "-", "1"}]]}]}]], "Input",
 CellChangeTimes->{{3.929348576219973*^9, 3.929348657375463*^9}, {
   3.929348729476925*^9, 3.929348737226427*^9}, {3.929348807493319*^9, 
   3.929348817535767*^9}, {3.929348905865212*^9, 3.92934892428239*^9}, {
   3.9293489768724117`*^9, 3.929348977772364*^9}, 3.929349031419915*^9, {
   3.929349317159292*^9, 3.929349351741145*^9}, {3.929349474663377*^9, 
   3.9293494795235577`*^9}, {3.929361098843433*^9, 3.929361151535158*^9}, 
   3.929361204165191*^9, {3.929362312603701*^9, 3.92936234435714*^9}, {
   3.929362419842979*^9, 3.929362434250828*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"2d36999a-b9df-4f16-a3ea-15b451e9856e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", 
  RowBox[{"intp", "[", 
   RowBox[{"3", ",", "3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.929348463136462*^9, 3.9293484640366898`*^9}, {
  3.929349018443819*^9, 3.92934907144696*^9}, {3.9293491177624817`*^9, 
  3.9293491449350967`*^9}, {3.929349187978573*^9, 3.9293491884181957`*^9}, {
  3.929349366912828*^9, 3.929349371269136*^9}, {3.9293494871647673`*^9, 
  3.929349487325745*^9}, {3.9293496168321667`*^9, 3.929349616989799*^9}, {
  3.929360340208906*^9, 3.9293603784028997`*^9}, {3.929361014045038*^9, 
  3.929361073868719*^9}, {3.929361164850712*^9, 3.929361165430407*^9}, {
  3.929361213517374*^9, 3.929361222664309*^9}, {3.929361421519663*^9, 
  3.929361423658951*^9}, {3.9293623548876266`*^9, 3.929362355746073*^9}, {
  3.9293623882767687`*^9, 3.929362441921974*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"ee6362fd-a505-4fd9-981e-6164b5ec5e05"],

Cell[BoxData[
 FractionBox["280", 
  RowBox[{"2187", " ", 
   SqrtBox["3"]}]]], "Output",
 CellChangeTimes->{{3.9293610460859737`*^9, 3.9293610798100777`*^9}, 
   3.929361166036456*^9, {3.929361218577414*^9, 3.929361223032506*^9}, {
   3.929361421941174*^9, 3.929361423942605*^9}, 3.929362357391983*^9, {
   3.9293623893542747`*^9, 3.929362442156707*^9}},
 CellLabel->"Out[67]=",ExpressionUUID->"68c56815-382b-4ab0-90a1-468c8dfd9484"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"constpdelta", "[", 
   RowBox[{"n_", ",", "L_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"B", "[", "n", "]"}], "+", "n", "-", "1"}], ")"}], "!"}], 
   RowBox[{
    SuperscriptBox["L", 
     RowBox[{
      RowBox[{"B", "[", "n", "]"}], "+", "n"}]], 
    SqrtBox["n"], 
    RowBox[{
     UnderoverscriptBox["\[Product]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["b", "i"], "!"}], ")"}]}]}]]}]], "Input",
 CellChangeTimes->{{3.92936897600077*^9, 3.929368985328525*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"03c3eda8-0148-4488-8088-b723af025689"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.929377781897829*^9, 3.929377809146069*^9}, {
   3.929377842844619*^9, 3.92937800697318*^9}, 3.929378121515676*^9, 
   3.9297244305171013`*^9},ExpressionUUID->"5ecc7f40-a6c0-44e0-bce3-\
0abbeb0a6d45"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Log", "[", 
   RowBox[{"constpdelta", "[", 
    RowBox[{"3", ",", "0.3"}], "]"}], "]"}], "==", 
  RowBox[{"logcpd", "[", 
   RowBox[{"3", ",", "0.3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.929379353826315*^9, 3.929379382423876*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"b3fc2227-eec3-4183-af91-f7f387489aab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdeltacore", "[", 
   RowBox[{"delta_", ",", "n_", ",", "L_"}], "]"}], ":=", 
  RowBox[{
   UnderscriptBox["\[Integral]", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"ai", "[", "n", "]"}], "]"}], "\[Element]", 
     RowBox[{"reg", "[", 
      RowBox[{"n", ",", "L"}], "]"}]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox["a", "i"], 
        RowBox[{"(", 
         RowBox[{"L", "-", 
          SubscriptBox["a", "i"]}], ")"}], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["a", "i"], "-", "L"}], ")"}], "delta"}]]}]}], ")"}], 
     
     RowBox[{
      UnderoverscriptBox["\[Product]", 
       RowBox[{"i", "=", "1"}], "n"], 
      SuperscriptBox[
       SubscriptBox["a", "i"], 
       SubscriptBox["b", "i"]]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.929368609175459*^9, 3.929368849571135*^9}, 
   3.9293690330663958`*^9, {3.929379286232784*^9, 3.929379286616389*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"a974bd84-c1b4-4f4f-b30a-b81cd0b079c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "delta"], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["a", "i"], "-", "L"}], ")"}], "delta"}]], 
   RowBox[{"\[DifferentialD]", "delta"}]}]}]], "Input",
 CellChangeTimes->{{3.929383909797916*^9, 3.929383950697228*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"937ca448-d3b5-4b4c-868d-dc4c83756238"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"delta", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "L"}], "+", 
        SubscriptBox["a", "i"]}], ")"}]}]]}], 
   RowBox[{"L", "-", 
    SubscriptBox["a", "i"]}]]}]], "Output",
 CellChangeTimes->{3.929383964702756*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"2030f883-37f0-4a86-bbfd-0a81f5601f88"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{
     SubscriptBox["a", "i"], 
     RowBox[{"(", 
      RowBox[{"L", "-", 
       SubscriptBox["a", "i"]}], ")"}], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["a", "i"], "-", "L"}], ")"}], "delta"}]]}]}], ")"}], 
  RowBox[{
   UnderoverscriptBox["\[Product]", 
    RowBox[{"i", "=", "1"}], "n"], 
   SuperscriptBox[
    SubscriptBox["a", "i"], 
    SubscriptBox["b", "i"]]}]}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"439cd7b4-3f5b-4e88-846e-6b3b8cc2396d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    UnderoverscriptBox["\[Product]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SubsuperscriptBox["a", "i", 
     SubscriptBox["b", "i"]]}], ")"}], " ", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "n"], 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"delta", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "L"}], "+", 
        SubscriptBox["a", "i"]}], ")"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"L", "-", 
      SubscriptBox["a", "i"]}], ")"}], " ", 
    SubscriptBox["a", "i"]}]}]}]], "Output",
 CellChangeTimes->{3.929384075211791*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"9018c2bf-6a3c-4390-907e-a4a733d5bc33"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pdeltacore", "[", 
  RowBox[{"1", ",", "5", ",", "0.3"}], "]"}]], "Input",
 CellChangeTimes->{{3.929368872592764*^9, 3.9293688985132933`*^9}, 
   3.929379300970023*^9, {3.929379430028336*^9, 3.929379430818343*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"26662e0d-dbc6-4b02-ac63-6db3f0e89548"],

Cell[BoxData["7.180692257251582`*^-21"], "Output",
 CellChangeTimes->{{3.929368877328137*^9, 3.929368898784683*^9}, 
   3.929369038570774*^9, 3.929379400514065*^9, 3.9293794348771267`*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"45aa6bd5-6f62-4d53-9d65-b3c0fc7debd1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fr", "[", 
   RowBox[{"delta_", ",", "n_", ",", "L_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"constpdelta", "[", 
    RowBox[{"n", ",", "L"}], "]"}], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "delta"], 
    RowBox[{
     RowBox[{"pdeltacore", "[", 
      RowBox[{"x", ",", "n", ",", "L"}], "]"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.929369058489143*^9, 3.92936911858704*^9}, 
   3.929379407777285*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"9c18a058-6392-4c70-9edc-eeb8bb246d45"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fr4", "[", 
   RowBox[{"delta_", ",", "n_", ",", "L_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"constpdelta", "[", 
    RowBox[{"n", ",", "L"}], "]"}], 
   RowBox[{
    UnderscriptBox["\[Integral]", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"ai", "[", "n", "]"}], "]"}], "\[Element]", 
      RowBox[{"reg", "[", 
       RowBox[{"n", ",", "L"}], "]"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        UnderoverscriptBox["\[Product]", 
         RowBox[{"i", "=", "1"}], "n"], 
        SubsuperscriptBox["a", "i", 
         SubscriptBox["b", "i"]]}], ")"}], 
      RowBox[{"(", 
       RowBox[{"L", "-", " ", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"i", "=", "1"}], "n"], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"delta", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "L"}], "+", 
              SubscriptBox["a", "i"]}], ")"}]}]], 
          SubscriptBox["a", "i"]}]}]}], ")"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.929384310287847*^9, 3.929384382884062*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"a8595887-7df2-4ea7-85ab-73829f5bda37"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fr5", "[", 
   RowBox[{"delta_", ",", "n_", ",", "L_", ",", "c_"}], "]"}], ":=", 
  RowBox[{
   UnderscriptBox["\[Integral]", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"ai", "[", "n", "]"}], "]"}], "\[Element]", 
     RowBox[{"reg", "[", 
      RowBox[{"n", ",", "L"}], "]"}]}]], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"c", "+", 
     RowBox[{"Log", "[", 
      RowBox[{"L", "-", " ", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"i", "=", "1"}], "n"], 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"delta", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "L"}], "+", 
             SubscriptBox["a", "i"]}], ")"}]}]], 
         SubscriptBox["a", "i"]}]}]}], "]"}], "+", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["b", "i"], 
       RowBox[{"Log", "[", 
        SubscriptBox["a", "i"], "]"}]}]}]}]]}]}]], "Input",
 CellChangeTimes->{{3.9293848883770533`*^9, 3.929384953150444*^9}, {
  3.929385003016672*^9, 3.929385013857801*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"d0f87153-6042-4836-b402-55828f8808e7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"fr5", "[", 
     RowBox[{"delta", ",", "5", ",", "1", ",", 
      RowBox[{"logcpd", "[", 
       RowBox[{"5", ",", "1"}], "]"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"delta", ",", "0.1", ",", "2", ",", "0.1"}], "}"}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.929522257885508*^9, 3.929522258400779*^9}, {
  3.929522295482593*^9, 3.929522336447002*^9}, {3.9295225082780867`*^9, 
  3.929522508539727*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"3c01dbf0-646a-433a-94d7-942c712438f6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.035150263325900155`", ",", "0.06830456999739444`", ",", 
   "0.09961498078326629`", ",", "0.12922068591014463`", ",", 
   "0.15724912538637018`", ",", "0.1838170227283175`", ",", 
   "0.20903130590216418`", ",", "0.23298997596808718`", ",", 
   "0.25578286478551515`", ",", "0.2774923572874954`", ",", 
   "0.2981940279728106`", ",", "0.3179577432152919`", ",", 
   "0.3368455665122777`", ",", "0.35491781056676014`", ",", 
   "0.37222757887461033`", ",", "0.38882418639116767`", ",", 
   "0.4047531015252299`", ",", "0.42005643720370406`", ",", 
   "0.4347724751157445`", ",", "0.44893681656019874`"}], "}"}]], "Output",
 CellChangeTimes->{3.929522260789466*^9, 3.9295223591479816`*^9, 
  3.9295225920725594`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"f074e30f-ab7e-4e43-86cc-68de8904ca79"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"fr5", "[", 
     RowBox[{"delta", ",", "5", ",", "0.3", ",", 
      RowBox[{"logcpd", "[", 
       RowBox[{"5", ",", "0.3"}], "]"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"delta", ",", "0.1", ",", "2", ",", "0.1"}], "}"}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.9295223686279716`*^9, 3.92952238905731*^9}, {
  3.929522436169619*^9, 3.92952246211931*^9}, {3.929522496449388*^9, 
  3.929522503012948*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"39afe0af-5814-4b13-9e00-668875d5f876"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.010764254898211777`", ",", "0.021338648127326137`", ",", 
   "0.03172768197648599`", ",", "0.041935740237432344`", ",", 
   "0.05196709179586712`", ",", "0.06182589349079285`", ",", 
   "0.07151619273356351`", ",", "0.08104262956559301`", ",", 
   "0.09040694802028962`", ",", "0.09961498078346741`", ",", 
   "0.10866967011624061`", ",", "0.11757456144871842`", ",", 
   "0.12633310796771013`", ",", "0.13494867200789307`", ",", 
   "0.14342453348038767`", ",", "0.15176387107212091`", ",", 
   "0.15996980144422282`", ",", "0.16804535154642725`", ",", 
   "0.1759934680441362`", ",", "0.18381702272869202`"}], "}"}]], "Output",
 CellChangeTimes->{3.929522398613065*^9, 3.92952247968182*^9, 
  3.9295225498712263`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"c8b87fa9-9699-4722-b896-2afa60044ed6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fr5", "[", 
  RowBox[{"0", ",", "5", ",", "0.03", ",", 
   RowBox[{"logcpd", "[", 
    RowBox[{"5", ",", "0.03"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9295226091456747`*^9, 3.929522671571697*^9}, {
   3.9295230511081333`*^9, 3.9295230528585176`*^9}, 3.929523123912757*^9, {
   3.929523821727627*^9, 3.929523851245186*^9}, {3.9295238842087317`*^9, 
   3.929523886462146*^9}, {3.9295247424648447`*^9, 3.9295247683591413`*^9}, {
   3.9295248263886423`*^9, 3.929524830827631*^9}, {3.929525472196307*^9, 
   3.929525493784116*^9}, {3.92952553620573*^9, 3.929525536389016*^9}, {
   3.9295400610580378`*^9, 3.929540151406149*^9}, {3.929540217879362*^9, 
   3.929540242803144*^9}, {3.929541164014558*^9, 3.929541211013554*^9}, {
   3.929541894102735*^9, 3.9295418942900343`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"d88930c5-f6d7-497c-b0a8-ed0fae43fd13"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{{3.929522626263975*^9, 3.929522674682904*^9}, 
   3.929523055446569*^9, 3.929523124444571*^9, {3.9295238268703747`*^9, 
   3.929523886851232*^9}, {3.9295247090650196`*^9, 3.929524768692843*^9}, 
   3.929524833728839*^9, {3.9295254686989202`*^9, 3.929525503774191*^9}, {
   3.9295255383531713`*^9, 3.929525557911673*^9}, {3.929539991687849*^9, 
   3.929540158895239*^9}, {3.929540214761619*^9, 3.929540271630995*^9}, 
   3.929540339792997*^9, 3.9295407926179333`*^9, 3.929540872952869*^9, {
   3.92954116483866*^9, 3.929541216179834*^9}, 3.929541342212886*^9, {
   3.929541449636979*^9, 3.929541452741*^9}, 3.92954165891839*^9, 
   3.92954189470294*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"fca4b6c8-701f-4df1-adb1-20caead53529"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.929522700908278*^9, 3.929522737566791*^9}, {
   3.929523061863473*^9, 3.929523084193129*^9}, {3.929523201590232*^9, 
   3.929523212718033*^9}, {3.929523274637395*^9, 3.929523278018367*^9}, {
   3.929523569488421*^9, 3.9295236935377007`*^9}, 3.929524381615803*^9, {
   3.929524439331807*^9, 3.9295244748084717`*^9}, {3.9295268941358833`*^9, 
   3.929526905140164*^9}, {3.929539882073477*^9, 3.929539905272972*^9}, {
   3.9295399582923*^9, 3.929539971111882*^9}, {3.929540400399719*^9, 
   3.929540436206855*^9}, {3.929540472077896*^9, 3.929540476021988*^9}, {
   3.929540527203277*^9, 3.9295406123575897`*^9}, 
   3.929724410797802*^9},ExpressionUUID->"d944711f-c5d1-4292-bc06-\
a54b8208d05f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "b"], 
  RowBox[{
   SuperscriptBox["x", "y"], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.929595669630103*^9, 3.929595691922535*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"4db847c1-d717-4ae0-9844-eab17b5f8bec"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    SuperscriptBox["b", 
     RowBox[{"1", "+", "y"}]], 
    RowBox[{"1", "+", "y"}]], 
   RowBox[{
     RowBox[{"Re", "[", "y", "]"}], ">", 
     RowBox[{"-", "1"}]}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.9295956941091223`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"f69bc2e1-2187-4e61-9a44-c7a83ab6d29a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "z"], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"y", "-", "x"}], ")"}], 
    SubscriptBox["b", "1"]], 
   SuperscriptBox["x", 
    SubscriptBox["b", "2"]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.929596357598493*^9, 3.929596378416587*^9}, {
  3.929596432357421*^9, 3.9295964615168047`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"6e29f163-42b8-4121-9773-2da0a9a193a7"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    RowBox[{
      SuperscriptBox["y", 
       SubscriptBox["b", "1"]], " ", 
      SuperscriptBox["z", 
       RowBox[{"1", "+", 
         SubscriptBox["b", "2"]}]], " ", 
      RowBox[{"Hypergeometric2F1", "[", 
        RowBox[{
          RowBox[{"-", 
            SubscriptBox["b", "1"]}], ",", 
          RowBox[{"1", "+", 
            SubscriptBox["b", "2"]}], ",", 
          RowBox[{"2", "+", 
            SubscriptBox["b", "2"]}], ",", 
          FractionBox["z", "y"]}], "]"}]}], 
    RowBox[{"1", "+", 
      SubscriptBox["b", "2"]}]], 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
        TagBox[
         TooltipBox["\"condition\"", 
          TagBox[
           RowBox[{
             RowBox[{"(", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Re", "[", 
                    FractionBox["y", "z"], "]"}], "\[GreaterEqual]", "1"}], 
                 "||", 
                 RowBox[{
                   RowBox[{"Re", "[", 
                    FractionBox["y", "z"], "]"}], "\[LessEqual]", "0"}], "||", 
                 RowBox[{
                   FractionBox["y", "z"], "\[NotElement]", 
                   TemplateBox[{}, "Reals"]}]}], ")"}], "&&", 
             RowBox[{
               RowBox[{"Re", "[", "y", "]"}], ">", "0"}], "&&", 
             RowBox[{
               RowBox[{"Re", "[", 
                 SubscriptBox["b", "2"], "]"}], ">", 
               RowBox[{"-", "1"}]}]}], Short[#, 7]& ]], Annotation[#, 
          Short[
           And[
            Or[
            Re[$CellContext`y/$CellContext`z] >= 1, 
             Re[$CellContext`y/$CellContext`z] <= 0, 
             NotElement[$CellContext`y/$CellContext`z, Reals]], 
            Re[$CellContext`y] > 0, Re[
              Subscript[$CellContext`b, 2]] > -1], 7], "Tooltip"]& ], 
        "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["And", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["1120", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]}, "IconizedObject"]], 
    And[
     Or[Re[$CellContext`y/$CellContext`z] >= 1, 
      Re[$CellContext`y/$CellContext`z] <= 0, 
      NotElement[$CellContext`y/$CellContext`z, Reals]], Re[$CellContext`y] > 
     0, Re[
       Subscript[$CellContext`b, 2]] > -1], SelectWithContents -> True, 
    Selectable -> False]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.9295964614785557`*^9, 3.929596597726843*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"932cb826-0ade-46e7-879a-67a46a0f099c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{" ", 
    RowBox[{
     RowBox[{"-", "L"}], " ", "delta"}]}]], 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "n"], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "\[Placeholder]", "\[Placeholder]"], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"delta", " ", 
       SubscriptBox["a", "i"]}]], 
     SubscriptBox["a", "i"], 
     RowBox[{
      UnderoverscriptBox["\[Product]", 
       RowBox[{"j", "=", "1"}], "n"], 
      RowBox[{
       SubsuperscriptBox["a", "j", 
        SubscriptBox["b", "j"]], 
       RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.929594471753736*^9, 3.929594511298793*^9}, {
   3.9295945605792923`*^9, 3.929594561311103*^9}, 3.929594606645029*^9, {
   3.9295946703882437`*^9, 3.929594702882679*^9}, {3.9295947926047277`*^9, 
   3.929594797824749*^9}, {3.929594897044236*^9, 3.929594909939205*^9}, {
   3.929595068817822*^9, 3.9295950915972357`*^9}, {3.9295951493669558`*^9, 
   3.9295951539188643`*^9}},ExpressionUUID->"d7dbdcfd-0bce-4c92-9d39-\
7f8ad014c789"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9295400778825*^9, 3.929540142711006*^9}, 
   3.929540175761736*^9, {3.929540230862761*^9, 3.929540245229368*^9}, {
   3.929540618835765*^9, 3.929540620871317*^9}, {3.9295411760077753`*^9, 
   3.929541207118091*^9}, {3.929541608456819*^9, 3.929541653807619*^9}, 
   3.929541889278363*^9, 
   3.929724456119192*^9},ExpressionUUID->"abbd1a42-c378-4aa5-b808-\
205c8a3ccf84"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{{3.929540083618137*^9, 3.929540143017695*^9}, 
   3.9295401878371067`*^9, {3.9295402246307907`*^9, 3.9295402502862167`*^9}, 
   3.92954031953053*^9, 3.92954040115406*^9, 3.929540483747779*^9, {
   3.929541178329215*^9, 3.9295412114100847`*^9}, 3.929541285900861*^9, 
   3.929541443214499*^9, 3.929541547075365*^9, {3.9295416105127077`*^9, 
   3.929541655395073*^9}, {3.929541891094648*^9, 3.9295418975296793`*^9}},
 CellLabel->"Out[37]=",ExpressionUUID->"61979717-207d-424d-8213-38edb70fcdef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"logcpd", "[", 
  RowBox[{"12", ",", "0.03"}], "]"}]], "Input",
 CellChangeTimes->{{3.929526276416994*^9, 3.929526276651724*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"f3b95a2c-257b-4c57-a051-0a351badd800"],

Cell[BoxData["52566.8984804187`"], "Output",
 CellChangeTimes->{{3.929526275394978*^9, 3.929526312618105*^9}},
 CellLabel->
  "Out[173]=",ExpressionUUID->"7fdefcff-ffec-4257-a29d-76ed4694c952"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.929563057110487*^9, 3.929563111575821*^9}, 
   3.929563145005374*^9, {3.929563181478467*^9, 3.929563206897551*^9}, {
   3.929563242701602*^9, 3.9295632900900908`*^9}, {3.92956334924234*^9, 
   3.92956343288505*^9}, {3.929563827255776*^9, 3.929563841488879*^9}, 
   3.929563926110241*^9, {3.929564016579798*^9, 3.929564018952258*^9}, {
   3.92959216758517*^9, 3.929592218355783*^9}, 3.929592288669833*^9, {
   3.9297262086149693`*^9, 
   3.9297262383264503`*^9}},ExpressionUUID->"a0c0a75c-cabe-45f3-aa35-\
3f75dbf85c2a"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
        RowBox[{"-", "b"}], ")"}], 
      RowBox[{
        RowBox[{"-", "1"}], "-", "a"}]], " ", 
     RowBox[{"Gamma", "[", 
       RowBox[{"1", "+", "a"}], "]"}]}], 
   RowBox[{
     RowBox[{
       RowBox[{"Re", "[", "b", "]"}], "<", "0"}], "&&", 
     RowBox[{
       RowBox[{"Re", "[", "a", "]"}], ">", 
       RowBox[{"-", "1"}]}]}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{{3.929563837471887*^9, 3.929563845827041*^9}, {
   3.929564014406435*^9, 3.929564025970133*^9}, 3.929592222683163*^9, 
   3.929592291001698*^9, 3.929726214785562*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"b633cb10-3c64-4160-ba90-b51b7115f03e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Gamma", "[", 
   RowBox[{"2", "+", "2"}], "]"}], "-", 
  RowBox[{"Gamma", "[", 
   RowBox[{
    RowBox[{"2", "+", "2"}], ",", 
    RowBox[{"-", "0.1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.929564067493635*^9, 3.9295640688026114`*^9}, 
   3.929564116870769*^9, {3.929564267766478*^9, 3.929564342380309*^9}, {
   3.929565226349421*^9, 3.929565264875842*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"b7016c5e-a636-4fb6-9a53-a7fad2a98b77"],

Cell[BoxData["0.000027085767309031894`"], "Output",
 CellChangeTimes->{
  3.9295640696337423`*^9, 3.929564117256139*^9, {3.929564270478863*^9, 
   3.929564342681622*^9}, 3.929565265365035*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"8a05b6b8-59c9-4a33-b523-17f262cec62e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", 
   RowBox[{"-", "0.1"}]], 
  RowBox[{
   FractionBox[
    SuperscriptBox["t", "3"], 
    SuperscriptBox["\[ExponentialE]", "t"]], 
   RowBox[{"\[DifferentialD]", "t"}]}]}]], "Input",
 CellChangeTimes->{
  3.9295650299841747`*^9, {3.929565156359089*^9, 3.929565165575604*^9}, {
   3.9295651960396843`*^9, 3.9295652196284647`*^9}, {3.9295652800030317`*^9, 
   3.929565295167124*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"310ac194-8b3a-42b6-8fa5-e34d2a5fe04d"],

Cell[BoxData["0.000027085767309044898`"], "Output",
 CellChangeTimes->{3.929565221087717*^9, 3.9295652982282124`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"c8953dd4-1879-4260-8f38-89f6be5e82e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["lll", 
     SubscriptBox["b", "1"]], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "delta"}], " ", "L"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "delta"}], " ", "lll"}], ")"}], 
         RowBox[{"-", 
          SubscriptBox["b", "1"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Gamma", "[", 
           RowBox[{"2", "+", 
            SubscriptBox["b", "1"]}], "]"}], "-", 
          RowBox[{"Gamma", "[", 
           RowBox[{
            RowBox[{"2", "+", 
             SubscriptBox["b", "1"]}], ",", 
            RowBox[{
             RowBox[{"-", "delta"}], " ", "lll"}]}], "]"}]}], ")"}]}], 
       SuperscriptBox["delta", "2"]], "+", 
      FractionBox[
       RowBox[{"C", " ", "lll"}], 
       RowBox[{"1", "+", 
        SubscriptBox["b", "1"]}]]}], ")"}]}], ",", " ", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     SubscriptBox["b", "1"], "\[Element]", "NonNegativeIntegers"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.929563498270133*^9, 3.9295635464557743`*^9}, 
   3.9295635881988983`*^9, {3.929563739344643*^9, 3.929563791850254*^9}, 
   3.929563879117607*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"8a585626-0a19-4307-81f0-d7811d9dff6c"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["lll", 
   SubscriptBox["b", "1"]], " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "delta"}], " ", "L"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "delta"}], " ", "lll"}], ")"}], 
       RowBox[{"-", 
        SubscriptBox["b", "1"]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{"2", "+", 
          SubscriptBox["b", "1"]}], "]"}], "-", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"2", "+", 
           SubscriptBox["b", "1"]}], ",", 
          RowBox[{
           RowBox[{"-", "delta"}], " ", "lll"}]}], "]"}]}], ")"}]}], 
     SuperscriptBox["delta", "2"]], "+", 
    FractionBox[
     RowBox[{"C", " ", "lll"}], 
     RowBox[{"1", "+", 
      SubscriptBox["b", "1"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.929563782719542*^9, 3.9295637926135798`*^9}, 
   3.929563880761702*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"05c21d39-2db3-43d0-addb-51fd38f1f447"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.929563464442947*^9, 
  3.929563491907487*^9}},ExpressionUUID->"5784537b-96db-4bb6-80a7-\
24801a248731"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n", "=", "4"}]], "Input",
 CellChangeTimes->{{3.929527579248457*^9, 3.9295275798798027`*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"017d19f0-8d5a-41bd-b997-c170652f8d3e"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.929527580116015*^9},
 CellLabel->
  "Out[211]=",ExpressionUUID->"981d2c61-e9b8-4747-97b4-2635e5d63118"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"B", "=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "4"], 
   SubscriptBox["b", "i"]}]}]], "Input",
 CellChangeTimes->{{3.929527411406377*^9, 3.929527461678496*^9}, {
  3.929527497158463*^9, 3.929527519579973*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"aa17140f-4e77-4489-b2e1-693a357d67f5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"L", "=", "0.003"}]], "Input",
 CellChangeTimes->{{3.92952754332314*^9, 3.9295275452742558`*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"af938119-c352-461c-b8e9-6edf2c98e844"],

Cell[BoxData["0.003`"], "Output",
 CellChangeTimes->{3.9295275456212606`*^9},
 CellLabel->
  "Out[207]=",ExpressionUUID->"b5f78f36-dd38-468e-a32d-ed17367a041e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], 
     RowBox[{"B", "+", "n", "-", "1"}]], 
    RowBox[{"Log", "[", "i", "]"}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"B", "+", "n"}], ")"}], 
    RowBox[{"Log", "[", "L", "]"}]}], "-", 
   RowBox[{
    RowBox[{"Log", "[", "n", "]"}], "/", "2"}], "-", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], 
      SubscriptBox["b", "i"]], 
     RowBox[{"Log", "[", "j", "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.929527530266569*^9, 3.9295275308774014`*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"71f07ff8-d266-42b0-b58d-8339763d4391"],

Cell[BoxData["79654.05820997796`"], "Output",
 CellChangeTimes->{3.929527584670869*^9},
 CellLabel->
  "Out[212]=",ExpressionUUID->"5756da33-50ef-47ef-b880-d399a6ce0687"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fr7", "[", 
  RowBox[{"4", ",", "0.003"}], "]"}]], "Input",
 CellChangeTimes->{{3.929527022302397*^9, 3.929527048569579*^9}, 
   3.929527176716203*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"80706d09-a7f4-4b2b-9fc6-87250a767d23"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{{3.929527307029154*^9, 3.9295273320175323`*^9}, {
   3.929527362989904*^9, 3.929527379647984*^9}, {3.929527636288059*^9, 
   3.9295276500817947`*^9}, 3.929527681996628*^9, {3.929528086539929*^9, 
   3.92952815227843*^9}, 3.929528229190946*^9, {3.9295282824050903`*^9, 
   3.929528376959672*^9}, {3.9295288159141407`*^9, 3.929528859314316*^9}, 
   3.929528890393655*^9, 3.9295292922906322`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"80711b45-c90a-48bd-8ba5-829d37b191ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fr6", "[", 
  RowBox[{"1000000000000000", ",", "4", ",", "0.003"}], "]"}]], "Input",
 CellChangeTimes->{{3.929524630111546*^9, 3.929524638112382*^9}, {
   3.9295247370348682`*^9, 3.929524740627689*^9}, 3.929524778806344*^9, {
   3.929524820863111*^9, 3.9295249759583607`*^9}, {3.9295250174993773`*^9, 
   3.9295250330724277`*^9}, {3.9295250985986*^9, 3.929525151153717*^9}, {
   3.92952525361049*^9, 3.929525266827311*^9}, {3.929525298830738*^9, 
   3.929525309308614*^9}, {3.9295253410689287`*^9, 3.929525459569047*^9}, {
   3.929525515976207*^9, 3.9295255274369183`*^9}, {3.929525564770549*^9, 
   3.929525573767024*^9}, {3.929525679172195*^9, 3.929525694580882*^9}, 
   3.929526174702077*^9, {3.9295266981545773`*^9, 3.929526728790663*^9}, {
   3.9295268762683983`*^9, 3.929526876398875*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"e287b507-b27d-4619-ac70-0042e671de9b"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{{3.929524634243593*^9, 3.929524638704083*^9}, {
   3.929524737903075*^9, 3.929524740919586*^9}, 3.929524780500917*^9, {
   3.92952482537711*^9, 3.929524877947638*^9}, {3.929524911018797*^9, 
   3.929525181505724*^9}, {3.929525241030734*^9, 3.929525460541811*^9}, {
   3.929525516428502*^9, 3.929525574188603*^9}, {3.929525675970511*^9, 
   3.929525699251693*^9}, 3.929526175589561*^9, 3.9295263429985437`*^9, {
   3.9295267014027987`*^9, 3.92952673724728*^9}, {3.929526884181526*^9, 
   3.929526915680893*^9}},
 CellLabel->
  "Out[186]=",ExpressionUUID->"7f2101dd-461e-4580-8232-ebaa9283cda8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fr6", "[", 
  RowBox[{"0.00004", ",", "7", ",", "0.03"}], "]"}]], "Input",
 CellChangeTimes->{{3.929522778875725*^9, 3.929522845691698*^9}, {
  3.929523039871278*^9, 3.929523040011496*^9}, {3.929523098594089*^9, 
  3.929523111477236*^9}, {3.9295233072120457`*^9, 3.929523327839654*^9}, {
  3.92952371062729*^9, 3.929523785703672*^9}, {3.929523834041459*^9, 
  3.9295239032964487`*^9}, {3.9295242452626143`*^9, 3.9295242684959*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"d1d7645a-0183-4d4a-a44c-85d7ce438342"],

Cell[BoxData["0.9891316934308335`"], "Output",
 CellChangeTimes->{{3.929522781930551*^9, 3.929522848954035*^9}, 
   3.929523042568325*^9, {3.92952309540168*^9, 3.9295231143736057`*^9}, 
   3.929523325480633*^9, 3.929523368663639*^9, 3.929523651323559*^9, {
   3.9295237241201878`*^9, 3.929523788967801*^9}, {3.929523837553701*^9, 
   3.929523907006934*^9}, 3.929524092510851*^9, {3.9295242244976463`*^9, 
   3.929524269204054*^9}, 3.929524594313746*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"95c5681e-e514-4ba0-9fb4-ca33cbcdc4de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"logcpd", "[", 
  RowBox[{"30", ",", "0.004"}], "]"}]], "Input",
 CellLabel->"In[62]:=",ExpressionUUID->"f9bea19a-92f5-497c-9c32-3bd3d2f62297"],

Cell[BoxData["227430.95071479137`"], "Output",
 CellChangeTimes->{3.929385599875338*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"3d8e8d1e-74c1-4105-bf5e-28682835fa06"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdeltacorelog", "[", 
   RowBox[{"delta_", ",", "n_", ",", "L_"}], "]"}], ":=", 
  RowBox[{
   UnderscriptBox["\[Integral]", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"ai", "[", "n", "]"}], "]"}], "\[Element]", 
     RowBox[{"reg", "[", 
      RowBox[{"n", ",", "L"}], "]"}]}]], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox["a", "i"], 
        RowBox[{"(", 
         RowBox[{"L", "-", 
          SubscriptBox["a", "i"]}], ")"}], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["a", "i"], "-", "L"}], ")"}], "delta"}]]}]}], "]"}], 
     "+", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["b", "i"], 
       RowBox[{"Log", "[", 
        SubscriptBox["a", "i"], "]"}]}]}]}]]}]}]], "Input",
 CellChangeTimes->{{3.9293783151292963`*^9, 3.929378394986751*^9}, {
  3.9293794211150312`*^9, 3.929379421995411*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"e03bfd2a-466d-4478-b3e0-0c25d7c872b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pdeltacorelog", "[", 
  RowBox[{"0.001", ",", "3", ",", "0.5"}], "]"}]], "Input",
 CellChangeTimes->{{3.929379424230442*^9, 3.9293794330707207`*^9}, {
  3.92951136499629*^9, 3.9295114178428507`*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"6698805c-a5c3-4e1a-b97d-1d6b0805e241"],

Cell[BoxData["2.362798283965994`*^-48"], "Output",
 CellChangeTimes->{
  3.929378502621978*^9, {3.929379428181675*^9, 3.929379438616555*^9}, {
   3.929511367495749*^9, 3.929511418199421*^9}},
 CellLabel->
  "Out[170]=",ExpressionUUID->"e7a3ba51-3352-40b7-b9bf-fd38c334414e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdeltalog", "[", 
   RowBox[{"delta_", ",", "n_", ",", "L_"}], "]"}], ":=", 
  RowBox[{
   UnderscriptBox["\[Integral]", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"ai", "[", "n", "]"}], "]"}], "\[Element]", 
     RowBox[{"reg", "[", 
      RowBox[{"n", ",", "L"}], "]"}]}]], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"logcpd", "[", 
      RowBox[{"n", ",", "L"}], "]"}], "+", 
     RowBox[{"Log", "[", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox["a", "i"], 
        RowBox[{"(", 
         RowBox[{"L", "-", 
          SubscriptBox["a", "i"]}], ")"}], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["a", "i"], "-", "L"}], ")"}], "delta"}]]}]}], "]"}], 
     "+", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["b", "i"], 
       RowBox[{"Log", "[", 
        SubscriptBox["a", "i"], "]"}]}]}]}]]}]}]], "Input",
 CellChangeTimes->{{3.9293788111796713`*^9, 3.929378820779599*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"d9a58898-ecda-4088-87dd-6139c8ed38b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdeltanolog", "[", 
   RowBox[{"delta_", ",", "n_", ",", "L_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"constpdelta", "[", 
    RowBox[{"n", ",", "L"}], "]"}], 
   RowBox[{"pdeltacore", "[", 
    RowBox[{"delta", ",", "n", ",", "L"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9293788877106743`*^9, 3.929378914037065*^9}, {
  3.929379308480096*^9, 3.9293793135803413`*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"55589c5f-5590-4145-a643-1d0882f516ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pdeltalog", "[", 
  RowBox[{"0.001", ",", "3", ",", "0.5"}], "]"}]], "Input",
 CellChangeTimes->{{3.929378930895933*^9, 3.929378989190751*^9}, 
   3.929511465691638*^9},
 CellLabel->
  "In[174]:=",ExpressionUUID->"dbcb3ab4-37be-4afa-a300-85a7b77145a6"],

Cell[BoxData["0.12034909108150502`"], "Output",
 CellChangeTimes->{
  3.929379466715527*^9, 3.929442919136602*^9, {3.929511437992914*^9, 
   3.929511466290647*^9}},
 CellLabel->
  "Out[174]=",ExpressionUUID->"e39bf972-d260-4dae-83f2-b47ac410b501"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pdeltanolog", "[", 
  RowBox[{"0.001", ",", "3", ",", "0.5"}], "]"}]], "Input",
 CellChangeTimes->{{3.929378938310286*^9, 3.929378991717887*^9}, 
   3.9295114743910093`*^9},
 CellLabel->
  "In[177]:=",ExpressionUUID->"6911af03-c4bf-4120-8f6d-ac08d15919ce"],

Cell[BoxData["0.12034909108150661`"], "Output",
 CellChangeTimes->{{3.929378938815877*^9, 3.929378997850905*^9}, 
   3.929379470589466*^9, {3.929511475027254*^9, 3.929511492634355*^9}},
 CellLabel->
  "Out[177]=",ExpressionUUID->"fa656d33-6a5b-4200-8fcc-8f97d8e9a31a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdeltalogc", "[", 
   RowBox[{"delta_", ",", "n_", ",", "L_", ",", "c_"}], "]"}], ":=", 
  RowBox[{
   UnderscriptBox["\[Integral]", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"ai", "[", "n", "]"}], "]"}], "\[Element]", 
     RowBox[{"reg", "[", 
      RowBox[{"n", ",", "L"}], "]"}]}]], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"c", "+", 
     RowBox[{"Log", "[", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox["a", "i"], 
        RowBox[{"(", 
         RowBox[{"L", "-", 
          SubscriptBox["a", "i"]}], ")"}], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["a", "i"], "-", "L"}], ")"}], "delta"}]]}]}], "]"}], 
     "+", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["b", "i"], 
       RowBox[{"Log", "[", 
        SubscriptBox["a", "i"], "]"}]}]}]}]]}]}]], "Input",
 CellChangeTimes->{{3.9293795149254847`*^9, 3.9293795452873077`*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"cf462af4-b6da-46f3-9bc2-801f69f74888"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pdeltalogc", "[", 
  RowBox[{"0.001", ",", "3", ",", "0.5", ",", 
   RowBox[{"logcpd", "[", 
    RowBox[{"3", ",", "0.5"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92937964471245*^9, 3.9293796586549587`*^9}, {
  3.929443179838233*^9, 3.929443182510092*^9}, {3.9295115021322947`*^9, 
  3.929511506002481*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"04cd902f-052d-4efe-95c5-064366f68b9f"],

Cell[BoxData["0.12034909108150502`"], "Output",
 CellChangeTimes->{
  3.9293796625853243`*^9, {3.929442878771316*^9, 3.9294428911893682`*^9}, 
   3.929442931191915*^9, 3.929443183012444*^9, 3.929511506539926*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"4bdd897e-c9f0-41b3-9854-da0b6086a9df"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdeltabesselintegrand", "[", 
   RowBox[{"x_", ",", "delta_", ",", "n_", ",", "L_"}], "]"}], ":=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "n"], 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"BesselK", "[", 
       RowBox[{"2", ",", 
        RowBox[{
         SubscriptBox["b", "i"], 
         SqrtBox[
          RowBox[{
           RowBox[{"2", 
            RowBox[{"x", "/", 
             RowBox[{"B", "[", "n", "]"}]}]}], "+", "1"}]]}]}], "]"}], 
      RowBox[{
       RowBox[{"BesselK", "[", 
        RowBox[{"1", ",", 
         SubscriptBox["b", "i"]}], "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "x"}], "+", 
         RowBox[{"B", "[", "n", "]"}]}], ")"}]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"j", "=", "1"}], "n"], 
         FractionBox[
          RowBox[{"BesselK", "[", 
           RowBox[{"2", ",", 
            RowBox[{
             SubscriptBox["b", "j"], 
             SqrtBox[
              RowBox[{
               RowBox[{"2", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"x", "+", "delta"}], ")"}], "/", 
                 RowBox[{"B", "[", "n", "]"}]}]}], "+", "1"}]]}]}], "]"}], 
          RowBox[{
           RowBox[{"BesselK", "[", 
            RowBox[{"1", ",", 
             SubscriptBox["b", "j"]}], "]"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", 
              RowBox[{"(", 
               RowBox[{"x", "+", "delta"}], ")"}]}], "+", 
             RowBox[{"B", "[", "n", "]"}]}], ")"}]}]]}], ")"}], "-", 
       FractionBox[
        RowBox[{"BesselK", "[", 
         RowBox[{"2", ",", 
          RowBox[{
           SubscriptBox["b", "i"], 
           SqrtBox[
            RowBox[{
             RowBox[{"2", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"x", "+", "delta"}], ")"}], "/", 
               RowBox[{"B", "[", "n", "]"}]}]}], "+", "1"}]]}]}], "]"}], 
        RowBox[{
         RowBox[{"BesselK", "[", 
          RowBox[{"1", ",", 
           SubscriptBox["b", "i"]}], "]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{"x", "+", "delta"}], ")"}]}], "+", 
           RowBox[{"B", "[", "n", "]"}]}], ")"}]}]]}], ")"}], 
     FractionBox[
      RowBox[{
       UnderoverscriptBox["\[Product]", 
        RowBox[{"k", "=", "1"}], "n"], 
       FractionBox[
        RowBox[{"BesselK", "[", 
         RowBox[{"1", ",", 
          RowBox[{
           SubscriptBox["b", "k"], 
           SqrtBox[
            RowBox[{
             RowBox[{"2", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"x", "+", "delta"}], ")"}], "/", 
               RowBox[{"B", "[", "n", "]"}]}]}], "+", "1"}]]}]}], "]"}], 
        RowBox[{
         RowBox[{"BesselK", "[", 
          RowBox[{"1", ",", 
           SubscriptBox["b", "k"]}], "]"}], 
         SqrtBox[
          RowBox[{
           RowBox[{"2", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"x", "+", "delta"}], ")"}], "/", 
             RowBox[{"B", "[", "n", "]"}]}]}], "+", "1"}]]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"BesselK", "[", 
         RowBox[{"1", ",", 
          RowBox[{
           SubscriptBox["b", "i"], 
           SqrtBox[
            RowBox[{
             RowBox[{"2", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"x", "+", "delta"}], ")"}], "/", 
               RowBox[{"B", "[", "n", "]"}]}]}], "+", "1"}]]}]}], "]"}], 
        RowBox[{
         RowBox[{"BesselK", "[", 
          RowBox[{"1", ",", 
           SubscriptBox["b", "i"]}], "]"}], 
         SqrtBox[
          RowBox[{
           RowBox[{"2", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"x", "+", "delta"}], ")"}], "/", 
             RowBox[{"B", "[", "n", "]"}]}]}], "+", "1"}]]}]], 
       FractionBox[
        RowBox[{"BesselK", "[", 
         RowBox[{"1", ",", 
          RowBox[{
           SubscriptBox["b", "j"], 
           SqrtBox[
            RowBox[{
             RowBox[{"2", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"x", "+", "delta"}], ")"}], "/", 
               RowBox[{"B", "[", "n", "]"}]}]}], "+", "1"}]]}]}], "]"}], 
        RowBox[{
         RowBox[{"BesselK", "[", 
          RowBox[{"1", ",", 
           SubscriptBox["b", "j"]}], "]"}], 
         SqrtBox[
          RowBox[{
           RowBox[{"2", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"x", "+", "delta"}], ")"}], "/", 
             RowBox[{"B", "[", "n", "]"}]}]}], "+", "1"}]]}]]}]]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.929441984449128*^9, 3.929442002720049*^9}, {
   3.92944211436713*^9, 3.929442199692066*^9}, 3.929442259395535*^9, {
   3.929442350584672*^9, 3.9294426553772717`*^9}, 3.92944269203686*^9, {
   3.929442745003144*^9, 3.929442763510653*^9}, {3.929442799042666*^9, 
   3.929442848143564*^9}, {3.929511797184939*^9, 3.92951186875112*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"c57f5886-3414-45fd-97fe-6aab646c88f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdeltabessel", "[", 
   RowBox[{"delta_", ",", "n_", ",", "L_"}], "]"}], ":=", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
   RowBox[{
    RowBox[{"pdeltabesselintegrand", "[", 
     RowBox[{"x", ",", "delta", ",", "n", ",", "L"}], "]"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9294429580489388`*^9, 3.929442962336051*^9}, 
   3.9294430322846327`*^9, {3.9294430635819483`*^9, 3.929443078383597*^9}, 
   3.929443110961836*^9},
 CellLabel->
  "In[184]:=",ExpressionUUID->"744bfe96-9f45-4f3c-97e9-7158211e7969"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"pdeltabessel", "[", 
   RowBox[{"0.001", ",", "2", ",", "0.5"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9294431174009933`*^9, 3.929443140911433*^9}, 
   3.929511525149132*^9, {3.929512515821419*^9, 3.929512518020346*^9}, {
   3.929514271436961*^9, 3.929514271658093*^9}, {3.929514619267628*^9, 
   3.9295146321137753`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"4af46972-ab0a-49f2-a213-7527ba1ea0b8"],

Cell[BoxData[
 RowBox[{"pdeltabessel", "[", 
  RowBox[{"0.001`", ",", "2.`", ",", "0.5`"}], "]"}]], "Output",
 CellChangeTimes->{{3.9295146256516447`*^9, 3.9295146323961287`*^9}},
 CellLabel->"Out[3]=",ExpressionUUID->"58762e29-aabf-4bde-8f2d-cfa11d35d0bc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fkrt", "[", 
   RowBox[{"delta_", ",", "n_", ",", "L_", ",", "c_"}], "]"}], ":=", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "delta"], 
   RowBox[{
    RowBox[{"pdeltalogc", "[", 
     RowBox[{"x", ",", "n", ",", "L", ",", "c"}], "]"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.929378559796627*^9, 3.9293786332978067`*^9}, {
   3.92937905153549*^9, 3.929379057471586*^9}, {3.929379550261047*^9, 
   3.929379583813571*^9}, 3.9293831479285603`*^9},
 CellLabel->
  "In[179]:=",ExpressionUUID->"522cd6d5-aac2-4ade-a642-7099a9c5e651"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fr2", "[", 
   RowBox[{"delta_", ",", "n_", ",", "L_"}], "]"}], ":=", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "delta"], 
   RowBox[{
    RowBox[{"pdeltanolog", "[", 
     RowBox[{"x", ",", "n", ",", "L"}], "]"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9293830080992117`*^9, 3.9293830450978928`*^9}, 
   3.929383148853496*^9},
 CellLabel->
  "In[180]:=",ExpressionUUID->"d96ac2fe-35e8-4b09-b8a9-2872ec0f179e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fkrt", "[", 
  RowBox[{"13", ",", "5", ",", "0.3", ",", 
   RowBox[{"logcpd", "[", 
    RowBox[{"2", ",", "0.3"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.929378673018588*^9, 3.9293786968209963`*^9}, {
   3.929379596066983*^9, 3.929379606172347*^9}, {3.9293797011904497`*^9, 
   3.9293797013796453`*^9}, {3.9293798417533617`*^9, 
   3.9293798459335117`*^9}, {3.929380071907463*^9, 3.92938009017309*^9}, 
   3.929382943455933*^9, {3.929383065595986*^9, 3.929383065876318*^9}, {
   3.9293835328392143`*^9, 3.929383533290195*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"890552c7-0b05-4f56-8aec-5a1e3f856fc8"],

Cell[BoxData["0.5085261373518759`"], "Output",
 CellChangeTimes->{{3.9293786737391453`*^9, 3.929378688982587*^9}, 
   3.929378854283628*^9, 3.92937918612079*^9, 3.929379606726264*^9, 
   3.9293797016765947`*^9, 3.929379846708521*^9, {3.9293800754249687`*^9, 
   3.9293800906282473`*^9}, 3.9293829441408367`*^9, 3.929383066170223*^9, 
   3.929383364683181*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"cc3ee224-434f-4c97-8158-ec64d9b675d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fr2", "[", 
  RowBox[{"13", ",", "2", ",", "0.3"}], "]"}]], "Input",
 CellChangeTimes->{3.929383032882155*^9},
 CellLabel->
  "In[182]:=",ExpressionUUID->"bb7f7225-4638-4760-8f14-66eb46f7e541"],

Cell[BoxData["0.5085261373518759`"], "Output",
 CellChangeTimes->{{3.929383033322035*^9, 3.9293830595220327`*^9}, 
   3.929383524652535*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"bc12632e-9ff5-45c5-82bf-97a1d7bec732"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fr", "[", 
  RowBox[{"13", ",", "2", ",", "0.3"}], "]"}]], "Input",
 CellChangeTimes->{{3.929369452069417*^9, 3.929369453172903*^9}, 
   3.92937972109514*^9},
 CellLabel->
  "In[178]:=",ExpressionUUID->"ca880a0e-f9c7-40d9-90d9-13c4acb60f3b"],

Cell[BoxData["0.5085261373520673`"], "Output",
 CellChangeTimes->{3.929369454421853*^9, 3.9293798229097157`*^9, 
  3.9293831800722427`*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"db9f60e0-87e9-4d9f-8bb0-16c538f2dcf0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fr", "[", 
  RowBox[{"0.01", ",", "2", ",", "0.3"}], "]"}]], "Input",
 CellChangeTimes->{{3.9293694583502293`*^9, 3.92936945936092*^9}, {
  3.9293786932173433`*^9, 3.929378693418147*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"a05e1522-a9a9-473d-9bd5-49c0ae9c6d13"],

Cell[BoxData["0.00036300555021942835`"], "Output",
 CellChangeTimes->{3.929369564125135*^9, 3.929378779253557*^9, 
  3.9293792913756847`*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"f11fe1a5-6756-4f95-8e0b-3218b259008e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fr", "[", 
  RowBox[{"3", ",", "2", ",", "0.4"}], "]"}]], "Input",
 CellChangeTimes->{{3.929369124060699*^9, 3.9293691399829187`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"28c68c90-df4a-475e-8568-5f85ad568b7d"],

Cell[BoxData["0.24418633228938819`"], "Output",
 CellChangeTimes->{{3.929369130758478*^9, 3.929369135905344*^9}, 
   3.9293692545360527`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"3060455b-9596-408e-842f-3c1aaa7dd1a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fr", "[", 
  RowBox[{"1000", ",", "2", ",", "0.4"}], "]"}]], "Input",
 CellChangeTimes->{{3.929369262290653*^9, 3.9293692687028923`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"d429cc09-11d6-49d1-a07c-51190c3f7c23"],

Cell[BoxData["0.9904343604802224`"], "Output",
 CellChangeTimes->{3.929369402237522*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"129a4733-ccb4-4a05-87af-e936d03d8358"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fr", "[", 
  RowBox[{"100000", ",", "2", ",", "0.4"}], "]"}]], "Input",
 CellChangeTimes->{{3.929369471022304*^9, 3.9293694717263317`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"41f7bf6f-8294-443e-9e7e-2ccfa9ac3322"],

Cell[BoxData["0.9999999999998643`"], "Output",
 CellChangeTimes->{3.929369708193272*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"9995bc57-67af-4d89-b1aa-623f3c519f29"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"fr", "[", 
  RowBox[{"1000", ",", "2", ",", 
   RowBox[{"1", "/", "600"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9293697778356037`*^9, 3.9293697795418777`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"bb4caec9-24c5-408a-b07a-95fcfbfcdafa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   FractionBox["1", "625"], " ", 
   RowBox[{"(", 
    RowBox[{"2077", "-", 
     FractionBox["9972", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"5", "/", "3"}]]]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.929371403467757*^9, 3.929371406664269*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"08ecd64d-786b-4f54-beac-46a080c5c75e"],

Cell[BoxData["0.30965198160613366`"], "Output",
 CellChangeTimes->{3.9293714072219257`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"e93555aa-20d9-48c5-af7f-3ec77d988ff6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fr", "[", 
  RowBox[{"1000", ",", "5", ",", 
   RowBox[{"1", "/", "600"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.929369755046989*^9, 3.929369755920567*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"3e209812-d980-4802-a1f0-90b1a2d4ab43"],

Cell[BoxData[
 RowBox[{"418097219732987172618240000000000000000000000000000000000000000", 
  " ", 
  SqrtBox["5"], " ", 
  RowBox[{
  "TerminatedEvaluation", "[", "\<\"RecursionLimit\"\>", "]"}]}]], "Output",
 CellChangeTimes->{3.929371350164989*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"50b99242-d546-49f6-b850-09a42bc4cc80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fr", "[", 
  RowBox[{"100000", ",", "5", ",", 
   RowBox[{"1", "/", "600"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.929369722648335*^9, 3.9293697286784477`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"9ccbeafb-1762-467e-abee-4d6a873e3696"],

Cell[BoxData[
 RowBox[{"41809721973298717261824000000000000000000000000000000000000000000", 
  " ", 
  SqrtBox["5"], " ", 
  RowBox[{
  "TerminatedEvaluation", "[", "\<\"RecursionLimit\"\>", "]"}]}]], "Output",
 CellChangeTimes->{3.9293704316567783`*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"975edaf8-03af-4860-b224-310bf93e81de"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"840", " ", "/", "105"}], "*", "64"}]], "Input",
 CellChangeTimes->{{3.9293614747148323`*^9, 3.929361478498646*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"67007d6e-6d70-4cb5-8f83-a42d021788c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"512", "/", "64"}]], "Input",
 CellChangeTimes->{{3.929361482274206*^9, 3.929361484957377*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"c12d27cc-a8c0-4c08-892e-d8e3713cacea"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.929361485196631*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"1811dd98-840b-4740-9e38-c459608ac8bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.929347469080728*^9, 3.929347474174617*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"9a523adc-6ff7-481e-8c25-b43170ad57b8"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"362880", " ", 
   SqrtBox["10"]}]]], "Output",
 CellChangeTimes->{{3.929347470521578*^9, 3.929347482844965*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"923177b8-952c-4f11-b601-206f6137ad9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"K", "=", "38"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"bvec", "=", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "100"}], "}"}], ",", "K"}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bvec", "=", 
   RowBox[{"{", 
    RowBox[{
    "8704", ",", "7633", ",", "3485", ",", "3230", ",", "2007", ",", "1324", 
     ",", "1141", ",", "311", ",", "306", ",", "295", ",", "265", ",", "259", 
     ",", "256", ",", "241", ",", "169", ",", "137", ",", "56", ",", "28", 
     ",", "26", ",", "24", ",", "23", ",", "18", ",", "12", ",", "11", ",", 
     "7", ",", "6", ",", "4", ",", "4", ",", "3", ",", "3", ",", "2", ",", 
     "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
    "}"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Btot", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"bvec", "[", 
      RowBox[{"[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "K"}], "}"}]}], "]"}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"unnplb", "[", 
    RowBox[{"l_", ",", "b_", ",", "B_"}], "]"}], ":=", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", 
          RowBox[{"B", "  ", "l"}]}], ")"}], "^", "2"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", "B", "  ", "l"}], ")"}]}], "]"}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"clbzero", "[", 
    RowBox[{"l_", ",", "B_"}], "]"}], ":=", 
   RowBox[{"1", "-", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"B", "  ", "l"}], ")"}]}], "/", "2"}], "]"}]}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Zvec", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"unnplb", "[", 
        RowBox[{"ll", ",", 
         RowBox[{"bvec", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "Btot"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"ll", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "K"}], "}"}]}], "]"}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"marginalclb", "[", "l_", "]"}], ":=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "K"}], ")"}], "*", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{"unnplb", "[", 
          RowBox[{"ll", ",", 
           RowBox[{"bvec", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "Btot"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ll", ",", "l", ",", "1"}], "}"}]}], "]"}], "/", 
       RowBox[{"Zvec", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "K"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"LogLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"marginalclb", "[", "x", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.00001", ",", "0.5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.929335130708609*^9, 3.929335130709784*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"3980db10-7a95-49ed-88ba-eeb301c20a8e"],

Cell[BoxData["38"], "Output",
 CellChangeTimes->{3.929335144061441*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"2ed290df-3cf5-49de-b00c-f8bd12fa37a9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "8704", ",", "7633", ",", "3485", ",", "3230", ",", "2007", ",", "1324", 
   ",", "1141", ",", "311", ",", "306", ",", "295", ",", "265", ",", "259", 
   ",", "256", ",", "241", ",", "169", ",", "137", ",", "56", ",", "28", ",", 
   "26", ",", "24", ",", "23", ",", "18", ",", "12", ",", "11", ",", "7", ",",
    "6", ",", "4", ",", "4", ",", "3", ",", "3", ",", "2", ",", "2", ",", "2",
    ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.929335144062697*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"6395f673-8a24-4a5e-a1ed-574543d67ec3"],

Cell[BoxData["30000"], "Output",
 CellChangeTimes->{3.929335144063397*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"f5d5abf4-338e-4a22-9ba1-c4065ff9b9f0"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"ll\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"ll\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.009253696185545947`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0013620875657277352`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.6531953336946673`*^-9\\\"}]\\) for the integral and \
error estimates.\"", 2, 14, 1, 27149292963037077354, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.929335144112879*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"06cca430-ae93-4371-a559-f4b484962dfd"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"ll\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"ll\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.009253696185545947`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0013466234018993527`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8369003688970423`*^-9\\\"}]\\) for the integral and \
error estimates.\"", 2, 14, 2, 27149292963037077354, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9293351441160097`*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"ad5486c4-b019-47df-81ea-c2283bda70d8"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"ll\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"ll\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.0048454420992473405`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"0.00098064860353098`\
\\\"}]\\) and \\!\\(\\*RowBox[{\\\"2.092110453903664`*^-9\\\"}]\\) for the \
integral and error estimates.\"", 2, 14, 3, 27149292963037077354, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.929335144124431*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"cbca58e5-a000-4186-a093-62ab1661fc9c"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 14, 4, 27149292963037077354, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.929335144126389*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"405091fd-075c-4844-bf71-f1ef4d6d6620"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.00779555124066085`", ",", "0.0073002485316538525`", ",", 
   "0.004933064521454796`", ",", "0.0047491988504320915`", ",", 
   "0.003743893547746492`", ",", "0.0030411345271935063`", ",", 
   "0.002823281446249624`", ",", "0.0014752706467469846`", ",", 
   "0.0014633922447528215`", ",", "0.001436914157432276`", ",", 
   "0.0013620875657277352`", ",", "0.0013466234018993527`", ",", 
   "0.0013388243356110016`", ",", "0.0012991268933254675`", ",", 
   "0.001088611371286565`", ",", "0.00098064860353098`", ",", 
   "0.0006294269664047889`", ",", "0.0004479849038396797`", ",", 
   "0.0004321182645061002`", ",", "0.00041564606783321147`", ",", 
   "0.0004071599993341276`", ",", "0.0003617535706310449`", ",", 
   "0.00029826540269576587`", ",", "0.0002863160198322666`", ",", 
   "0.00023243340171565213`", ",", "0.0002168703641108548`", ",", 
   "0.0001817535853828445`", ",", "0.0001817535853828445`", ",", 
   "0.00016131269602575915`", ",", "0.00016131269602575915`", ",", 
   "0.0001377969129427521`", ",", "0.0001377969129427521`", ",", 
   "0.0001377969129427521`", ",", "0.0001377969129427521`", ",", 
   "0.00010907689908350476`", ",", "0.00010907689908350476`", ",", 
   "0.00010907689908350476`", ",", "0.00010907689908350476`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9293351441559267`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"cf872fb1-8a30-46bc-aee7-16c5174b0fad"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"ll\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"ll\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.009263605838698575`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0013620875657276963`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.6753621248679153`*^-9\\\"}]\\) for the integral and \
error estimates.\"", 2, 16, 5, 27149292963037077354, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.929335144359222*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"b45eb959-815d-40c3-b23f-1e288459081e"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"ll\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"ll\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.009263605838698575`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.001346623401701795`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.7808374370424637`*^-9\\\"}]\\) for the integral and \
error estimates.\"", 2, 16, 6, 27149292963037077354, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.929335144363223*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"7b5a0b54-786c-48c0-988c-103cce65c62c"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"ll\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"ll\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.004855395844685587`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.000980648603529403`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.1770884881814803`*^-9\\\"}]\\) for the integral and \
error estimates.\"", 2, 16, 7, 27149292963037077354, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.929335144371773*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"1ca18d34-30b6-4c8d-8646-6d188a2b5e0e"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 16, 8, 27149292963037077354, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.929335144374297*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"cd7cf981-31f8-41b4-abf5-ab7fb521e448"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
/wGST0Sp
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
/wGST0Sp
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-11.512925464970229`, -0.6931471805599453}, \
{-5.236318079786901, 0.}}, "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {-11.512925464970204`, -5.52722463977505}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Exp[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Log, Exp}, {Log, Exp}}|>, 
           "Primitives" -> {}, "GCFlag" -> False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-11.512925464970229`, -0.6931471805599453}, \
{-5.236318079786901, 0.}}, "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {-11.512925464970204`, -5.52722463977505}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Exp[
               Part[#, 1]], 
              Exp[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Log, Exp}, {Log, Exp}}|>, 
          "Primitives" -> {}, "GCFlag" -> False|>, 
        "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
/wGST0Sp
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-11.512925464970229`, -0.6931471805599453}, \
{-5.236318079786901, 0.}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {-11.512925464970204`, -5.52722463977505}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "ScalingFunctions" -> {{Log, Exp}, {Log, Exp}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-11.512925464970204`, -5.52722463977505},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      MachinePrecision, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      MachinePrecision, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-11.512925464970229`, -0.6931471805599453}, \
{-5.236318079786901, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      MachinePrecision, RotateLabel -> 0], 
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      MachinePrecision, RotateLabel -> 0]}, {{{-11.512925464970229`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}}, {-9.210340371976182, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}}, {-6.907755278982137, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.001\"", ShowStringCharacters -> False], 0.001, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
       0.}}, {-4.605170185988091, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.010\"", ShowStringCharacters -> False], 0.01, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
       0.}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.100\"", ShowStringCharacters -> False], 0.1, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
       0.}}, {-13.815510557964274`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-13.122363377404328`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-12.716898269296165`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-12.429216196844383`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-12.206072645530174`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-12.02375108873622, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-11.86960040890896, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-11.736069016284437`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-11.618285980628055`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-10.819778284410283`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-10.41431317630212, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-10.126631103850338`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-9.903487552536127, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-9.721165995742174, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-9.567015315914915, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-9.433483923290392, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-9.315700887634009, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-8.517193191416238, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-8.111728083308073, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-7.824046010856292, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-7.600902459542082, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-7.418580902748128, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-7.264430222920869, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-7.1308988302963465`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-7.013115794639964, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-6.214608098422191, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.809142990314028, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.521460917862246, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.298317366548036, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.115995809754082, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.961845129926823, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.8283137373023015`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.710530701645918, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.912023005428146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.506557897319982, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.2188758248682006`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.995732273553991, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.8134107167600364`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.659260036932778, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.5257286443082556`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.4079456086518722`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.6094379124341003`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.2039728043259361`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.916290731874155, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.6931471805599453, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {0., 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}, {{-5.298317366548036, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.005\"", ShowStringCharacters -> False], 0.005, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
       0.}}, {-4.605170185988091, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.010\"", ShowStringCharacters -> False], 0.01, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
       0.}}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.050\"", ShowStringCharacters -> False], 0.05, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
       0.}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.100\"", ShowStringCharacters -> False], 0.1, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
       0.}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.500\"", ShowStringCharacters -> False], 0.5, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 0.}}, {0., 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {-6.907755278982137, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-6.214608098422191, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.809142990314028, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.521460917862246, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.115995809754082, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.961845129926823, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.8283137373023015`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.710530701645918, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.912023005428146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.506557897319982, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.2188758248682006`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.8134107167600364`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.659260036932778, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.5257286443082556`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.4079456086518722`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.6094379124341003`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.2039728043259361`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.916290731874155, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.6931471805599453, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.6094379124341003`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.302585092994046, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellChangeTimes->{3.9293352209967203`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"92626c48-f52d-4bd1-88fc-3bdb19fb579f"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"BesselK", "[", 
         RowBox[{"1", ",", 
          SubscriptBox["b", "j"]}], "]"}], " ", 
        RowBox[{"BesselK", "[", 
         RowBox[{"2", ",", 
          RowBox[{
           SubscriptBox["b", "i"], " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             FractionBox[
              RowBox[{"2", " ", "x"}], 
              RowBox[{"Total", "[", 
               RowBox[{"Array", "[", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["b", "#1"], "&"}], ",", "n"}], "]"}], 
               "]"}]]}]]}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          UnderoverscriptBox["\[Product]", 
           RowBox[{"k", "=", "1"}], "n"], 
          FractionBox[
           RowBox[{"BesselK", "[", 
            RowBox[{"1", ",", 
             RowBox[{
              SubscriptBox["b", "k"], " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"delta", "+", "x"}], ")"}]}], 
                 RowBox[{"Total", "[", 
                  RowBox[{"Array", "[", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["b", "#1"], "&"}], ",", "n"}], "]"}], 
                  "]"}]]}]]}]}], "]"}], 
           RowBox[{
            RowBox[{"BesselK", "[", 
             RowBox[{"1", ",", 
              SubscriptBox["b", "k"]}], "]"}], " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"delta", "+", "x"}], ")"}]}], 
               RowBox[{"Total", "[", 
                RowBox[{"Array", "[", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["b", "#1"], "&"}], ",", "n"}], "]"}], 
                "]"}]]}]]}]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"delta", "+", "x"}], ")"}]}], 
           RowBox[{"Total", "[", 
            RowBox[{"Array", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["b", "#1"], "&"}], ",", "n"}], "]"}], "]"}]]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"j", "=", "1"}], "n"], 
           FractionBox[
            RowBox[{"BesselK", "[", 
             RowBox[{"2", ",", 
              RowBox[{
               SubscriptBox["b", "j"], " ", 
               SqrtBox[
                RowBox[{"1", "+", 
                 FractionBox[
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"delta", "+", "x"}], ")"}]}], 
                  RowBox[{"Total", "[", 
                   RowBox[{"Array", "[", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["b", "#1"], "&"}], ",", "n"}], "]"}], 
                   "]"}]]}]]}]}], "]"}], 
            RowBox[{
             RowBox[{"BesselK", "[", 
              RowBox[{"1", ",", 
               SubscriptBox["b", "j"]}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"delta", "+", "x"}], ")"}]}], "+", 
               RowBox[{"Total", "[", 
                RowBox[{"Array", "[", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["b", "#1"], "&"}], ",", "n"}], "]"}], "]"}]}],
               ")"}]}]]}], "-", 
          FractionBox[
           RowBox[{"BesselK", "[", 
            RowBox[{"2", ",", 
             RowBox[{
              SubscriptBox["b", "i"], " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"delta", "+", "x"}], ")"}]}], 
                 RowBox[{"Total", "[", 
                  RowBox[{"Array", "[", 
                   RowBox[{
                    RowBox[{
                    SubscriptBox["b", "#1"], "&"}], ",", "n"}], "]"}], 
                  "]"}]]}]]}]}], "]"}], 
           RowBox[{
            RowBox[{"BesselK", "[", 
             RowBox[{"1", ",", 
              SubscriptBox["b", "i"]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"delta", "+", "x"}], ")"}]}], "+", 
              RowBox[{"Total", "[", 
               RowBox[{"Array", "[", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["b", "#1"], "&"}], ",", "n"}], "]"}], "]"}]}], 
             ")"}]}]]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"BesselK", "[", 
         RowBox[{"1", ",", 
          RowBox[{
           SubscriptBox["b", "i"], " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             FractionBox[
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"delta", "+", "x"}], ")"}]}], 
              RowBox[{"Total", "[", 
               RowBox[{"Array", "[", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["b", "#1"], "&"}], ",", "n"}], "]"}], 
               "]"}]]}]]}]}], "]"}], " ", 
        RowBox[{"BesselK", "[", 
         RowBox[{"1", ",", 
          RowBox[{
           SubscriptBox["b", "j"], " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             FractionBox[
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"delta", "+", "x"}], ")"}]}], 
              RowBox[{"Total", "[", 
               RowBox[{"Array", "[", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["b", "#1"], "&"}], ",", "n"}], "]"}], 
               "]"}]]}]]}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "x"}], "+", 
          RowBox[{"Total", "[", 
           RowBox[{"Array", "[", 
            RowBox[{
             RowBox[{
              SubscriptBox["b", "#1"], "&"}], ",", "n"}], "]"}], "]"}]}], 
         ")"}]}], ")"}]}]}], ")"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{3.929512108608334*^9, 3.929512452018517*^9, 
  3.929512536923628*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"bdcfb751-ea8d-4a05-b31c-43c4569e641f"]
}, Open  ]]
},
WindowSize->{1120, 765},
WindowMargins->{{Automatic, -84}, {Automatic, 19}},
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"dad82b54-4cef-4a12-a306-6b3b7900e71e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 455, 11, 33, "Input",ExpressionUUID->"020414f0-c78a-45d0-8c44-c6b084e7cda5"],
Cell[1038, 35, 462, 11, 36, "Output",ExpressionUUID->"4ef271ea-95cf-4b31-8b8e-a4c76f749bd7"]
}, Open  ]],
Cell[1515, 49, 1664, 40, 50, "Input",ExpressionUUID->"f7d6b2ef-0140-4f01-8384-e5323fbc68f7"],
Cell[3182, 91, 1077, 28, 77, "Input",ExpressionUUID->"72090067-a333-448b-8ead-f5e7c6503f4b"],
Cell[CellGroupData[{
Cell[4284, 123, 585, 16, 67, "Input",ExpressionUUID->"5451c729-01b5-4500-b5f6-345df885032c"],
Cell[4872, 141, 526, 16, 75, "Output",ExpressionUUID->"d3116fae-3b4d-4156-a698-9097d388f45e"]
}, Open  ]],
Cell[5413, 160, 750, 20, 74, "Input",ExpressionUUID->"941f8af1-25dd-469d-b704-65f3b312793b"],
Cell[CellGroupData[{
Cell[6188, 184, 937, 24, 74, "Input",ExpressionUUID->"21200215-4f43-486b-91a9-a8660634c3be"],
Cell[7128, 210, 241, 5, 73, "Output",ExpressionUUID->"78b5c1ca-15f9-4943-b61f-bb62dea55db7"]
}, Open  ]],
Cell[7384, 218, 934, 25, 75, "Input",ExpressionUUID->"c3ef1e17-cfb9-45c1-90cf-5b504076beb1"],
Cell[CellGroupData[{
Cell[8343, 247, 403, 7, 30, "Input",ExpressionUUID->"36a62fd0-4672-40b2-bdfe-25c3abce736f"],
Cell[8749, 256, 1146, 19, 55, "Message",ExpressionUUID->"850672ca-e032-4818-8194-2429da5096e6"],
Cell[9898, 277, 1146, 19, 55, "Message",ExpressionUUID->"d4b6a29f-2dec-4e07-b57b-99fce223a08a"],
Cell[11047, 298, 1146, 19, 55, "Message",ExpressionUUID->"469b4377-b093-4b3e-bb84-4a5fc23fb921"],
Cell[12196, 319, 530, 11, 28, "Message",ExpressionUUID->"31bb0216-ea0b-47f9-aaeb-8d9db77fc079"],
Cell[12729, 332, 940, 25, 62, "Output",ExpressionUUID->"7079a9e0-8721-40c4-9443-57e5af8de4fa"]
}, Open  ]],
Cell[13684, 360, 340, 10, 30, "Input",ExpressionUUID->"a6dc217e-6c2e-4455-85cf-b71f02375ca1"],
Cell[14027, 372, 154, 3, 30, "Input",ExpressionUUID->"ad6ec0f3-f398-49c3-b9cc-f85fd383d99a"],
Cell[CellGroupData[{
Cell[14206, 379, 676, 18, 30, "Input",ExpressionUUID->"64a18b7c-963b-404d-a931-6ba88c4e9348"],
Cell[14885, 399, 448, 9, 34, "Output",ExpressionUUID->"0d86b39c-e613-4d1e-a43c-9a3123507436"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15370, 413, 278, 5, 30, "Input",ExpressionUUID->"d9b755e5-0dbe-4719-a139-77fbcf383869"],
Cell[15651, 420, 1619, 51, 98, "Output",ExpressionUUID->"c4d0b249-bede-4f74-b939-b009ef485741"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17307, 476, 1036, 28, 69, "Input",ExpressionUUID->"1f3eb08c-6d40-4b9e-893d-1c72db607ad6"],
Cell[18346, 506, 1490, 45, 131, "Output",ExpressionUUID->"a2d92866-5a32-4466-adef-8e88aad8234d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19873, 556, 1254, 32, 77, "Input",ExpressionUUID->"e33da255-bb3e-48ae-b044-a8ec062bd7a7"],
Cell[21130, 590, 806, 27, 62, "Output",ExpressionUUID->"6d95f80d-0404-4bd4-ad6a-4ecb35ac4fd6"]
}, Open  ]],
Cell[21951, 620, 1592, 53, 59, "Input",ExpressionUUID->"b1add258-7ac8-4d66-a894-e412ecc86e73"],
Cell[CellGroupData[{
Cell[23568, 677, 1677, 53, 62, "Input",ExpressionUUID->"0460b9cf-1e53-4961-8b19-b2a0fc8672e8"],
Cell[25248, 732, 4558, 113, 74, "Output",ExpressionUUID->"94520574-7bde-4dde-ad19-e835dddd83d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29843, 850, 1042, 33, 62, "Input",ExpressionUUID->"8c6da7ab-d741-4878-b28e-4a896b4a16c6"],
Cell[30888, 885, 158, 2, 34, "Output",ExpressionUUID->"aa27ef92-f4f7-4a54-81a8-d4b794d0d799"]
}, Open  ]],
Cell[31061, 890, 235, 4, 30, "Input",ExpressionUUID->"18236392-ae97-4c02-add7-501b5e4154b0"],
Cell[CellGroupData[{
Cell[31321, 898, 1403, 48, 59, "Input",ExpressionUUID->"18defeb8-4287-4d83-a296-e9cc6f53c0dd"],
Cell[32727, 948, 1404, 48, 62, "Output",ExpressionUUID->"89c377d2-949c-441a-92ee-f0984648ada1"]
}, Open  ]],
Cell[34146, 999, 756, 22, 69, "Input",ExpressionUUID->"2624f0dd-0b49-4d01-836b-9533ba658820"],
Cell[CellGroupData[{
Cell[34927, 1025, 816, 23, 77, "Input",ExpressionUUID->"215e534d-c1b3-4a4e-b1d6-db9df5c46e0e"],
Cell[35746, 1050, 156, 2, 34, "Output",ExpressionUUID->"956b8ff0-3efe-417b-b8e9-d597ef6acb74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35939, 1057, 703, 19, 67, "Input",ExpressionUUID->"55d0cb9d-5afd-4638-bdd8-709fac245591"],
Cell[36645, 1078, 638, 18, 64, "Output",ExpressionUUID->"c86a41de-ebc9-444d-acbb-ef25940c6f31"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37320, 1101, 2542, 68, 134, "Input",ExpressionUUID->"1c8f092d-338a-48d1-ad7e-0f7b522e76e4"],
Cell[39865, 1171, 2809, 85, 168, "Output",ExpressionUUID->"4ed6148b-7a2d-42ce-aa4e-bd8a65523d3f"]
}, Open  ]],
Cell[42689, 1259, 2970, 78, 90, "Input",ExpressionUUID->"c521479c-9a94-4e8e-9f81-d57c7b8e3acf"],
Cell[45662, 1339, 2495, 72, 87, "Input",ExpressionUUID->"25942d39-cd3f-43e7-8809-0a8d8ee63419"],
Cell[48160, 1413, 2290, 69, 82, "Input",ExpressionUUID->"093c2cbb-fcfe-4a8d-ae2e-8ce877b7d065"],
Cell[CellGroupData[{
Cell[50475, 1486, 415, 8, 30, "Input",ExpressionUUID->"8307acee-6e39-4dc0-a95b-b03552d14be0"],
Cell[50893, 1496, 234, 3, 34, "Output",ExpressionUUID->"b21898a5-cc79-4f2a-bb33-39ce02ce680b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51164, 1504, 340, 7, 30, "Input",ExpressionUUID->"fb6bd904-ed48-4ab0-a7e2-dbfd16aa7d17"],
Cell[51507, 1513, 190, 2, 34, "Output",ExpressionUUID->"d72db609-ab86-4a0b-9936-8a74e7d7f522"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51734, 1520, 462, 10, 30, "Input",ExpressionUUID->"df7b66b5-19cc-45c2-84a5-f666fffbd309"],
Cell[52199, 1532, 215, 3, 57, "Output",ExpressionUUID->"374a2263-09eb-462f-bbf9-fcd7ad244415"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52451, 1540, 438, 9, 30, "Input",ExpressionUUID->"3a2dd707-8189-4154-86ef-bee8fb841f06"],
Cell[52892, 1551, 241, 3, 34, "Output",ExpressionUUID->"77523fd0-cf99-4c89-912b-797e74d2b0a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53170, 1559, 240, 4, 30, "Input",ExpressionUUID->"26307ae1-2050-4215-880d-a15094777f79"],
Cell[53413, 1565, 179, 2, 34, "Output",ExpressionUUID->"eb9f9b06-67d0-4f4d-b4a9-3b92e95c7501"]
}, Open  ]],
Cell[53607, 1570, 1203, 30, 52, "Input",ExpressionUUID->"45bb55d1-edf1-4e8b-bcaa-b47e012aff92"],
Cell[54813, 1602, 125, 2, 30, "Input",ExpressionUUID->"a8fc1697-b0fb-45c7-b080-dcb0722bc18f"],
Cell[CellGroupData[{
Cell[54963, 1608, 613, 13, 30, "Input",ExpressionUUID->"5a8d79c7-f70c-4104-88dc-b07b945e72f4"],
Cell[55579, 1623, 193034, 3264, 408, 168962, 2868, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"d069921c-4e65-4873-99bf-a8ea9f9ff505"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248650, 4892, 388, 9, 45, "Input",ExpressionUUID->"c5d9e641-3c66-49b0-bb16-8c607d8294ab"],
Cell[249041, 4903, 199, 3, 34, "Output",ExpressionUUID->"a853e95b-bea5-4220-9a2a-2e7e378c7dcf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249277, 4911, 331, 7, 46, "Input",ExpressionUUID->"7f1d4a98-d3bc-46c7-ade3-69789f652d94"],
Cell[249611, 4920, 214, 4, 34, "Output",ExpressionUUID->"99d1d7b8-1c8b-4af9-aeaa-fb04f40d178e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249862, 4929, 748, 17, 45, "Input",ExpressionUUID->"c921ce38-512e-4320-b95c-8c80ff03c95c"],
Cell[250613, 4948, 750, 15, 28, "Message",ExpressionUUID->"34055512-f61d-480b-bc4b-8cd841e1c458"],
Cell[251366, 4965, 465, 12, 49, "Output",ExpressionUUID->"c712a3b0-cd63-48ee-be6c-f58f34b5903b"]
}, Open  ]],
Cell[251846, 4980, 490, 12, 46, "Input",ExpressionUUID->"a0d30c72-88f9-4d63-930f-2ba4a33e14bb"],
Cell[CellGroupData[{
Cell[252361, 4996, 287, 6, 52, "Input",ExpressionUUID->"11db0858-3284-4999-8737-b3a544945cd0"],
Cell[252651, 5004, 305, 5, 34, "Output",ExpressionUUID->"48e52b8e-76ab-41e5-a55d-32b641e9bf13"],
Cell[252959, 5011, 339, 6, 34, "Output",ExpressionUUID->"a4413d87-aaa9-4247-acd3-d2c1fa0a6244"]
}, Open  ]],
Cell[253313, 5020, 406, 12, 30, "Input",ExpressionUUID->"d092a796-c838-4491-a1ab-22ba4fb02844"],
Cell[CellGroupData[{
Cell[253744, 5036, 961, 21, 45, "Input",ExpressionUUID->"234cb5cb-d197-4e62-b1c7-76a61db3da58"],
Cell[254708, 5059, 1072, 30, 62, "Output",ExpressionUUID->"766908e2-1117-4fd7-80d2-4d9b0857bfee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255817, 5094, 612, 16, 46, "Input",ExpressionUUID->"ef0e8ab5-5fb9-459f-b69b-d06e89f7ffa5"],
Cell[256432, 5112, 513, 15, 46, "Output",ExpressionUUID->"5848b001-cef3-4b59-80f3-f782a5e2c2fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256982, 5132, 1138, 32, 50, "Input",ExpressionUUID->"0af05adf-366c-4149-b155-2cc67277b1ca"],
Cell[258123, 5166, 3042, 75, 49, "Output",ExpressionUUID->"6e8caaee-87eb-435f-b65e-882840935170"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261202, 5246, 930, 29, 50, "Input",ExpressionUUID->"e18f12cd-4c52-439b-bf1d-49500537be32"],
Cell[262135, 5277, 3499, 83, 49, "Output",ExpressionUUID->"c2cdcfa6-db03-4c64-bfc9-c0a3f2da994c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265671, 5365, 1206, 34, 60, "Input",ExpressionUUID->"88be444e-abdf-495c-bae5-2b7417b36e13"],
Cell[266880, 5401, 2235, 61, 84, "Output",ExpressionUUID->"2c017399-04a6-474b-b8ba-76181be777c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[269152, 5467, 3570, 88, 127, "Input",ExpressionUUID->"d151237c-776d-46b6-8603-d304e68ece60"],
Cell[272725, 5557, 449, 8, 51, "Output",ExpressionUUID->"a6fe224d-9341-4b2d-be41-c674592b2393"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273211, 5570, 1135, 33, 57, "Input",ExpressionUUID->"7e9f9abd-0c40-492c-82ad-26895fc1a1b7"],
Cell[274349, 5605, 161, 3, 34, "Output",ExpressionUUID->"f976d69c-6702-4bb1-affc-5ad230718b25"]
}, Open  ]],
Cell[274525, 5611, 2295, 65, 127, "Input",ExpressionUUID->"7751d226-7a82-4163-8ab9-049525d01792"],
Cell[276823, 5678, 128, 3, 30, "Input",ExpressionUUID->"e6288833-12e6-49d9-a26a-23446cbf731d"],
Cell[276954, 5683, 1465, 36, 55, "Input",ExpressionUUID->"a0f17429-8b01-4e8e-942d-9c9285a2d19a"],
Cell[CellGroupData[{
Cell[278444, 5723, 277, 5, 30, "Input",ExpressionUUID->"2d3a2f23-1246-4627-aaba-4bb34f9ed95e"],
Cell[278724, 5730, 323, 6, 34, "Output",ExpressionUUID->"1282af90-712f-4ef4-a12a-fc5dae53c198"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279084, 5741, 642, 11, 30, "Input",ExpressionUUID->"4338c257-9f78-47af-b951-c7ed4026004e"],
Cell[279729, 5754, 622, 9, 34, "Output",ExpressionUUID->"405f8ff3-0f18-4518-9a73-46197364f958"]
}, Open  ]],
Cell[280366, 5766, 1023, 30, 62, "Input",ExpressionUUID->"406ecd61-63b1-4c53-afb3-6dd66aecc62e"],
Cell[281392, 5798, 838, 26, 61, "Input",ExpressionUUID->"104145c3-ace3-4415-9249-066ed7297b61"],
Cell[CellGroupData[{
Cell[282255, 5828, 581, 10, 30, "Input",ExpressionUUID->"ce9e0473-8b5a-4cc7-99c5-9192fbebc8c0"],
Cell[282839, 5840, 437, 6, 34, "Output",ExpressionUUID->"6ef6778e-39fb-4495-bfba-5fd91ddd9754"]
}, Open  ]],
Cell[283291, 5849, 154, 3, 30, "Input",ExpressionUUID->"3ef72409-02b2-4087-b98b-d48cd3981783"],
Cell[CellGroupData[{
Cell[283470, 5856, 392, 9, 46, "Input",ExpressionUUID->"8c705b84-ddac-41d2-b8bb-e26b9c088e25"],
Cell[283865, 5867, 582, 18, 46, "Output",ExpressionUUID->"e5bd0919-75df-4f7c-b8ea-85922fb5a73a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284484, 5890, 642, 17, 51, "Input",ExpressionUUID->"9a0d1c67-0990-419f-aa07-fde502fbbafa"],
Cell[285129, 5909, 2028, 57, 97, "Output",ExpressionUUID->"59d748bf-1e5a-4b3a-9d4b-e647ab35a25f"]
}, Open  ]],
Cell[287172, 5969, 371, 8, 46, "Input",ExpressionUUID->"4cd8924a-2b24-4bda-b78b-898e342a7e4e"],
Cell[287546, 5979, 564, 15, 53, "Input",ExpressionUUID->"108dbe42-75a5-41f4-a7b2-400bc71dfa16"],
Cell[288113, 5996, 651, 18, 51, "Input",ExpressionUUID->"450bbde4-77ed-44d3-885c-41eceeafc6b4"],
Cell[288767, 6016, 1529, 46, 47, "Input",ExpressionUUID->"56d281e4-15d7-4d82-a1a0-f9981a7644dd"],
Cell[CellGroupData[{
Cell[290321, 6066, 1153, 31, 46, "Input",ExpressionUUID->"cf107c7b-48c3-4a93-8073-12bf5447f6ef"],
Cell[291477, 6099, 1176, 35, 80, "Output",ExpressionUUID->"373af893-02f3-4e13-b7af-d1b05404d58f"]
}, Open  ]],
Cell[292668, 6137, 914, 25, 34, "Input",ExpressionUUID->"28b791e8-b8d7-4653-a69e-5976921f2b39"],
Cell[CellGroupData[{
Cell[293607, 6166, 600, 15, 46, "Input",ExpressionUUID->"a7658dc1-f153-4f34-8d97-8160e5cb7a90"],
Cell[294210, 6183, 530, 14, 64, "Output",ExpressionUUID->"9cc7cb85-7afb-49f8-8e90-16be0326a232"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294777, 6202, 429, 11, 46, "Input",ExpressionUUID->"1cc76e6c-3a36-419f-a4f0-a9f2ee2d60a7"],
Cell[295209, 6215, 718, 20, 57, "Output",ExpressionUUID->"256f82ef-f627-494f-b7a4-fa47567872c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295964, 6240, 380, 8, 44, "Input",ExpressionUUID->"1a39256c-48f0-46ee-8bc3-693d71522b0c"],
Cell[296347, 6250, 391, 9, 51, "Output",ExpressionUUID->"ee203e44-94da-49be-b22d-9c7065d0371c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296775, 6264, 154, 3, 30, "Input",ExpressionUUID->"c4873200-891e-4117-9065-35815989efcc"],
Cell[296932, 6269, 471, 12, 34, "Output",ExpressionUUID->"4bf85116-7f98-4107-ba7a-d600793f2e40"]
}, Open  ]],
Cell[297418, 6284, 1050, 20, 58, "Input",ExpressionUUID->"7b8d4e63-eda9-4540-aaa6-56c54e0023bd"],
Cell[298471, 6306, 801, 18, 54, "Input",ExpressionUUID->"570f118e-38bf-4ca0-823d-f7d522acf5d9"],
Cell[CellGroupData[{
Cell[299297, 6328, 482, 10, 30, "Input",ExpressionUUID->"96e4c560-5274-4277-b80c-83324fd01c99"],
Cell[299782, 6340, 399, 5, 34, "Output",ExpressionUUID->"689382f6-d84d-4d19-b004-b2cfba5ddfb7"]
}, Open  ]],
Cell[300196, 6348, 178, 3, 30, "Input",ExpressionUUID->"fc0e6a41-483b-4c85-b6ea-b7938f54636a"],
Cell[300377, 6353, 856, 21, 62, "Input",ExpressionUUID->"b3c37930-ffc3-40f5-a70c-3eca9170a491"],
Cell[301236, 6376, 322, 5, 30, "Input",ExpressionUUID->"5767cb4e-85a5-4862-8299-769e7de787e0"],
Cell[301561, 6383, 1200, 29, 54, "Input",ExpressionUUID->"2d36999a-b9df-4f16-a3ea-15b451e9856e"],
Cell[CellGroupData[{
Cell[302786, 6416, 891, 14, 30, "Input",ExpressionUUID->"ee6362fd-a505-4fd9-981e-6164b5ec5e05"],
Cell[303680, 6432, 434, 8, 54, "Output",ExpressionUUID->"68c56815-382b-4ab0-90a1-468c8dfd9484"]
}, Open  ]],
Cell[304129, 6443, 680, 21, 54, "Input",ExpressionUUID->"03c3eda8-0148-4488-8088-b723af025689"],
Cell[304812, 6466, 248, 4, 30, "Input",ExpressionUUID->"5ecc7f40-a6c0-44e0-bce3-0abbeb0a6d45"],
Cell[305063, 6472, 350, 8, 30, "Input",ExpressionUUID->"b3fc2227-eec3-4183-af91-f7f387489aab"],
Cell[305416, 6482, 1225, 36, 63, "Input",ExpressionUUID->"a974bd84-c1b4-4f4f-b30a-b81cd0b079c5"],
Cell[CellGroupData[{
Cell[306666, 6522, 433, 11, 46, "Input",ExpressionUUID->"937ca448-d3b5-4b4c-868d-dc4c83756238"],
Cell[307102, 6535, 455, 14, 55, "Output",ExpressionUUID->"2030f883-37f0-4a86-bbfd-0a81f5601f88"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307594, 6554, 672, 22, 56, "Input",ExpressionUUID->"439cd7b4-3f5b-4e88-846e-6b3b8cc2396d"],
Cell[308269, 6578, 735, 23, 60, "Output",ExpressionUUID->"9018c2bf-6a3c-4390-907e-a4a733d5bc33"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309041, 6606, 321, 6, 30, "Input",ExpressionUUID->"26662e0d-dbc6-4b02-ac63-6db3f0e89548"],
Cell[309365, 6614, 271, 4, 34, "Output",ExpressionUUID->"45aa6bd5-6f62-4d53-9d65-b3c0fc7debd1"]
}, Open  ]],
Cell[309651, 6621, 572, 15, 46, "Input",ExpressionUUID->"9c18a058-6392-4c70-9edc-eeb8bb246d45"],
Cell[310226, 6638, 1242, 36, 63, "Input",ExpressionUUID->"a8595887-7df2-4ea7-85ab-73829f5bda37"],
Cell[311471, 6676, 1244, 35, 61, "Input",ExpressionUUID->"d0f87153-6042-4836-b402-55828f8808e7"],
Cell[CellGroupData[{
Cell[312740, 6715, 579, 14, 30, "Input",ExpressionUUID->"3c01dbf0-646a-433a-94d7-942c712438f6"],
Cell[313322, 6731, 838, 15, 56, "Output",ExpressionUUID->"f074e30f-ab7e-4e43-86cc-68de8904ca79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314197, 6751, 581, 14, 30, "Input",ExpressionUUID->"39afe0af-5814-4b13-9e00-668875d5f876"],
Cell[314781, 6767, 843, 15, 56, "Output",ExpressionUUID->"c8b87fa9-9699-4722-b896-2afa60044ed6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315661, 6787, 886, 14, 30, "Input",ExpressionUUID->"d88930c5-f6d7-497c-b0a8-ed0fae43fd13"],
Cell[316550, 6803, 781, 11, 34, "Output",ExpressionUUID->"fca4b6c8-701f-4df1-adb1-20caead53529"]
}, Open  ]],
Cell[317346, 6817, 741, 11, 30, "Input",ExpressionUUID->"d944711f-c5d1-4292-bc06-a54b8208d05f"],
Cell[CellGroupData[{
Cell[318112, 6832, 307, 7, 46, "Input",ExpressionUUID->"4db847c1-d717-4ae0-9844-eab17b5f8bec"],
Cell[318422, 6841, 375, 11, 64, "Output",ExpressionUUID->"f69bc2e1-2187-4e61-9a44-c7a83ab6d29a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318834, 6857, 487, 13, 46, "Input",ExpressionUUID->"6e29f163-42b8-4121-9773-2da0a9a193a7"],
Cell[319324, 6872, 3004, 77, 74, "Output",ExpressionUUID->"932cb826-0ade-46e7-879a-67a46a0f099c"]
}, Open  ]],
Cell[322343, 6952, 1157, 29, 57, "Input",ExpressionUUID->"d7dbdcfd-0bce-4c92-9d39-7f8ad014c789"],
Cell[CellGroupData[{
Cell[323525, 6985, 419, 7, 30, "Input",ExpressionUUID->"abbd1a42-c378-4aa5-b808-205c8a3ccf84"],
Cell[323947, 6994, 543, 7, 34, "Output",ExpressionUUID->"61979717-207d-424d-8213-38edb70fcdef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324527, 7006, 235, 5, 30, "Input",ExpressionUUID->"f3b95a2c-257b-4c57-a051-0a351badd800"],
Cell[324765, 7013, 193, 3, 34, "Output",ExpressionUUID->"7fdefcff-ffec-4257-a29d-76ed4694c952"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324995, 7021, 568, 9, 30, "Input",ExpressionUUID->"a0c0a75c-cabe-45f3-aa35-3f75dbf85c2a"],
Cell[325566, 7032, 730, 21, 46, "Output",ExpressionUUID->"b633cb10-3c64-4160-ba90-b51b7115f03e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326333, 7058, 477, 11, 30, "Input",ExpressionUUID->"b7016c5e-a636-4fb6-9a53-a7fad2a98b77"],
Cell[326813, 7071, 271, 4, 34, "Output",ExpressionUUID->"8a05b6b8-59c9-4a33-b523-17f262cec62e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327121, 7080, 525, 13, 52, "Input",ExpressionUUID->"310ac194-8b3a-42b6-8fa5-e34d2a5fe04d"],
Cell[327649, 7095, 196, 2, 34, "Output",ExpressionUUID->"c8953dd4-1879-4260-8f38-89f6be5e82e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327882, 7102, 1442, 42, 56, "Input",ExpressionUUID->"8a585626-0a19-4307-81f0-d7811d9dff6c"],
Cell[329327, 7146, 1124, 35, 58, "Output",ExpressionUUID->"05c21d39-2db3-43d0-addb-51fd38f1f447"]
}, Open  ]],
Cell[330466, 7184, 152, 3, 30, "Input",ExpressionUUID->"5784537b-96db-4bb6-80a7-24801a248731"],
Cell[CellGroupData[{
Cell[330643, 7191, 200, 4, 30, "Input",ExpressionUUID->"017d19f0-8d5a-41bd-b997-c170652f8d3e"],
Cell[330846, 7197, 153, 3, 34, "Output",ExpressionUUID->"981d2c61-e9b8-4747-97b4-2635e5d63118"]
}, Open  ]],
Cell[331014, 7203, 352, 9, 56, "Input",ExpressionUUID->"aa17140f-4e77-4489-b2e1-693a357d67f5"],
Cell[CellGroupData[{
Cell[331391, 7216, 203, 4, 30, "Input",ExpressionUUID->"af938119-c352-461c-b8e9-6edf2c98e844"],
Cell[331597, 7222, 160, 3, 34, "Output",ExpressionUUID->"b5f78f36-dd38-468e-a32d-ed17367a041e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331794, 7230, 786, 24, 61, "Input",ExpressionUUID->"71f07ff8-d266-42b0-b58d-8339763d4391"],
Cell[332583, 7256, 170, 3, 34, "Output",ExpressionUUID->"5756da33-50ef-47ef-b880-d399a6ce0687"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332790, 7264, 254, 5, 30, "Input",ExpressionUUID->"80706d09-a7f4-4b2b-9fc6-87250a767d23"],
Cell[333047, 7271, 522, 7, 34, "Output",ExpressionUUID->"80711b45-c90a-48bd-8ba5-829d37b191ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333606, 7283, 902, 14, 30, "Input",ExpressionUUID->"e287b507-b27d-4619-ac70-0042e671de9b"],
Cell[334511, 7299, 643, 10, 34, "Output",ExpressionUUID->"7f2101dd-461e-4580-8232-ebaa9283cda8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335191, 7314, 533, 8, 30, "Input",ExpressionUUID->"d1d7645a-0183-4d4a-a44c-85d7ce438342"],
Cell[335727, 7324, 531, 7, 34, "Output",ExpressionUUID->"95c5681e-e514-4ba0-9fb4-ca33cbcdc4de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336295, 7336, 166, 3, 30, "Input",ExpressionUUID->"f9bea19a-92f5-497c-9c32-3bd3d2f62297"],
Cell[336464, 7341, 167, 2, 34, "Output",ExpressionUUID->"3d8e8d1e-74c1-4105-bf5e-28682835fa06"]
}, Open  ]],
Cell[336646, 7346, 1264, 38, 61, "Input",ExpressionUUID->"e03bfd2a-466d-4478-b3e0-0c25d7c872b2"],
Cell[CellGroupData[{
Cell[337935, 7388, 306, 6, 30, "Input",ExpressionUUID->"6698805c-a5c3-4e1a-b97d-1d6b0805e241"],
Cell[338244, 7396, 274, 5, 34, "Output",ExpressionUUID->"e7a3ba51-3352-40b7-b9bf-fd38c334414e"]
}, Open  ]],
Cell[338533, 7404, 1282, 39, 61, "Input",ExpressionUUID->"d9a58898-ecda-4088-87dd-6139c8ed38b6"],
Cell[339818, 7445, 490, 12, 30, "Input",ExpressionUUID->"55589c5f-5590-4145-a643-1d0882f516ee"],
Cell[CellGroupData[{
Cell[340333, 7461, 276, 6, 30, "Input",ExpressionUUID->"dbcb3ab4-37be-4afa-a300-85a7b77145a6"],
Cell[340612, 7469, 247, 5, 34, "Output",ExpressionUUID->"e39bf972-d260-4dae-83f2-b47ac410b501"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340896, 7479, 280, 6, 30, "Input",ExpressionUUID->"6911af03-c4bf-4120-8f6d-ac08d15919ce"],
Cell[341179, 7487, 268, 4, 34, "Output",ExpressionUUID->"fa656d33-6a5b-4200-8fcc-8f97d8e9a31a"]
}, Open  ]],
Cell[341462, 7494, 1233, 37, 61, "Input",ExpressionUUID->"cf462af4-b6da-46f3-9bc2-801f69f74888"],
Cell[CellGroupData[{
Cell[342720, 7535, 423, 9, 30, "Input",ExpressionUUID->"04cd902f-052d-4efe-95c5-064366f68b9f"],
Cell[343146, 7546, 295, 5, 34, "Output",ExpressionUUID->"4bdd897e-c9f0-41b3-9854-da0b6086a9df"]
}, Open  ]],
Cell[343456, 7554, 5259, 158, 204, "Input",ExpressionUUID->"c57f5886-3414-45fd-97fe-6aab646c88f4"],
Cell[348718, 7714, 608, 14, 46, "Input",ExpressionUUID->"744bfe96-9f45-4f3c-97e9-7158211e7969"],
Cell[CellGroupData[{
Cell[349351, 7732, 453, 8, 30, "Input",ExpressionUUID->"4af46972-ab0a-49f2-a213-7527ba1ea0b8"],
Cell[349807, 7742, 257, 4, 34, "Output",ExpressionUUID->"58762e29-aabf-4bde-8f2d-cfa11d35d0bc"]
}, Open  ]],
Cell[350079, 7749, 611, 14, 46, "Input",ExpressionUUID->"522cd6d5-aac2-4ade-a642-7099a9c5e651"],
Cell[350693, 7765, 495, 13, 46, "Input",ExpressionUUID->"d96ac2fe-35e8-4b09-b8a9-2872ec0f179e"],
Cell[CellGroupData[{
Cell[351213, 7782, 642, 12, 30, "Input",ExpressionUUID->"890552c7-0b05-4f56-8aec-5a1e3f856fc8"],
Cell[351858, 7796, 442, 7, 34, "Output",ExpressionUUID->"cc3ee224-434f-4c97-8158-ec64d9b675d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352337, 7808, 217, 5, 30, "Input",ExpressionUUID->"bb7f7225-4638-4760-8f14-66eb46f7e541"],
Cell[352557, 7815, 223, 4, 34, "Output",ExpressionUUID->"bc12632e-9ff5-45c5-82bf-97a1d7bec732"]
}, Open  ]],
Cell[CellGroupData[{
Cell[352817, 7824, 265, 6, 30, "Input",ExpressionUUID->"ca880a0e-f9c7-40d9-90d9-13c4acb60f3b"],
Cell[353085, 7832, 222, 4, 34, "Output",ExpressionUUID->"db9f60e0-87e9-4d9f-8bb0-16c538f2dcf0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353344, 7841, 294, 6, 30, "Input",ExpressionUUID->"a05e1522-a9a9-473d-9bd5-49c0ae9c6d13"],
Cell[353641, 7849, 224, 4, 34, "Output",ExpressionUUID->"f11fe1a5-6756-4f95-8e0b-3218b259008e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[353902, 7858, 237, 4, 30, "Input",ExpressionUUID->"28c68c90-df4a-475e-8568-5f85ad568b7d"],
Cell[354142, 7864, 220, 3, 34, "Output",ExpressionUUID->"3060455b-9596-408e-842f-3c1aaa7dd1a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354399, 7872, 240, 4, 30, "Input",ExpressionUUID->"d429cc09-11d6-49d1-a07c-51190c3f7c23"],
Cell[354642, 7878, 167, 2, 34, "Output",ExpressionUUID->"129a4733-ccb4-4a05-87af-e936d03d8358"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354846, 7885, 242, 4, 30, "Input",ExpressionUUID->"41f7bf6f-8294-443e-9e7e-2ccfa9ac3322"],
Cell[355091, 7891, 167, 2, 34, "Output",ExpressionUUID->"9995bc57-67af-4d89-b1aa-623f3c519f29"]
}, Open  ]],
Cell[355273, 7896, 266, 5, 30, "Input",ExpressionUUID->"bb4caec9-24c5-408a-b07a-95fcfbfcdafa"],
Cell[CellGroupData[{
Cell[355564, 7905, 395, 10, 50, "Input",ExpressionUUID->"08ecd64d-786b-4f54-beac-46a080c5c75e"],
Cell[355962, 7917, 170, 2, 34, "Output",ExpressionUUID->"e93555aa-20d9-48c5-af7f-3ec77d988ff6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356169, 7924, 262, 5, 30, "Input",ExpressionUUID->"3e209812-d980-4802-a1f0-90b1a2d4ab43"],
Cell[356434, 7931, 329, 7, 35, "Output",ExpressionUUID->"50b99242-d546-49f6-b850-09a42bc4cc80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356800, 7943, 266, 5, 30, "Input",ExpressionUUID->"9ccbeafb-1762-467e-abee-4d6a873e3696"],
Cell[357069, 7950, 333, 7, 35, "Output",ExpressionUUID->"975edaf8-03af-4860-b224-310bf93e81de"]
}, Open  ]],
Cell[357417, 7960, 229, 4, 30, "Input",ExpressionUUID->"67007d6e-6d70-4cb5-8f83-a42d021788c0"],
Cell[CellGroupData[{
Cell[357671, 7968, 197, 3, 30, "Input",ExpressionUUID->"c12d27cc-a8c0-4c08-892e-d8e3713cacea"],
Cell[357871, 7973, 149, 2, 34, "Output",ExpressionUUID->"1811dd98-840b-4740-9e38-c459608ac8bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358057, 7980, 200, 3, 30, "Input",ExpressionUUID->"9a523adc-6ff7-481e-8c25-b43170ad57b8"],
Cell[358260, 7985, 235, 5, 54, "Output",ExpressionUUID->"923177b8-952c-4f11-b601-206f6137ad9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358532, 7995, 3351, 100, 346, "Input",ExpressionUUID->"3980db10-7a95-49ed-88ba-eeb301c20a8e"],
Cell[361886, 8097, 149, 2, 34, "Output",ExpressionUUID->"2ed290df-3cf5-49de-b00c-f8bd12fa37a9"],
Cell[362038, 8101, 624, 10, 34, "Output",ExpressionUUID->"6395f673-8a24-4a5e-a1ed-574543d67ec3"],
Cell[362665, 8113, 153, 2, 34, "Output",ExpressionUUID->"f5d5abf4-338e-4a22-9ba1-c4065ff9b9f0"],
Cell[362821, 8117, 760, 15, 48, "Message",ExpressionUUID->"06cca430-ae93-4371-a559-f4b484962dfd"],
Cell[363584, 8134, 762, 15, 48, "Message",ExpressionUUID->"ad5486c4-b019-47df-81ea-c2283bda70d8"],
Cell[364349, 8151, 756, 14, 28, "Message",ExpressionUUID->"cbca58e5-a000-4186-a093-62ab1661fc9c"],
Cell[365108, 8167, 453, 10, 28, "Message",ExpressionUUID->"405091fd-075c-4844-bf71-f1ef4d6d6620"],
Cell[365564, 8179, 1432, 24, 77, "Output",ExpressionUUID->"cf872fb1-8a30-46bc-aee7-16c5174b0fad"],
Cell[366999, 8205, 760, 15, 48, "Message",ExpressionUUID->"b45eb959-815d-40c3-b23f-1e288459081e"],
Cell[367762, 8222, 759, 15, 48, "Message",ExpressionUUID->"7b5a0b54-786c-48c0-988c-103cce65c62c"],
Cell[368524, 8239, 759, 15, 48, "Message",ExpressionUUID->"1ca18d34-30b6-4c8d-8646-6d188a2b5e0e"],
Cell[369286, 8256, 453, 10, 28, "Message",ExpressionUUID->"cd7cf981-31f8-41b4-abf5-ab7fb521e448"],
Cell[369742, 8268, 81818, 1494, 247, "Output",ExpressionUUID->"92626c48-f52d-4bd1-88fc-3bdb19fb579f"],
Cell[451563, 9764, 6755, 193, 234, "Output",ExpressionUUID->"bdcfb751-ea8d-4a05-b31c-43c4569e641f"]
}, Open  ]]
}
]
*)

